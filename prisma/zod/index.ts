import { z } from 'zod';
import { Prisma } from '@prisma/client';

/////////////////////////////////////////
// HELPER FUNCTIONS
/////////////////////////////////////////

// JSON
//------------------------------------------------------

export type NullableJsonInput = Prisma.JsonValue | null | 'JsonNull' | 'DbNull' | Prisma.NullTypes.DbNull | Prisma.NullTypes.JsonNull;

export const transformJsonNull = (v?: NullableJsonInput) => {
  if (!v || v === 'DbNull') return Prisma.DbNull;
  if (v === 'JsonNull') return Prisma.JsonNull;
  return v;
};

export const JsonValueSchema: z.ZodType<Prisma.JsonValue> = z.lazy(() =>
  z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.literal(null),
    z.record(z.lazy(() => JsonValueSchema.optional())),
    z.array(z.lazy(() => JsonValueSchema)),
  ])
);

export type JsonValueType = z.infer<typeof JsonValueSchema>;

export const NullableJsonValue = z
  .union([JsonValueSchema, z.literal('DbNull'), z.literal('JsonNull')])
  .nullable()
  .transform((v) => transformJsonNull(v));

export type NullableJsonValueType = z.infer<typeof NullableJsonValue>;

export const InputJsonValueSchema: z.ZodType<Prisma.InputJsonValue> = z.lazy(() =>
  z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.object({ toJSON: z.function(z.tuple([]), z.any()) }),
    z.record(z.lazy(() => z.union([InputJsonValueSchema, z.literal(null)]))),
    z.array(z.lazy(() => z.union([InputJsonValueSchema, z.literal(null)]))),
  ])
);

export type InputJsonValueType = z.infer<typeof InputJsonValueSchema>;


/////////////////////////////////////////
// ENUMS
/////////////////////////////////////////

export const TransactionIsolationLevelSchema = z.enum(['ReadUncommitted','ReadCommitted','RepeatableRead','Serializable']);

export const TenantScalarFieldEnumSchema = z.enum(['id','name','createdAt']);

export const UserScalarFieldEnumSchema = z.enum(['id','name','email','password','role','tenantId','createdAt']);

export const PermissionScalarFieldEnumSchema = z.enum(['id','type','userId']);

export const BoxScalarFieldEnumSchema = z.enum(['id','code','fullCode','weight','length','width','height','hasBattery','productNameEn','productNameCn','declaredValue','declaredQuantity','material','hsCode','usage','brand','model','sku','asin','fnsku','fbaOrderId','tradOrderId']);

export const ShipmentLogScalarFieldEnumSchema = z.enum(['id','shipmentId','status','remark','location','timestamp']);

export const CustomerScalarFieldEnumSchema = z.enum(['id','name','companyName','tenantId','email','phone','address','status','settlementMethod','financeContactId','businessLicense','idCard','attachments','notes','createdAt','updatedAt']);

export const FBAOrderScalarFieldEnumSchema = z.enum(['id','channelId','freightCost','totalCost','recipient','country','quantity','weight','volume','volumetricWeight','chargeWeight','cargo','status','createdAt','tenantId','customerId','userId','type','warehouse','length','width','height','hasBattery','hasMagnetic','hasDangerous','hasLiquid','hasPowder','clientCode','company','phone','email','store','ref1','vat','ioss','eori','currency','category','productName','attrs','notes','insurance','address1','address2','address3','addressDetail','city','state','postalCode','declaredValue','declaredQuantity','senderId','senderName','extraFee','waybillRuleId','waybillNumber','billingPrecision','isCOD','allowCustomerCancel','trackingNumber','labelUploaded','errors','carrierId']);

export const AttachmentScalarFieldEnumSchema = z.enum(['id','name','path','type','waybillId']);

export const CarrierScalarFieldEnumSchema = z.enum(['id','name','code','website','logoUrl','description','region','createdAt']);

export const ChannelScalarFieldEnumSchema = z.enum(['id','name','code','type','country','warehouse','origin','currency','decimal','method','rounding','compareMode','volRatio','cubeRatio','splitRatio','chargeMethod','minCharge','ticketPrecision','boxPrecision','sizePrecision','minPieces','maxPieces','minBoxRealWeight','minBoxMaterialWeight','minBoxChargeWeight','minBoxAvgWeight','minTicketChargeWeight','maxTicketChargeWeight','minTicketRealWeight','maxTicketRealWeight','minBoxRealWeightLimit','maxBoxRealWeight','minBoxChargeWeightLimit','maxBoxChargeWeight','minDeclareValue','maxDeclareValue','aging','waybillRuleId','labelCode','assignedUser','userLevel','declareCurrency','defaultDeclareCurrency','sender','showWeight','showSize','requireWeight','requireSize','requirePhone','requireEmail','requirePackingList','verifySalesLink','verifyImageLink','requireVAT','requireVATFiling','requireEORI','enableBilling','showBilling','controlBilling','controlReceivingFee','promptUnderpayment','modifyVolRatio','showSupplierData','orderBySKULibrary','allowCancel','noAutoCancelAPIFail','allowChannelChange','allowEdit','allowTrackingEntry','allowLabelUpload','hideCarrier','refundOnReturn','noRefundOnCancel','showInWMS','enableCOD','restrictWarehouseCode','roundBeforeSplit','chargeWeight','chargeVolume','chargePrice','unitType','createdAt','extraFeeRules','carrierId']);

export const RateRuleScalarFieldEnumSchema = z.enum(['id','channelId','minWeight','maxWeight','weightType','divisor','sideRule','extraFee','baseRate','taxRate','otherFee','priority']);

export const WaybillRuleScalarFieldEnumSchema = z.enum(['id','name','pattern','channelId','createdAt']);

export const ReceivableScalarFieldEnumSchema = z.enum(['id','orderId','client','amount','currency','status','dueDate','exception','tenantId','createdById','createdAt']);

export const PayableScalarFieldEnumSchema = z.enum(['id','orderId','client','amount','currency','status','dueDate','exception','tenantId','createdById','createdAt']);

export const TransportPriceScalarFieldEnumSchema = z.enum(['id','name','region','service','currency','channelId','createdAt']);

export const PriceSettingScalarFieldEnumSchema = z.enum(['id','priceId','name','unit','value','createdAt','transportPriceId']);

export const PriceScalarFieldEnumSchema = z.enum(['id','name','channelId','currency','createdAt']);

export const PositionScalarFieldEnumSchema = z.enum(['id','title','customerId','createdAt']);

export const PositionMemberScalarFieldEnumSchema = z.enum(['id','name','phone','email','positionId','createdAt']);

export const LoginLogScalarFieldEnumSchema = z.enum(['id','customerId','ip','device','userAgent','loginAt']);

export const FinanceBillScalarFieldEnumSchema = z.enum(['id','billNo','customerId','totalAmount','status','createdAt','updatedAt']);

export const BillLogScalarFieldEnumSchema = z.enum(['id','billId','status','remark','timestamp']);

export const BillAttachmentScalarFieldEnumSchema = z.enum(['id','billId','url','filename','fileSize','mimeType','createdAt']);

export const SortOrderSchema = z.enum(['asc','desc']);

export const NullableJsonNullValueInputSchema = z.enum(['DbNull','JsonNull',]).transform((value) => value === 'JsonNull' ? Prisma.JsonNull : value === 'DbNull' ? Prisma.DbNull : value);

export const QueryModeSchema = z.enum(['default','insensitive']);

export const NullsOrderSchema = z.enum(['first','last']);

export const JsonNullValueFilterSchema = z.enum(['DbNull','JsonNull','AnyNull',]).transform((value) => value === 'JsonNull' ? Prisma.JsonNull : value === 'DbNull' ? Prisma.JsonNull : value === 'AnyNull' ? Prisma.AnyNull : value);

export const OrderStatusSchema = z.enum(['已下单','已收货','转运中','已签收','退件','已取消']);

export type OrderStatusType = `${z.infer<typeof OrderStatusSchema>}`

export const RoleTypeSchema = z.enum(['SUPER_ADMIN','TENANT_ADMIN','TENANT_STAFF']);

export type RoleTypeType = `${z.infer<typeof RoleTypeSchema>}`

export const PermissionTypeSchema = z.enum(['VIEW_WAYBILL','CREATE_WAYBILL','UPDATE_WAYBILL','CANCEL_WAYBILL','VIEW_CUSTOMER','CREATE_CUSTOMER','UPDATE_CUSTOMER','VIEW_CHANNEL','UPDATE_CHANNEL','VIEW_REPORT','EXPORT_EXCEL','CREATE_STAFF','ASSIGN_ROLE','UPDATE_PASSWORD']);

export type PermissionTypeType = `${z.infer<typeof PermissionTypeSchema>}`

export const FinanceStatusSchema = z.enum(['草稿','已提交','审核中','已审核','已驳回','待付款','部分付款','已付款_已收款','已对账','作废']);

export type FinanceStatusType = `${z.infer<typeof FinanceStatusSchema>}`

export const CustomerStatusSchema = z.enum(['ACTIVE','INACTIVE','FROZEN','BLACKLISTED']);

export type CustomerStatusType = `${z.infer<typeof CustomerStatusSchema>}`

export const SettlementMethodSchema = z.enum(['PREPAID','MONTHLY','T_PLUS_7','T_PLUS_15','T_PLUS_30']);

export type SettlementMethodType = `${z.infer<typeof SettlementMethodSchema>}`

/////////////////////////////////////////
// MODELS
/////////////////////////////////////////

/////////////////////////////////////////
// TENANT SCHEMA
/////////////////////////////////////////

export const TenantSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  createdAt: z.coerce.date(),
})

export type Tenant = z.infer<typeof TenantSchema>

/////////////////////////////////////////
// USER SCHEMA
/////////////////////////////////////////

export const UserSchema = z.object({
  role: RoleTypeSchema,
  id: z.string().uuid(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  tenantId: z.string(),
  createdAt: z.coerce.date(),
})

export type User = z.infer<typeof UserSchema>

/////////////////////////////////////////
// PERMISSION SCHEMA
/////////////////////////////////////////

export const PermissionSchema = z.object({
  type: PermissionTypeSchema,
  id: z.string().uuid(),
  userId: z.string(),
})

export type Permission = z.infer<typeof PermissionSchema>

/////////////////////////////////////////
// BOX SCHEMA
/////////////////////////////////////////

export const BoxSchema = z.object({
  id: z.string().uuid(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().nullable(),
  length: z.number().nullable(),
  width: z.number().nullable(),
  height: z.number().nullable(),
  hasBattery: z.boolean(),
  productNameEn: z.string(),
  productNameCn: z.string(),
  declaredValue: z.number(),
  declaredQuantity: z.number().int(),
  material: z.string(),
  hsCode: z.string().nullable(),
  usage: z.string().nullable(),
  brand: z.string().nullable(),
  model: z.string().nullable(),
  sku: z.string().nullable(),
  asin: z.string().nullable(),
  fnsku: z.string().nullable(),
  fbaOrderId: z.string().nullable(),
  tradOrderId: z.string().nullable(),
})

export type Box = z.infer<typeof BoxSchema>

/////////////////////////////////////////
// SHIPMENT LOG SCHEMA
/////////////////////////////////////////

export const ShipmentLogSchema = z.object({
  id: z.string().uuid(),
  shipmentId: z.string(),
  status: z.string(),
  remark: z.string().nullable(),
  location: z.string().nullable(),
  timestamp: z.coerce.date(),
})

export type ShipmentLog = z.infer<typeof ShipmentLogSchema>

/////////////////////////////////////////
// CUSTOMER SCHEMA
/////////////////////////////////////////

export const CustomerSchema = z.object({
  status: CustomerStatusSchema,
  settlementMethod: SettlementMethodSchema,
  id: z.string().uuid(),
  name: z.string(),
  companyName: z.string().nullable(),
  tenantId: z.string(),
  email: z.string().nullable(),
  phone: z.string().nullable(),
  address: z.string().nullable(),
  financeContactId: z.string().nullable(),
  businessLicense: z.string().nullable(),
  idCard: z.string().nullable(),
  attachments: JsonValueSchema.nullable(),
  notes: z.string().nullable(),
  createdAt: z.coerce.date(),
  updatedAt: z.coerce.date(),
})

export type Customer = z.infer<typeof CustomerSchema>

/////////////////////////////////////////
// FBA ORDER SCHEMA
/////////////////////////////////////////

export const FBAOrderSchema = z.object({
  status: OrderStatusSchema,
  id: z.string().uuid(),
  channelId: z.string(),
  freightCost: z.number().nullable(),
  totalCost: z.number().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().nullable(),
  volume: z.number().nullable(),
  volumetricWeight: z.number().nullable(),
  chargeWeight: z.number().nullable(),
  cargo: z.string().nullable(),
  createdAt: z.coerce.date(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().nullable(),
  length: z.number().nullable(),
  width: z.number().nullable(),
  height: z.number().nullable(),
  hasBattery: z.boolean(),
  hasMagnetic: z.boolean(),
  hasDangerous: z.boolean(),
  hasLiquid: z.boolean(),
  hasPowder: z.boolean(),
  clientCode: z.string().nullable(),
  company: z.string().nullable(),
  phone: z.string().nullable(),
  email: z.string().nullable(),
  store: z.string().nullable(),
  ref1: z.string().nullable(),
  vat: z.string().nullable(),
  ioss: z.string().nullable(),
  eori: z.string().nullable(),
  currency: z.string().nullable(),
  category: z.string().nullable(),
  productName: z.string().nullable(),
  attrs: z.string().array(),
  notes: z.string().nullable(),
  insurance: z.boolean(),
  address1: z.string().nullable(),
  address2: z.string().nullable(),
  address3: z.string().nullable(),
  addressDetail: z.string().nullable(),
  city: z.string().nullable(),
  state: z.string().nullable(),
  postalCode: z.string().nullable(),
  declaredValue: z.string().nullable(),
  declaredQuantity: z.string().nullable(),
  senderId: z.string().nullable(),
  senderName: z.string().nullable(),
  extraFee: z.number().nullable(),
  waybillRuleId: z.string().nullable(),
  waybillNumber: z.string().nullable(),
  billingPrecision: z.number().int().nullable(),
  isCOD: z.boolean(),
  allowCustomerCancel: z.boolean(),
  trackingNumber: z.string().nullable(),
  labelUploaded: z.boolean(),
  errors: z.string().array(),
  carrierId: z.string().nullable(),
})

export type FBAOrder = z.infer<typeof FBAOrderSchema>

/////////////////////////////////////////
// ATTACHMENT SCHEMA
/////////////////////////////////////////

export const AttachmentSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  path: z.string(),
  type: z.string(),
  waybillId: z.string(),
})

export type Attachment = z.infer<typeof AttachmentSchema>

/////////////////////////////////////////
// CARRIER SCHEMA
/////////////////////////////////////////

export const CarrierSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  code: z.string().nullable(),
  website: z.string().nullable(),
  logoUrl: z.string().nullable(),
  description: z.string().nullable(),
  region: z.string().nullable(),
  createdAt: z.coerce.date(),
})

export type Carrier = z.infer<typeof CarrierSchema>

/////////////////////////////////////////
// CHANNEL SCHEMA
/////////////////////////////////////////

export const ChannelSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  code: z.string().nullable(),
  type: z.string(),
  country: z.string().nullable(),
  warehouse: z.string().nullable(),
  origin: z.string().nullable(),
  currency: z.string(),
  decimal: z.string().nullable(),
  method: z.string().nullable(),
  rounding: z.string().nullable(),
  compareMode: z.string().nullable(),
  volRatio: z.number().nullable(),
  cubeRatio: z.number().nullable(),
  splitRatio: z.number().nullable(),
  chargeMethod: z.string().nullable(),
  minCharge: z.number().nullable(),
  ticketPrecision: z.number().nullable(),
  boxPrecision: z.number().nullable(),
  sizePrecision: z.number().nullable(),
  minPieces: z.number().int().nullable(),
  maxPieces: z.number().int().nullable(),
  minBoxRealWeight: z.number().nullable(),
  minBoxMaterialWeight: z.number().nullable(),
  minBoxChargeWeight: z.number().nullable(),
  minBoxAvgWeight: z.number().nullable(),
  minTicketChargeWeight: z.number().nullable(),
  maxTicketChargeWeight: z.number().nullable(),
  minTicketRealWeight: z.number().nullable(),
  maxTicketRealWeight: z.number().nullable(),
  minBoxRealWeightLimit: z.number().nullable(),
  maxBoxRealWeight: z.number().nullable(),
  minBoxChargeWeightLimit: z.number().nullable(),
  maxBoxChargeWeight: z.number().nullable(),
  minDeclareValue: z.number().nullable(),
  maxDeclareValue: z.number().nullable(),
  aging: z.string().nullable(),
  waybillRuleId: z.string().nullable(),
  labelCode: z.string().nullable(),
  assignedUser: z.string().nullable(),
  userLevel: z.string().nullable(),
  declareCurrency: z.string().nullable(),
  defaultDeclareCurrency: z.string().nullable(),
  sender: z.string().nullable(),
  showWeight: z.boolean(),
  showSize: z.boolean(),
  requireWeight: z.boolean(),
  requireSize: z.boolean(),
  requirePhone: z.boolean(),
  requireEmail: z.boolean(),
  requirePackingList: z.boolean(),
  verifySalesLink: z.boolean(),
  verifyImageLink: z.boolean(),
  requireVAT: z.boolean(),
  requireVATFiling: z.boolean(),
  requireEORI: z.boolean(),
  enableBilling: z.boolean(),
  showBilling: z.boolean(),
  controlBilling: z.boolean(),
  controlReceivingFee: z.boolean(),
  promptUnderpayment: z.boolean(),
  modifyVolRatio: z.boolean(),
  showSupplierData: z.boolean(),
  orderBySKULibrary: z.boolean(),
  allowCancel: z.boolean(),
  noAutoCancelAPIFail: z.boolean(),
  allowChannelChange: z.boolean(),
  allowEdit: z.boolean(),
  allowTrackingEntry: z.boolean(),
  allowLabelUpload: z.boolean(),
  hideCarrier: z.boolean(),
  refundOnReturn: z.boolean(),
  noRefundOnCancel: z.boolean(),
  showInWMS: z.boolean(),
  enableCOD: z.boolean(),
  restrictWarehouseCode: z.boolean(),
  roundBeforeSplit: z.boolean(),
  chargeWeight: z.number().nullable(),
  chargeVolume: z.number().nullable(),
  chargePrice: z.number().nullable(),
  unitType: z.string().nullable(),
  createdAt: z.coerce.date(),
  extraFeeRules: JsonValueSchema.nullable(),
  carrierId: z.string().nullable(),
})

export type Channel = z.infer<typeof ChannelSchema>

/////////////////////////////////////////
// RATE RULE SCHEMA
/////////////////////////////////////////

export const RateRuleSchema = z.object({
  id: z.string().uuid(),
  channelId: z.string(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().nullable(),
  sideRule: z.string().nullable(),
  extraFee: z.number().nullable(),
  baseRate: z.number(),
  taxRate: z.number().nullable(),
  otherFee: z.number().nullable(),
  priority: z.number().int(),
})

export type RateRule = z.infer<typeof RateRuleSchema>

/////////////////////////////////////////
// WAYBILL RULE SCHEMA
/////////////////////////////////////////

export const WaybillRuleSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().nullable(),
  createdAt: z.coerce.date(),
})

export type WaybillRule = z.infer<typeof WaybillRuleSchema>

/////////////////////////////////////////
// RECEIVABLE SCHEMA
/////////////////////////////////////////

export const ReceivableSchema = z.object({
  status: FinanceStatusSchema,
  id: z.string().uuid(),
  orderId: z.string().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  dueDate: z.string(),
  exception: z.string().nullable(),
  tenantId: z.string(),
  createdById: z.string().nullable(),
  createdAt: z.coerce.date(),
})

export type Receivable = z.infer<typeof ReceivableSchema>

/////////////////////////////////////////
// PAYABLE SCHEMA
/////////////////////////////////////////

export const PayableSchema = z.object({
  status: FinanceStatusSchema,
  id: z.string().uuid(),
  orderId: z.string().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  dueDate: z.string(),
  exception: z.string().nullable(),
  tenantId: z.string(),
  createdById: z.string().nullable(),
  createdAt: z.coerce.date(),
})

export type Payable = z.infer<typeof PayableSchema>

/////////////////////////////////////////
// TRANSPORT PRICE SCHEMA
/////////////////////////////////////////

export const TransportPriceSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  channelId: z.string(),
  createdAt: z.coerce.date(),
})

export type TransportPrice = z.infer<typeof TransportPriceSchema>

/////////////////////////////////////////
// PRICE SETTING SCHEMA
/////////////////////////////////////////

export const PriceSettingSchema = z.object({
  id: z.string().uuid(),
  priceId: z.string(),
  name: z.string(),
  unit: z.string().nullable(),
  value: z.number(),
  createdAt: z.coerce.date(),
  transportPriceId: z.string().nullable(),
})

export type PriceSetting = z.infer<typeof PriceSettingSchema>

/////////////////////////////////////////
// PRICE SCHEMA
/////////////////////////////////////////

export const PriceSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  channelId: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date(),
})

export type Price = z.infer<typeof PriceSchema>

/////////////////////////////////////////
// POSITION SCHEMA
/////////////////////////////////////////

export const PositionSchema = z.object({
  id: z.string().uuid(),
  title: z.string(),
  customerId: z.string(),
  createdAt: z.coerce.date(),
})

export type Position = z.infer<typeof PositionSchema>

/////////////////////////////////////////
// POSITION MEMBER SCHEMA
/////////////////////////////////////////

export const PositionMemberSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  phone: z.string().nullable(),
  email: z.string().nullable(),
  positionId: z.string(),
  createdAt: z.coerce.date(),
})

export type PositionMember = z.infer<typeof PositionMemberSchema>

/////////////////////////////////////////
// LOGIN LOG SCHEMA
/////////////////////////////////////////

export const LoginLogSchema = z.object({
  id: z.string().uuid(),
  customerId: z.string(),
  ip: z.string(),
  device: z.string().nullable(),
  userAgent: z.string().nullable(),
  loginAt: z.coerce.date(),
})

export type LoginLog = z.infer<typeof LoginLogSchema>

/////////////////////////////////////////
// FINANCE BILL SCHEMA
/////////////////////////////////////////

export const FinanceBillSchema = z.object({
  id: z.string().uuid(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date(),
  updatedAt: z.coerce.date(),
})

export type FinanceBill = z.infer<typeof FinanceBillSchema>

/////////////////////////////////////////
// BILL LOG SCHEMA
/////////////////////////////////////////

export const BillLogSchema = z.object({
  id: z.string().uuid(),
  billId: z.string(),
  status: z.string(),
  remark: z.string().nullable(),
  timestamp: z.coerce.date(),
})

export type BillLog = z.infer<typeof BillLogSchema>

/////////////////////////////////////////
// BILL ATTACHMENT SCHEMA
/////////////////////////////////////////

export const BillAttachmentSchema = z.object({
  id: z.string().uuid(),
  billId: z.string(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().nullable(),
  mimeType: z.string().nullable(),
  createdAt: z.coerce.date(),
})

export type BillAttachment = z.infer<typeof BillAttachmentSchema>

/////////////////////////////////////////
// SELECT & INCLUDE
/////////////////////////////////////////

// TENANT
//------------------------------------------------------

export const TenantIncludeSchema: z.ZodType<Prisma.TenantInclude> = z.object({
  users: z.union([z.boolean(),z.lazy(() => UserFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  receivables: z.union([z.boolean(),z.lazy(() => ReceivableFindManyArgsSchema)]).optional(),
  payables: z.union([z.boolean(),z.lazy(() => PayableFindManyArgsSchema)]).optional(),
  customers: z.union([z.boolean(),z.lazy(() => CustomerFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => TenantCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const TenantArgsSchema: z.ZodType<Prisma.TenantDefaultArgs> = z.object({
  select: z.lazy(() => TenantSelectSchema).optional(),
  include: z.lazy(() => TenantIncludeSchema).optional(),
}).strict();

export const TenantCountOutputTypeArgsSchema: z.ZodType<Prisma.TenantCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => TenantCountOutputTypeSelectSchema).nullish(),
}).strict();

export const TenantCountOutputTypeSelectSchema: z.ZodType<Prisma.TenantCountOutputTypeSelect> = z.object({
  users: z.boolean().optional(),
  fbaOrders: z.boolean().optional(),
  receivables: z.boolean().optional(),
  payables: z.boolean().optional(),
  customers: z.boolean().optional(),
}).strict();

export const TenantSelectSchema: z.ZodType<Prisma.TenantSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  users: z.union([z.boolean(),z.lazy(() => UserFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  receivables: z.union([z.boolean(),z.lazy(() => ReceivableFindManyArgsSchema)]).optional(),
  payables: z.union([z.boolean(),z.lazy(() => PayableFindManyArgsSchema)]).optional(),
  customers: z.union([z.boolean(),z.lazy(() => CustomerFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => TenantCountOutputTypeArgsSchema)]).optional(),
}).strict()

// USER
//------------------------------------------------------

export const UserIncludeSchema: z.ZodType<Prisma.UserInclude> = z.object({
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  permissions: z.union([z.boolean(),z.lazy(() => PermissionFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  receivables: z.union([z.boolean(),z.lazy(() => ReceivableFindManyArgsSchema)]).optional(),
  payables: z.union([z.boolean(),z.lazy(() => PayableFindManyArgsSchema)]).optional(),
  financeCustomers: z.union([z.boolean(),z.lazy(() => CustomerFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => UserCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const UserArgsSchema: z.ZodType<Prisma.UserDefaultArgs> = z.object({
  select: z.lazy(() => UserSelectSchema).optional(),
  include: z.lazy(() => UserIncludeSchema).optional(),
}).strict();

export const UserCountOutputTypeArgsSchema: z.ZodType<Prisma.UserCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => UserCountOutputTypeSelectSchema).nullish(),
}).strict();

export const UserCountOutputTypeSelectSchema: z.ZodType<Prisma.UserCountOutputTypeSelect> = z.object({
  permissions: z.boolean().optional(),
  fbaOrders: z.boolean().optional(),
  receivables: z.boolean().optional(),
  payables: z.boolean().optional(),
  financeCustomers: z.boolean().optional(),
}).strict();

export const UserSelectSchema: z.ZodType<Prisma.UserSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  email: z.boolean().optional(),
  password: z.boolean().optional(),
  role: z.boolean().optional(),
  tenantId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  permissions: z.union([z.boolean(),z.lazy(() => PermissionFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  receivables: z.union([z.boolean(),z.lazy(() => ReceivableFindManyArgsSchema)]).optional(),
  payables: z.union([z.boolean(),z.lazy(() => PayableFindManyArgsSchema)]).optional(),
  financeCustomers: z.union([z.boolean(),z.lazy(() => CustomerFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => UserCountOutputTypeArgsSchema)]).optional(),
}).strict()

// PERMISSION
//------------------------------------------------------

export const PermissionIncludeSchema: z.ZodType<Prisma.PermissionInclude> = z.object({
  user: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

export const PermissionArgsSchema: z.ZodType<Prisma.PermissionDefaultArgs> = z.object({
  select: z.lazy(() => PermissionSelectSchema).optional(),
  include: z.lazy(() => PermissionIncludeSchema).optional(),
}).strict();

export const PermissionSelectSchema: z.ZodType<Prisma.PermissionSelect> = z.object({
  id: z.boolean().optional(),
  type: z.boolean().optional(),
  userId: z.boolean().optional(),
  user: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

// BOX
//------------------------------------------------------

export const BoxIncludeSchema: z.ZodType<Prisma.BoxInclude> = z.object({
  fbaOrder: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

export const BoxArgsSchema: z.ZodType<Prisma.BoxDefaultArgs> = z.object({
  select: z.lazy(() => BoxSelectSchema).optional(),
  include: z.lazy(() => BoxIncludeSchema).optional(),
}).strict();

export const BoxSelectSchema: z.ZodType<Prisma.BoxSelect> = z.object({
  id: z.boolean().optional(),
  code: z.boolean().optional(),
  fullCode: z.boolean().optional(),
  weight: z.boolean().optional(),
  length: z.boolean().optional(),
  width: z.boolean().optional(),
  height: z.boolean().optional(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.boolean().optional(),
  productNameCn: z.boolean().optional(),
  declaredValue: z.boolean().optional(),
  declaredQuantity: z.boolean().optional(),
  material: z.boolean().optional(),
  hsCode: z.boolean().optional(),
  usage: z.boolean().optional(),
  brand: z.boolean().optional(),
  model: z.boolean().optional(),
  sku: z.boolean().optional(),
  asin: z.boolean().optional(),
  fnsku: z.boolean().optional(),
  fbaOrderId: z.boolean().optional(),
  tradOrderId: z.boolean().optional(),
  fbaOrder: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

// SHIPMENT LOG
//------------------------------------------------------

export const ShipmentLogIncludeSchema: z.ZodType<Prisma.ShipmentLogInclude> = z.object({
  shipment: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

export const ShipmentLogArgsSchema: z.ZodType<Prisma.ShipmentLogDefaultArgs> = z.object({
  select: z.lazy(() => ShipmentLogSelectSchema).optional(),
  include: z.lazy(() => ShipmentLogIncludeSchema).optional(),
}).strict();

export const ShipmentLogSelectSchema: z.ZodType<Prisma.ShipmentLogSelect> = z.object({
  id: z.boolean().optional(),
  shipmentId: z.boolean().optional(),
  status: z.boolean().optional(),
  remark: z.boolean().optional(),
  location: z.boolean().optional(),
  timestamp: z.boolean().optional(),
  shipment: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

// CUSTOMER
//------------------------------------------------------

export const CustomerIncludeSchema: z.ZodType<Prisma.CustomerInclude> = z.object({
  financeContact: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  orders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  positions: z.union([z.boolean(),z.lazy(() => PositionFindManyArgsSchema)]).optional(),
  loginLogs: z.union([z.boolean(),z.lazy(() => LoginLogFindManyArgsSchema)]).optional(),
  bills: z.union([z.boolean(),z.lazy(() => FinanceBillFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => CustomerCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const CustomerArgsSchema: z.ZodType<Prisma.CustomerDefaultArgs> = z.object({
  select: z.lazy(() => CustomerSelectSchema).optional(),
  include: z.lazy(() => CustomerIncludeSchema).optional(),
}).strict();

export const CustomerCountOutputTypeArgsSchema: z.ZodType<Prisma.CustomerCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => CustomerCountOutputTypeSelectSchema).nullish(),
}).strict();

export const CustomerCountOutputTypeSelectSchema: z.ZodType<Prisma.CustomerCountOutputTypeSelect> = z.object({
  fbaOrders: z.boolean().optional(),
  orders: z.boolean().optional(),
  positions: z.boolean().optional(),
  loginLogs: z.boolean().optional(),
  bills: z.boolean().optional(),
}).strict();

export const CustomerSelectSchema: z.ZodType<Prisma.CustomerSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  companyName: z.boolean().optional(),
  tenantId: z.boolean().optional(),
  email: z.boolean().optional(),
  phone: z.boolean().optional(),
  address: z.boolean().optional(),
  status: z.boolean().optional(),
  settlementMethod: z.boolean().optional(),
  financeContactId: z.boolean().optional(),
  businessLicense: z.boolean().optional(),
  idCard: z.boolean().optional(),
  attachments: z.boolean().optional(),
  notes: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
  financeContact: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  orders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  positions: z.union([z.boolean(),z.lazy(() => PositionFindManyArgsSchema)]).optional(),
  loginLogs: z.union([z.boolean(),z.lazy(() => LoginLogFindManyArgsSchema)]).optional(),
  bills: z.union([z.boolean(),z.lazy(() => FinanceBillFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => CustomerCountOutputTypeArgsSchema)]).optional(),
}).strict()

// FBA ORDER
//------------------------------------------------------

export const FBAOrderIncludeSchema: z.ZodType<Prisma.FBAOrderInclude> = z.object({
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  user: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
  sender: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  boxes: z.union([z.boolean(),z.lazy(() => BoxFindManyArgsSchema)]).optional(),
  waybillRule: z.union([z.boolean(),z.lazy(() => WaybillRuleArgsSchema)]).optional(),
  logs: z.union([z.boolean(),z.lazy(() => ShipmentLogFindManyArgsSchema)]).optional(),
  carrier: z.union([z.boolean(),z.lazy(() => CarrierArgsSchema)]).optional(),
  attachments: z.union([z.boolean(),z.lazy(() => AttachmentFindManyArgsSchema)]).optional(),
  bills: z.union([z.boolean(),z.lazy(() => FinanceBillFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => FBAOrderCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const FBAOrderArgsSchema: z.ZodType<Prisma.FBAOrderDefaultArgs> = z.object({
  select: z.lazy(() => FBAOrderSelectSchema).optional(),
  include: z.lazy(() => FBAOrderIncludeSchema).optional(),
}).strict();

export const FBAOrderCountOutputTypeArgsSchema: z.ZodType<Prisma.FBAOrderCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => FBAOrderCountOutputTypeSelectSchema).nullish(),
}).strict();

export const FBAOrderCountOutputTypeSelectSchema: z.ZodType<Prisma.FBAOrderCountOutputTypeSelect> = z.object({
  boxes: z.boolean().optional(),
  logs: z.boolean().optional(),
  attachments: z.boolean().optional(),
  bills: z.boolean().optional(),
}).strict();

export const FBAOrderSelectSchema: z.ZodType<Prisma.FBAOrderSelect> = z.object({
  id: z.boolean().optional(),
  channelId: z.boolean().optional(),
  freightCost: z.boolean().optional(),
  totalCost: z.boolean().optional(),
  recipient: z.boolean().optional(),
  country: z.boolean().optional(),
  quantity: z.boolean().optional(),
  weight: z.boolean().optional(),
  volume: z.boolean().optional(),
  volumetricWeight: z.boolean().optional(),
  chargeWeight: z.boolean().optional(),
  cargo: z.boolean().optional(),
  status: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  tenantId: z.boolean().optional(),
  customerId: z.boolean().optional(),
  userId: z.boolean().optional(),
  type: z.boolean().optional(),
  warehouse: z.boolean().optional(),
  length: z.boolean().optional(),
  width: z.boolean().optional(),
  height: z.boolean().optional(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.boolean().optional(),
  company: z.boolean().optional(),
  phone: z.boolean().optional(),
  email: z.boolean().optional(),
  store: z.boolean().optional(),
  ref1: z.boolean().optional(),
  vat: z.boolean().optional(),
  ioss: z.boolean().optional(),
  eori: z.boolean().optional(),
  currency: z.boolean().optional(),
  category: z.boolean().optional(),
  productName: z.boolean().optional(),
  attrs: z.boolean().optional(),
  notes: z.boolean().optional(),
  insurance: z.boolean().optional(),
  address1: z.boolean().optional(),
  address2: z.boolean().optional(),
  address3: z.boolean().optional(),
  addressDetail: z.boolean().optional(),
  city: z.boolean().optional(),
  state: z.boolean().optional(),
  postalCode: z.boolean().optional(),
  declaredValue: z.boolean().optional(),
  declaredQuantity: z.boolean().optional(),
  senderId: z.boolean().optional(),
  senderName: z.boolean().optional(),
  extraFee: z.boolean().optional(),
  waybillRuleId: z.boolean().optional(),
  waybillNumber: z.boolean().optional(),
  billingPrecision: z.boolean().optional(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.boolean().optional(),
  labelUploaded: z.boolean().optional(),
  errors: z.boolean().optional(),
  carrierId: z.boolean().optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  user: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
  sender: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  boxes: z.union([z.boolean(),z.lazy(() => BoxFindManyArgsSchema)]).optional(),
  waybillRule: z.union([z.boolean(),z.lazy(() => WaybillRuleArgsSchema)]).optional(),
  logs: z.union([z.boolean(),z.lazy(() => ShipmentLogFindManyArgsSchema)]).optional(),
  carrier: z.union([z.boolean(),z.lazy(() => CarrierArgsSchema)]).optional(),
  attachments: z.union([z.boolean(),z.lazy(() => AttachmentFindManyArgsSchema)]).optional(),
  bills: z.union([z.boolean(),z.lazy(() => FinanceBillFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => FBAOrderCountOutputTypeArgsSchema)]).optional(),
}).strict()

// ATTACHMENT
//------------------------------------------------------

export const AttachmentIncludeSchema: z.ZodType<Prisma.AttachmentInclude> = z.object({
  waybill: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

export const AttachmentArgsSchema: z.ZodType<Prisma.AttachmentDefaultArgs> = z.object({
  select: z.lazy(() => AttachmentSelectSchema).optional(),
  include: z.lazy(() => AttachmentIncludeSchema).optional(),
}).strict();

export const AttachmentSelectSchema: z.ZodType<Prisma.AttachmentSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  path: z.boolean().optional(),
  type: z.boolean().optional(),
  waybillId: z.boolean().optional(),
  waybill: z.union([z.boolean(),z.lazy(() => FBAOrderArgsSchema)]).optional(),
}).strict()

// CARRIER
//------------------------------------------------------

export const CarrierIncludeSchema: z.ZodType<Prisma.CarrierInclude> = z.object({
  channels: z.union([z.boolean(),z.lazy(() => ChannelFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => CarrierCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const CarrierArgsSchema: z.ZodType<Prisma.CarrierDefaultArgs> = z.object({
  select: z.lazy(() => CarrierSelectSchema).optional(),
  include: z.lazy(() => CarrierIncludeSchema).optional(),
}).strict();

export const CarrierCountOutputTypeArgsSchema: z.ZodType<Prisma.CarrierCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => CarrierCountOutputTypeSelectSchema).nullish(),
}).strict();

export const CarrierCountOutputTypeSelectSchema: z.ZodType<Prisma.CarrierCountOutputTypeSelect> = z.object({
  channels: z.boolean().optional(),
  fbaOrders: z.boolean().optional(),
}).strict();

export const CarrierSelectSchema: z.ZodType<Prisma.CarrierSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  code: z.boolean().optional(),
  website: z.boolean().optional(),
  logoUrl: z.boolean().optional(),
  description: z.boolean().optional(),
  region: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  channels: z.union([z.boolean(),z.lazy(() => ChannelFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => CarrierCountOutputTypeArgsSchema)]).optional(),
}).strict()

// CHANNEL
//------------------------------------------------------

export const ChannelIncludeSchema: z.ZodType<Prisma.ChannelInclude> = z.object({
  waybillRule: z.union([z.boolean(),z.lazy(() => WaybillRuleArgsSchema)]).optional(),
  rates: z.union([z.boolean(),z.lazy(() => RateRuleFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  carrier: z.union([z.boolean(),z.lazy(() => CarrierArgsSchema)]).optional(),
  transportPrices: z.union([z.boolean(),z.lazy(() => TransportPriceFindManyArgsSchema)]).optional(),
  prices: z.union([z.boolean(),z.lazy(() => PriceFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => ChannelCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const ChannelArgsSchema: z.ZodType<Prisma.ChannelDefaultArgs> = z.object({
  select: z.lazy(() => ChannelSelectSchema).optional(),
  include: z.lazy(() => ChannelIncludeSchema).optional(),
}).strict();

export const ChannelCountOutputTypeArgsSchema: z.ZodType<Prisma.ChannelCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => ChannelCountOutputTypeSelectSchema).nullish(),
}).strict();

export const ChannelCountOutputTypeSelectSchema: z.ZodType<Prisma.ChannelCountOutputTypeSelect> = z.object({
  rates: z.boolean().optional(),
  fbaOrders: z.boolean().optional(),
  transportPrices: z.boolean().optional(),
  prices: z.boolean().optional(),
}).strict();

export const ChannelSelectSchema: z.ZodType<Prisma.ChannelSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  code: z.boolean().optional(),
  type: z.boolean().optional(),
  country: z.boolean().optional(),
  warehouse: z.boolean().optional(),
  origin: z.boolean().optional(),
  currency: z.boolean().optional(),
  decimal: z.boolean().optional(),
  method: z.boolean().optional(),
  rounding: z.boolean().optional(),
  compareMode: z.boolean().optional(),
  volRatio: z.boolean().optional(),
  cubeRatio: z.boolean().optional(),
  splitRatio: z.boolean().optional(),
  chargeMethod: z.boolean().optional(),
  minCharge: z.boolean().optional(),
  ticketPrecision: z.boolean().optional(),
  boxPrecision: z.boolean().optional(),
  sizePrecision: z.boolean().optional(),
  minPieces: z.boolean().optional(),
  maxPieces: z.boolean().optional(),
  minBoxRealWeight: z.boolean().optional(),
  minBoxMaterialWeight: z.boolean().optional(),
  minBoxChargeWeight: z.boolean().optional(),
  minBoxAvgWeight: z.boolean().optional(),
  minTicketChargeWeight: z.boolean().optional(),
  maxTicketChargeWeight: z.boolean().optional(),
  minTicketRealWeight: z.boolean().optional(),
  maxTicketRealWeight: z.boolean().optional(),
  minBoxRealWeightLimit: z.boolean().optional(),
  maxBoxRealWeight: z.boolean().optional(),
  minBoxChargeWeightLimit: z.boolean().optional(),
  maxBoxChargeWeight: z.boolean().optional(),
  minDeclareValue: z.boolean().optional(),
  maxDeclareValue: z.boolean().optional(),
  aging: z.boolean().optional(),
  waybillRuleId: z.boolean().optional(),
  labelCode: z.boolean().optional(),
  assignedUser: z.boolean().optional(),
  userLevel: z.boolean().optional(),
  declareCurrency: z.boolean().optional(),
  defaultDeclareCurrency: z.boolean().optional(),
  sender: z.boolean().optional(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.boolean().optional(),
  chargeVolume: z.boolean().optional(),
  chargePrice: z.boolean().optional(),
  unitType: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  extraFeeRules: z.boolean().optional(),
  carrierId: z.boolean().optional(),
  waybillRule: z.union([z.boolean(),z.lazy(() => WaybillRuleArgsSchema)]).optional(),
  rates: z.union([z.boolean(),z.lazy(() => RateRuleFindManyArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  carrier: z.union([z.boolean(),z.lazy(() => CarrierArgsSchema)]).optional(),
  transportPrices: z.union([z.boolean(),z.lazy(() => TransportPriceFindManyArgsSchema)]).optional(),
  prices: z.union([z.boolean(),z.lazy(() => PriceFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => ChannelCountOutputTypeArgsSchema)]).optional(),
}).strict()

// RATE RULE
//------------------------------------------------------

export const RateRuleIncludeSchema: z.ZodType<Prisma.RateRuleInclude> = z.object({
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
}).strict()

export const RateRuleArgsSchema: z.ZodType<Prisma.RateRuleDefaultArgs> = z.object({
  select: z.lazy(() => RateRuleSelectSchema).optional(),
  include: z.lazy(() => RateRuleIncludeSchema).optional(),
}).strict();

export const RateRuleSelectSchema: z.ZodType<Prisma.RateRuleSelect> = z.object({
  id: z.boolean().optional(),
  channelId: z.boolean().optional(),
  minWeight: z.boolean().optional(),
  maxWeight: z.boolean().optional(),
  weightType: z.boolean().optional(),
  divisor: z.boolean().optional(),
  sideRule: z.boolean().optional(),
  extraFee: z.boolean().optional(),
  baseRate: z.boolean().optional(),
  taxRate: z.boolean().optional(),
  otherFee: z.boolean().optional(),
  priority: z.boolean().optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
}).strict()

// WAYBILL RULE
//------------------------------------------------------

export const WaybillRuleIncludeSchema: z.ZodType<Prisma.WaybillRuleInclude> = z.object({
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => WaybillRuleCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const WaybillRuleArgsSchema: z.ZodType<Prisma.WaybillRuleDefaultArgs> = z.object({
  select: z.lazy(() => WaybillRuleSelectSchema).optional(),
  include: z.lazy(() => WaybillRuleIncludeSchema).optional(),
}).strict();

export const WaybillRuleCountOutputTypeArgsSchema: z.ZodType<Prisma.WaybillRuleCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => WaybillRuleCountOutputTypeSelectSchema).nullish(),
}).strict();

export const WaybillRuleCountOutputTypeSelectSchema: z.ZodType<Prisma.WaybillRuleCountOutputTypeSelect> = z.object({
  fbaOrders: z.boolean().optional(),
}).strict();

export const WaybillRuleSelectSchema: z.ZodType<Prisma.WaybillRuleSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  pattern: z.boolean().optional(),
  channelId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  fbaOrders: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => WaybillRuleCountOutputTypeArgsSchema)]).optional(),
}).strict()

// RECEIVABLE
//------------------------------------------------------

export const ReceivableIncludeSchema: z.ZodType<Prisma.ReceivableInclude> = z.object({
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  createdBy: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

export const ReceivableArgsSchema: z.ZodType<Prisma.ReceivableDefaultArgs> = z.object({
  select: z.lazy(() => ReceivableSelectSchema).optional(),
  include: z.lazy(() => ReceivableIncludeSchema).optional(),
}).strict();

export const ReceivableSelectSchema: z.ZodType<Prisma.ReceivableSelect> = z.object({
  id: z.boolean().optional(),
  orderId: z.boolean().optional(),
  client: z.boolean().optional(),
  amount: z.boolean().optional(),
  currency: z.boolean().optional(),
  status: z.boolean().optional(),
  dueDate: z.boolean().optional(),
  exception: z.boolean().optional(),
  tenantId: z.boolean().optional(),
  createdById: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  createdBy: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

// PAYABLE
//------------------------------------------------------

export const PayableIncludeSchema: z.ZodType<Prisma.PayableInclude> = z.object({
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  createdBy: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

export const PayableArgsSchema: z.ZodType<Prisma.PayableDefaultArgs> = z.object({
  select: z.lazy(() => PayableSelectSchema).optional(),
  include: z.lazy(() => PayableIncludeSchema).optional(),
}).strict();

export const PayableSelectSchema: z.ZodType<Prisma.PayableSelect> = z.object({
  id: z.boolean().optional(),
  orderId: z.boolean().optional(),
  client: z.boolean().optional(),
  amount: z.boolean().optional(),
  currency: z.boolean().optional(),
  status: z.boolean().optional(),
  dueDate: z.boolean().optional(),
  exception: z.boolean().optional(),
  tenantId: z.boolean().optional(),
  createdById: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  tenant: z.union([z.boolean(),z.lazy(() => TenantArgsSchema)]).optional(),
  createdBy: z.union([z.boolean(),z.lazy(() => UserArgsSchema)]).optional(),
}).strict()

// TRANSPORT PRICE
//------------------------------------------------------

export const TransportPriceIncludeSchema: z.ZodType<Prisma.TransportPriceInclude> = z.object({
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  settings: z.union([z.boolean(),z.lazy(() => PriceSettingFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => TransportPriceCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const TransportPriceArgsSchema: z.ZodType<Prisma.TransportPriceDefaultArgs> = z.object({
  select: z.lazy(() => TransportPriceSelectSchema).optional(),
  include: z.lazy(() => TransportPriceIncludeSchema).optional(),
}).strict();

export const TransportPriceCountOutputTypeArgsSchema: z.ZodType<Prisma.TransportPriceCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => TransportPriceCountOutputTypeSelectSchema).nullish(),
}).strict();

export const TransportPriceCountOutputTypeSelectSchema: z.ZodType<Prisma.TransportPriceCountOutputTypeSelect> = z.object({
  settings: z.boolean().optional(),
}).strict();

export const TransportPriceSelectSchema: z.ZodType<Prisma.TransportPriceSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  region: z.boolean().optional(),
  service: z.boolean().optional(),
  currency: z.boolean().optional(),
  channelId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  settings: z.union([z.boolean(),z.lazy(() => PriceSettingFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => TransportPriceCountOutputTypeArgsSchema)]).optional(),
}).strict()

// PRICE SETTING
//------------------------------------------------------

export const PriceSettingIncludeSchema: z.ZodType<Prisma.PriceSettingInclude> = z.object({
  price: z.union([z.boolean(),z.lazy(() => PriceArgsSchema)]).optional(),
  transportPrice: z.union([z.boolean(),z.lazy(() => TransportPriceArgsSchema)]).optional(),
}).strict()

export const PriceSettingArgsSchema: z.ZodType<Prisma.PriceSettingDefaultArgs> = z.object({
  select: z.lazy(() => PriceSettingSelectSchema).optional(),
  include: z.lazy(() => PriceSettingIncludeSchema).optional(),
}).strict();

export const PriceSettingSelectSchema: z.ZodType<Prisma.PriceSettingSelect> = z.object({
  id: z.boolean().optional(),
  priceId: z.boolean().optional(),
  name: z.boolean().optional(),
  unit: z.boolean().optional(),
  value: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  transportPriceId: z.boolean().optional(),
  price: z.union([z.boolean(),z.lazy(() => PriceArgsSchema)]).optional(),
  transportPrice: z.union([z.boolean(),z.lazy(() => TransportPriceArgsSchema)]).optional(),
}).strict()

// PRICE
//------------------------------------------------------

export const PriceIncludeSchema: z.ZodType<Prisma.PriceInclude> = z.object({
  settings: z.union([z.boolean(),z.lazy(() => PriceSettingFindManyArgsSchema)]).optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => PriceCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const PriceArgsSchema: z.ZodType<Prisma.PriceDefaultArgs> = z.object({
  select: z.lazy(() => PriceSelectSchema).optional(),
  include: z.lazy(() => PriceIncludeSchema).optional(),
}).strict();

export const PriceCountOutputTypeArgsSchema: z.ZodType<Prisma.PriceCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => PriceCountOutputTypeSelectSchema).nullish(),
}).strict();

export const PriceCountOutputTypeSelectSchema: z.ZodType<Prisma.PriceCountOutputTypeSelect> = z.object({
  settings: z.boolean().optional(),
}).strict();

export const PriceSelectSchema: z.ZodType<Prisma.PriceSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  channelId: z.boolean().optional(),
  currency: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  settings: z.union([z.boolean(),z.lazy(() => PriceSettingFindManyArgsSchema)]).optional(),
  channel: z.union([z.boolean(),z.lazy(() => ChannelArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => PriceCountOutputTypeArgsSchema)]).optional(),
}).strict()

// POSITION
//------------------------------------------------------

export const PositionIncludeSchema: z.ZodType<Prisma.PositionInclude> = z.object({
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  members: z.union([z.boolean(),z.lazy(() => PositionMemberFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => PositionCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const PositionArgsSchema: z.ZodType<Prisma.PositionDefaultArgs> = z.object({
  select: z.lazy(() => PositionSelectSchema).optional(),
  include: z.lazy(() => PositionIncludeSchema).optional(),
}).strict();

export const PositionCountOutputTypeArgsSchema: z.ZodType<Prisma.PositionCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => PositionCountOutputTypeSelectSchema).nullish(),
}).strict();

export const PositionCountOutputTypeSelectSchema: z.ZodType<Prisma.PositionCountOutputTypeSelect> = z.object({
  members: z.boolean().optional(),
}).strict();

export const PositionSelectSchema: z.ZodType<Prisma.PositionSelect> = z.object({
  id: z.boolean().optional(),
  title: z.boolean().optional(),
  customerId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  members: z.union([z.boolean(),z.lazy(() => PositionMemberFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => PositionCountOutputTypeArgsSchema)]).optional(),
}).strict()

// POSITION MEMBER
//------------------------------------------------------

export const PositionMemberIncludeSchema: z.ZodType<Prisma.PositionMemberInclude> = z.object({
  position: z.union([z.boolean(),z.lazy(() => PositionArgsSchema)]).optional(),
}).strict()

export const PositionMemberArgsSchema: z.ZodType<Prisma.PositionMemberDefaultArgs> = z.object({
  select: z.lazy(() => PositionMemberSelectSchema).optional(),
  include: z.lazy(() => PositionMemberIncludeSchema).optional(),
}).strict();

export const PositionMemberSelectSchema: z.ZodType<Prisma.PositionMemberSelect> = z.object({
  id: z.boolean().optional(),
  name: z.boolean().optional(),
  phone: z.boolean().optional(),
  email: z.boolean().optional(),
  positionId: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  position: z.union([z.boolean(),z.lazy(() => PositionArgsSchema)]).optional(),
}).strict()

// LOGIN LOG
//------------------------------------------------------

export const LoginLogIncludeSchema: z.ZodType<Prisma.LoginLogInclude> = z.object({
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
}).strict()

export const LoginLogArgsSchema: z.ZodType<Prisma.LoginLogDefaultArgs> = z.object({
  select: z.lazy(() => LoginLogSelectSchema).optional(),
  include: z.lazy(() => LoginLogIncludeSchema).optional(),
}).strict();

export const LoginLogSelectSchema: z.ZodType<Prisma.LoginLogSelect> = z.object({
  id: z.boolean().optional(),
  customerId: z.boolean().optional(),
  ip: z.boolean().optional(),
  device: z.boolean().optional(),
  userAgent: z.boolean().optional(),
  loginAt: z.boolean().optional(),
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
}).strict()

// FINANCE BILL
//------------------------------------------------------

export const FinanceBillIncludeSchema: z.ZodType<Prisma.FinanceBillInclude> = z.object({
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  waybills: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  logs: z.union([z.boolean(),z.lazy(() => BillLogFindManyArgsSchema)]).optional(),
  attachments: z.union([z.boolean(),z.lazy(() => BillAttachmentFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => FinanceBillCountOutputTypeArgsSchema)]).optional(),
}).strict()

export const FinanceBillArgsSchema: z.ZodType<Prisma.FinanceBillDefaultArgs> = z.object({
  select: z.lazy(() => FinanceBillSelectSchema).optional(),
  include: z.lazy(() => FinanceBillIncludeSchema).optional(),
}).strict();

export const FinanceBillCountOutputTypeArgsSchema: z.ZodType<Prisma.FinanceBillCountOutputTypeDefaultArgs> = z.object({
  select: z.lazy(() => FinanceBillCountOutputTypeSelectSchema).nullish(),
}).strict();

export const FinanceBillCountOutputTypeSelectSchema: z.ZodType<Prisma.FinanceBillCountOutputTypeSelect> = z.object({
  waybills: z.boolean().optional(),
  logs: z.boolean().optional(),
  attachments: z.boolean().optional(),
}).strict();

export const FinanceBillSelectSchema: z.ZodType<Prisma.FinanceBillSelect> = z.object({
  id: z.boolean().optional(),
  billNo: z.boolean().optional(),
  customerId: z.boolean().optional(),
  totalAmount: z.boolean().optional(),
  status: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  updatedAt: z.boolean().optional(),
  customer: z.union([z.boolean(),z.lazy(() => CustomerArgsSchema)]).optional(),
  waybills: z.union([z.boolean(),z.lazy(() => FBAOrderFindManyArgsSchema)]).optional(),
  logs: z.union([z.boolean(),z.lazy(() => BillLogFindManyArgsSchema)]).optional(),
  attachments: z.union([z.boolean(),z.lazy(() => BillAttachmentFindManyArgsSchema)]).optional(),
  _count: z.union([z.boolean(),z.lazy(() => FinanceBillCountOutputTypeArgsSchema)]).optional(),
}).strict()

// BILL LOG
//------------------------------------------------------

export const BillLogIncludeSchema: z.ZodType<Prisma.BillLogInclude> = z.object({
  bill: z.union([z.boolean(),z.lazy(() => FinanceBillArgsSchema)]).optional(),
}).strict()

export const BillLogArgsSchema: z.ZodType<Prisma.BillLogDefaultArgs> = z.object({
  select: z.lazy(() => BillLogSelectSchema).optional(),
  include: z.lazy(() => BillLogIncludeSchema).optional(),
}).strict();

export const BillLogSelectSchema: z.ZodType<Prisma.BillLogSelect> = z.object({
  id: z.boolean().optional(),
  billId: z.boolean().optional(),
  status: z.boolean().optional(),
  remark: z.boolean().optional(),
  timestamp: z.boolean().optional(),
  bill: z.union([z.boolean(),z.lazy(() => FinanceBillArgsSchema)]).optional(),
}).strict()

// BILL ATTACHMENT
//------------------------------------------------------

export const BillAttachmentIncludeSchema: z.ZodType<Prisma.BillAttachmentInclude> = z.object({
  bill: z.union([z.boolean(),z.lazy(() => FinanceBillArgsSchema)]).optional(),
}).strict()

export const BillAttachmentArgsSchema: z.ZodType<Prisma.BillAttachmentDefaultArgs> = z.object({
  select: z.lazy(() => BillAttachmentSelectSchema).optional(),
  include: z.lazy(() => BillAttachmentIncludeSchema).optional(),
}).strict();

export const BillAttachmentSelectSchema: z.ZodType<Prisma.BillAttachmentSelect> = z.object({
  id: z.boolean().optional(),
  billId: z.boolean().optional(),
  url: z.boolean().optional(),
  filename: z.boolean().optional(),
  fileSize: z.boolean().optional(),
  mimeType: z.boolean().optional(),
  createdAt: z.boolean().optional(),
  bill: z.union([z.boolean(),z.lazy(() => FinanceBillArgsSchema)]).optional(),
}).strict()


/////////////////////////////////////////
// INPUT TYPES
/////////////////////////////////////////

export const TenantWhereInputSchema: z.ZodType<Prisma.TenantWhereInput> = z.object({
  AND: z.union([ z.lazy(() => TenantWhereInputSchema),z.lazy(() => TenantWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => TenantWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TenantWhereInputSchema),z.lazy(() => TenantWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  users: z.lazy(() => UserListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  receivables: z.lazy(() => ReceivableListRelationFilterSchema).optional(),
  payables: z.lazy(() => PayableListRelationFilterSchema).optional(),
  customers: z.lazy(() => CustomerListRelationFilterSchema).optional()
}).strict();

export const TenantOrderByWithRelationInputSchema: z.ZodType<Prisma.TenantOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  users: z.lazy(() => UserOrderByRelationAggregateInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  receivables: z.lazy(() => ReceivableOrderByRelationAggregateInputSchema).optional(),
  payables: z.lazy(() => PayableOrderByRelationAggregateInputSchema).optional(),
  customers: z.lazy(() => CustomerOrderByRelationAggregateInputSchema).optional()
}).strict();

export const TenantWhereUniqueInputSchema: z.ZodType<Prisma.TenantWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => TenantWhereInputSchema),z.lazy(() => TenantWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => TenantWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TenantWhereInputSchema),z.lazy(() => TenantWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  users: z.lazy(() => UserListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  receivables: z.lazy(() => ReceivableListRelationFilterSchema).optional(),
  payables: z.lazy(() => PayableListRelationFilterSchema).optional(),
  customers: z.lazy(() => CustomerListRelationFilterSchema).optional()
}).strict());

export const TenantOrderByWithAggregationInputSchema: z.ZodType<Prisma.TenantOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => TenantCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => TenantMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => TenantMinOrderByAggregateInputSchema).optional()
}).strict();

export const TenantScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.TenantScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => TenantScalarWhereWithAggregatesInputSchema),z.lazy(() => TenantScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => TenantScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TenantScalarWhereWithAggregatesInputSchema),z.lazy(() => TenantScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const UserWhereInputSchema: z.ZodType<Prisma.UserWhereInput> = z.object({
  AND: z.union([ z.lazy(() => UserWhereInputSchema),z.lazy(() => UserWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => UserWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => UserWhereInputSchema),z.lazy(() => UserWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  password: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  role: z.union([ z.lazy(() => EnumRoleTypeFilterSchema),z.lazy(() => RoleTypeSchema) ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  receivables: z.lazy(() => ReceivableListRelationFilterSchema).optional(),
  payables: z.lazy(() => PayableListRelationFilterSchema).optional(),
  financeCustomers: z.lazy(() => CustomerListRelationFilterSchema).optional()
}).strict();

export const UserOrderByWithRelationInputSchema: z.ZodType<Prisma.UserOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenant: z.lazy(() => TenantOrderByWithRelationInputSchema).optional(),
  permissions: z.lazy(() => PermissionOrderByRelationAggregateInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  receivables: z.lazy(() => ReceivableOrderByRelationAggregateInputSchema).optional(),
  payables: z.lazy(() => PayableOrderByRelationAggregateInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerOrderByRelationAggregateInputSchema).optional()
}).strict();

export const UserWhereUniqueInputSchema: z.ZodType<Prisma.UserWhereUniqueInput> = z.union([
  z.object({
    id: z.string().uuid(),
    email: z.string()
  }),
  z.object({
    id: z.string().uuid(),
  }),
  z.object({
    email: z.string(),
  }),
])
.and(z.object({
  id: z.string().uuid().optional(),
  email: z.string().optional(),
  AND: z.union([ z.lazy(() => UserWhereInputSchema),z.lazy(() => UserWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => UserWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => UserWhereInputSchema),z.lazy(() => UserWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  password: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  role: z.union([ z.lazy(() => EnumRoleTypeFilterSchema),z.lazy(() => RoleTypeSchema) ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  receivables: z.lazy(() => ReceivableListRelationFilterSchema).optional(),
  payables: z.lazy(() => PayableListRelationFilterSchema).optional(),
  financeCustomers: z.lazy(() => CustomerListRelationFilterSchema).optional()
}).strict());

export const UserOrderByWithAggregationInputSchema: z.ZodType<Prisma.UserOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => UserCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => UserMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => UserMinOrderByAggregateInputSchema).optional()
}).strict();

export const UserScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.UserScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => UserScalarWhereWithAggregatesInputSchema),z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => UserScalarWhereWithAggregatesInputSchema),z.lazy(() => UserScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  password: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  role: z.union([ z.lazy(() => EnumRoleTypeWithAggregatesFilterSchema),z.lazy(() => RoleTypeSchema) ]).optional(),
  tenantId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PermissionWhereInputSchema: z.ZodType<Prisma.PermissionWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PermissionWhereInputSchema),z.lazy(() => PermissionWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PermissionWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PermissionWhereInputSchema),z.lazy(() => PermissionWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => EnumPermissionTypeFilterSchema),z.lazy(() => PermissionTypeSchema) ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  user: z.union([ z.lazy(() => UserScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional(),
}).strict();

export const PermissionOrderByWithRelationInputSchema: z.ZodType<Prisma.PermissionOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  user: z.lazy(() => UserOrderByWithRelationInputSchema).optional()
}).strict();

export const PermissionWhereUniqueInputSchema: z.ZodType<Prisma.PermissionWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PermissionWhereInputSchema),z.lazy(() => PermissionWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PermissionWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PermissionWhereInputSchema),z.lazy(() => PermissionWhereInputSchema).array() ]).optional(),
  type: z.union([ z.lazy(() => EnumPermissionTypeFilterSchema),z.lazy(() => PermissionTypeSchema) ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  user: z.union([ z.lazy(() => UserScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional(),
}).strict());

export const PermissionOrderByWithAggregationInputSchema: z.ZodType<Prisma.PermissionOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => PermissionCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PermissionMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PermissionMinOrderByAggregateInputSchema).optional()
}).strict();

export const PermissionScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PermissionScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PermissionScalarWhereWithAggregatesInputSchema),z.lazy(() => PermissionScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PermissionScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PermissionScalarWhereWithAggregatesInputSchema),z.lazy(() => PermissionScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => EnumPermissionTypeWithAggregatesFilterSchema),z.lazy(() => PermissionTypeSchema) ]).optional(),
  userId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
}).strict();

export const BoxWhereInputSchema: z.ZodType<Prisma.BoxWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BoxWhereInputSchema),z.lazy(() => BoxWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BoxWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BoxWhereInputSchema),z.lazy(() => BoxWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fullCode: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  productNameEn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  productNameCn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  declaredValue: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
  material: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  hsCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  usage: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  brand: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  model: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  asin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fnsku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fbaOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tradOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fbaOrder: z.union([ z.lazy(() => FBAOrderNullableScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional().nullable(),
}).strict();

export const BoxOrderByWithRelationInputSchema: z.ZodType<Prisma.BoxOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  fullCode: z.lazy(() => SortOrderSchema).optional(),
  weight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  length: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  width: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  height: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  productNameEn: z.lazy(() => SortOrderSchema).optional(),
  productNameCn: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  material: z.lazy(() => SortOrderSchema).optional(),
  hsCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  usage: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  brand: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  model: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sku: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  asin: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  fnsku: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  fbaOrderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tradOrderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  fbaOrder: z.lazy(() => FBAOrderOrderByWithRelationInputSchema).optional()
}).strict();

export const BoxWhereUniqueInputSchema: z.ZodType<Prisma.BoxWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => BoxWhereInputSchema),z.lazy(() => BoxWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BoxWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BoxWhereInputSchema),z.lazy(() => BoxWhereInputSchema).array() ]).optional(),
  code: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fullCode: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  productNameEn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  productNameCn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  declaredValue: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),
  material: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  hsCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  usage: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  brand: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  model: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  asin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fnsku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fbaOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tradOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fbaOrder: z.union([ z.lazy(() => FBAOrderNullableScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional().nullable(),
}).strict());

export const BoxOrderByWithAggregationInputSchema: z.ZodType<Prisma.BoxOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  fullCode: z.lazy(() => SortOrderSchema).optional(),
  weight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  length: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  width: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  height: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  productNameEn: z.lazy(() => SortOrderSchema).optional(),
  productNameCn: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  material: z.lazy(() => SortOrderSchema).optional(),
  hsCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  usage: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  brand: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  model: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sku: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  asin: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  fnsku: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  fbaOrderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tradOrderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  _count: z.lazy(() => BoxCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => BoxAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => BoxMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => BoxMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => BoxSumOrderByAggregateInputSchema).optional()
}).strict();

export const BoxScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.BoxScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => BoxScalarWhereWithAggregatesInputSchema),z.lazy(() => BoxScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => BoxScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BoxScalarWhereWithAggregatesInputSchema),z.lazy(() => BoxScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  fullCode: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  productNameEn: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  productNameCn: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  declaredValue: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),
  material: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  hsCode: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  usage: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  brand: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  model: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  sku: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  asin: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  fnsku: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  fbaOrderId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  tradOrderId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const ShipmentLogWhereInputSchema: z.ZodType<Prisma.ShipmentLogWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ShipmentLogWhereInputSchema),z.lazy(() => ShipmentLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ShipmentLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ShipmentLogWhereInputSchema),z.lazy(() => ShipmentLogWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  shipmentId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  location: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  shipment: z.union([ z.lazy(() => FBAOrderScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
}).strict();

export const ShipmentLogOrderByWithRelationInputSchema: z.ZodType<Prisma.ShipmentLogOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  shipmentId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  location: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  shipment: z.lazy(() => FBAOrderOrderByWithRelationInputSchema).optional()
}).strict();

export const ShipmentLogWhereUniqueInputSchema: z.ZodType<Prisma.ShipmentLogWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => ShipmentLogWhereInputSchema),z.lazy(() => ShipmentLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ShipmentLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ShipmentLogWhereInputSchema),z.lazy(() => ShipmentLogWhereInputSchema).array() ]).optional(),
  shipmentId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  location: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  shipment: z.union([ z.lazy(() => FBAOrderScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
}).strict());

export const ShipmentLogOrderByWithAggregationInputSchema: z.ZodType<Prisma.ShipmentLogOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  shipmentId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  location: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => ShipmentLogCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => ShipmentLogMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => ShipmentLogMinOrderByAggregateInputSchema).optional()
}).strict();

export const ShipmentLogScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.ShipmentLogScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => ShipmentLogScalarWhereWithAggregatesInputSchema),z.lazy(() => ShipmentLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => ShipmentLogScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ShipmentLogScalarWhereWithAggregatesInputSchema),z.lazy(() => ShipmentLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  shipmentId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  location: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const CustomerWhereInputSchema: z.ZodType<Prisma.CustomerWhereInput> = z.object({
  AND: z.union([ z.lazy(() => CustomerWhereInputSchema),z.lazy(() => CustomerWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CustomerWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CustomerWhereInputSchema),z.lazy(() => CustomerWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  companyName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumCustomerStatusFilterSchema),z.lazy(() => CustomerStatusSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => EnumSettlementMethodFilterSchema),z.lazy(() => SettlementMethodSchema) ]).optional(),
  financeContactId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  businessLicense: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  idCard: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attachments: z.lazy(() => JsonNullableFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  financeContact: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  orders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  positions: z.lazy(() => PositionListRelationFilterSchema).optional(),
  loginLogs: z.lazy(() => LoginLogListRelationFilterSchema).optional(),
  bills: z.lazy(() => FinanceBillListRelationFilterSchema).optional()
}).strict();

export const CustomerOrderByWithRelationInputSchema: z.ZodType<Prisma.CustomerOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  companyName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  settlementMethod: z.lazy(() => SortOrderSchema).optional(),
  financeContactId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  businessLicense: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  idCard: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  attachments: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  notes: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  financeContact: z.lazy(() => UserOrderByWithRelationInputSchema).optional(),
  tenant: z.lazy(() => TenantOrderByWithRelationInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  orders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  positions: z.lazy(() => PositionOrderByRelationAggregateInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogOrderByRelationAggregateInputSchema).optional(),
  bills: z.lazy(() => FinanceBillOrderByRelationAggregateInputSchema).optional()
}).strict();

export const CustomerWhereUniqueInputSchema: z.ZodType<Prisma.CustomerWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => CustomerWhereInputSchema),z.lazy(() => CustomerWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CustomerWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CustomerWhereInputSchema),z.lazy(() => CustomerWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  companyName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumCustomerStatusFilterSchema),z.lazy(() => CustomerStatusSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => EnumSettlementMethodFilterSchema),z.lazy(() => SettlementMethodSchema) ]).optional(),
  financeContactId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  businessLicense: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  idCard: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attachments: z.lazy(() => JsonNullableFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  financeContact: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  orders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  positions: z.lazy(() => PositionListRelationFilterSchema).optional(),
  loginLogs: z.lazy(() => LoginLogListRelationFilterSchema).optional(),
  bills: z.lazy(() => FinanceBillListRelationFilterSchema).optional()
}).strict());

export const CustomerOrderByWithAggregationInputSchema: z.ZodType<Prisma.CustomerOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  companyName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  settlementMethod: z.lazy(() => SortOrderSchema).optional(),
  financeContactId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  businessLicense: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  idCard: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  attachments: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  notes: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => CustomerCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => CustomerMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => CustomerMinOrderByAggregateInputSchema).optional()
}).strict();

export const CustomerScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.CustomerScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => CustomerScalarWhereWithAggregatesInputSchema),z.lazy(() => CustomerScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => CustomerScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CustomerScalarWhereWithAggregatesInputSchema),z.lazy(() => CustomerScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  companyName: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  address: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumCustomerStatusWithAggregatesFilterSchema),z.lazy(() => CustomerStatusSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => EnumSettlementMethodWithAggregatesFilterSchema),z.lazy(() => SettlementMethodSchema) ]).optional(),
  financeContactId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  businessLicense: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  idCard: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  attachments: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const FBAOrderWhereInputSchema: z.ZodType<Prisma.FBAOrderWhereInput> = z.object({
  AND: z.union([ z.lazy(() => FBAOrderWhereInputSchema),z.lazy(() => FBAOrderWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FBAOrderWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FBAOrderWhereInputSchema),z.lazy(() => FBAOrderWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  freightCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  totalCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  recipient: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  quantity: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volumetricWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cargo: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumOrderStatusFilterSchema),z.lazy(() => OrderStatusSchema) ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasMagnetic: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasDangerous: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasLiquid: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasPowder: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  clientCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  company: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  store: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ref1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  vat: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ioss: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  eori: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  category: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  productName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attrs: z.lazy(() => StringNullableListFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  insurance: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  address1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address2: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address3: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  addressDetail: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  city: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  state: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  postalCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredValue: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredQuantity: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  billingPrecision: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  isCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCustomerCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  trackingNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelUploaded: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  errors: z.lazy(() => StringNullableListFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  user: z.union([ z.lazy(() => UserScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional(),
  sender: z.union([ z.lazy(() => CustomerNullableScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxListRelationFilterSchema).optional(),
  waybillRule: z.union([ z.lazy(() => WaybillRuleNullableScalarRelationFilterSchema),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional().nullable(),
  logs: z.lazy(() => ShipmentLogListRelationFilterSchema).optional(),
  carrier: z.union([ z.lazy(() => CarrierNullableScalarRelationFilterSchema),z.lazy(() => CarrierWhereInputSchema) ]).optional().nullable(),
  attachments: z.lazy(() => AttachmentListRelationFilterSchema).optional(),
  bills: z.lazy(() => FinanceBillListRelationFilterSchema).optional()
}).strict();

export const FBAOrderOrderByWithRelationInputSchema: z.ZodType<Prisma.FBAOrderOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  freightCost: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  totalCost: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volume: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volumetricWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  cargo: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  length: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  width: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  height: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  hasMagnetic: z.lazy(() => SortOrderSchema).optional(),
  hasDangerous: z.lazy(() => SortOrderSchema).optional(),
  hasLiquid: z.lazy(() => SortOrderSchema).optional(),
  hasPowder: z.lazy(() => SortOrderSchema).optional(),
  clientCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  company: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  store: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ref1: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  vat: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ioss: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  eori: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  currency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  category: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  productName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  attrs: z.lazy(() => SortOrderSchema).optional(),
  notes: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  insurance: z.lazy(() => SortOrderSchema).optional(),
  address1: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address2: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address3: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  addressDetail: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  city: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  state: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  postalCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declaredValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  senderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  senderName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  extraFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillRuleId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillNumber: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  billingPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  isCOD: z.lazy(() => SortOrderSchema).optional(),
  allowCustomerCancel: z.lazy(() => SortOrderSchema).optional(),
  trackingNumber: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  labelUploaded: z.lazy(() => SortOrderSchema).optional(),
  errors: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelOrderByWithRelationInputSchema).optional(),
  tenant: z.lazy(() => TenantOrderByWithRelationInputSchema).optional(),
  customer: z.lazy(() => CustomerOrderByWithRelationInputSchema).optional(),
  user: z.lazy(() => UserOrderByWithRelationInputSchema).optional(),
  sender: z.lazy(() => CustomerOrderByWithRelationInputSchema).optional(),
  boxes: z.lazy(() => BoxOrderByRelationAggregateInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleOrderByWithRelationInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogOrderByRelationAggregateInputSchema).optional(),
  carrier: z.lazy(() => CarrierOrderByWithRelationInputSchema).optional(),
  attachments: z.lazy(() => AttachmentOrderByRelationAggregateInputSchema).optional(),
  bills: z.lazy(() => FinanceBillOrderByRelationAggregateInputSchema).optional()
}).strict();

export const FBAOrderWhereUniqueInputSchema: z.ZodType<Prisma.FBAOrderWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => FBAOrderWhereInputSchema),z.lazy(() => FBAOrderWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FBAOrderWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FBAOrderWhereInputSchema),z.lazy(() => FBAOrderWhereInputSchema).array() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  freightCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  totalCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  recipient: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  quantity: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volumetricWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cargo: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumOrderStatusFilterSchema),z.lazy(() => OrderStatusSchema) ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasMagnetic: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasDangerous: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasLiquid: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasPowder: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  clientCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  company: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  store: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ref1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  vat: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ioss: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  eori: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  category: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  productName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attrs: z.lazy(() => StringNullableListFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  insurance: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  address1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address2: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address3: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  addressDetail: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  city: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  state: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  postalCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredValue: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredQuantity: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  billingPrecision: z.union([ z.lazy(() => IntNullableFilterSchema),z.number().int() ]).optional().nullable(),
  isCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCustomerCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  trackingNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelUploaded: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  errors: z.lazy(() => StringNullableListFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  user: z.union([ z.lazy(() => UserScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional(),
  sender: z.union([ z.lazy(() => CustomerNullableScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxListRelationFilterSchema).optional(),
  waybillRule: z.union([ z.lazy(() => WaybillRuleNullableScalarRelationFilterSchema),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional().nullable(),
  logs: z.lazy(() => ShipmentLogListRelationFilterSchema).optional(),
  carrier: z.union([ z.lazy(() => CarrierNullableScalarRelationFilterSchema),z.lazy(() => CarrierWhereInputSchema) ]).optional().nullable(),
  attachments: z.lazy(() => AttachmentListRelationFilterSchema).optional(),
  bills: z.lazy(() => FinanceBillListRelationFilterSchema).optional()
}).strict());

export const FBAOrderOrderByWithAggregationInputSchema: z.ZodType<Prisma.FBAOrderOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  freightCost: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  totalCost: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volume: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volumetricWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  cargo: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  length: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  width: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  height: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  hasMagnetic: z.lazy(() => SortOrderSchema).optional(),
  hasDangerous: z.lazy(() => SortOrderSchema).optional(),
  hasLiquid: z.lazy(() => SortOrderSchema).optional(),
  hasPowder: z.lazy(() => SortOrderSchema).optional(),
  clientCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  company: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  store: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ref1: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  vat: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ioss: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  eori: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  currency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  category: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  productName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  attrs: z.lazy(() => SortOrderSchema).optional(),
  notes: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  insurance: z.lazy(() => SortOrderSchema).optional(),
  address1: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address2: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  address3: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  addressDetail: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  city: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  state: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  postalCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declaredValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  senderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  senderName: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  extraFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillRuleId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillNumber: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  billingPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  isCOD: z.lazy(() => SortOrderSchema).optional(),
  allowCustomerCancel: z.lazy(() => SortOrderSchema).optional(),
  trackingNumber: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  labelUploaded: z.lazy(() => SortOrderSchema).optional(),
  errors: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  _count: z.lazy(() => FBAOrderCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => FBAOrderAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => FBAOrderMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => FBAOrderMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => FBAOrderSumOrderByAggregateInputSchema).optional()
}).strict();

export const FBAOrderScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.FBAOrderScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => FBAOrderScalarWhereWithAggregatesInputSchema),z.lazy(() => FBAOrderScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => FBAOrderScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FBAOrderScalarWhereWithAggregatesInputSchema),z.lazy(() => FBAOrderScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  freightCost: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  totalCost: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  recipient: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  quantity: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  volume: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  volumetricWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  cargo: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumOrderStatusWithAggregatesFilterSchema),z.lazy(() => OrderStatusSchema) ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
  tenantId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  userId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  warehouse: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  hasMagnetic: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  hasDangerous: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  hasLiquid: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  hasPowder: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  clientCode: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  company: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  store: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  ref1: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  vat: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  ioss: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  eori: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  category: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  productName: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  attrs: z.lazy(() => StringNullableListFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  insurance: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  address1: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  address2: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  address3: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  addressDetail: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  city: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  state: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  postalCode: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  declaredValue: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  declaredQuantity: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  senderId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  senderName: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  waybillNumber: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  billingPrecision: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  isCOD: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowCustomerCancel: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  trackingNumber: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  labelUploaded: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  errors: z.lazy(() => StringNullableListFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const AttachmentWhereInputSchema: z.ZodType<Prisma.AttachmentWhereInput> = z.object({
  AND: z.union([ z.lazy(() => AttachmentWhereInputSchema),z.lazy(() => AttachmentWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => AttachmentWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => AttachmentWhereInputSchema),z.lazy(() => AttachmentWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  path: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  waybillId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  waybill: z.union([ z.lazy(() => FBAOrderScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
}).strict();

export const AttachmentOrderByWithRelationInputSchema: z.ZodType<Prisma.AttachmentOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  waybillId: z.lazy(() => SortOrderSchema).optional(),
  waybill: z.lazy(() => FBAOrderOrderByWithRelationInputSchema).optional()
}).strict();

export const AttachmentWhereUniqueInputSchema: z.ZodType<Prisma.AttachmentWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => AttachmentWhereInputSchema),z.lazy(() => AttachmentWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => AttachmentWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => AttachmentWhereInputSchema),z.lazy(() => AttachmentWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  path: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  waybillId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  waybill: z.union([ z.lazy(() => FBAOrderScalarRelationFilterSchema),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
}).strict());

export const AttachmentOrderByWithAggregationInputSchema: z.ZodType<Prisma.AttachmentOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  waybillId: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => AttachmentCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => AttachmentMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => AttachmentMinOrderByAggregateInputSchema).optional()
}).strict();

export const AttachmentScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.AttachmentScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => AttachmentScalarWhereWithAggregatesInputSchema),z.lazy(() => AttachmentScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => AttachmentScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => AttachmentScalarWhereWithAggregatesInputSchema),z.lazy(() => AttachmentScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  path: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  waybillId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
}).strict();

export const CarrierWhereInputSchema: z.ZodType<Prisma.CarrierWhereInput> = z.object({
  AND: z.union([ z.lazy(() => CarrierWhereInputSchema),z.lazy(() => CarrierWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CarrierWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CarrierWhereInputSchema),z.lazy(() => CarrierWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  website: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  logoUrl: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  description: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  region: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channels: z.lazy(() => ChannelListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional()
}).strict();

export const CarrierOrderByWithRelationInputSchema: z.ZodType<Prisma.CarrierOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  website: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  logoUrl: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  description: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  region: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  channels: z.lazy(() => ChannelOrderByRelationAggregateInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional()
}).strict();

export const CarrierWhereUniqueInputSchema: z.ZodType<Prisma.CarrierWhereUniqueInput> = z.union([
  z.object({
    id: z.string().uuid(),
    name: z.string()
  }),
  z.object({
    id: z.string().uuid(),
  }),
  z.object({
    name: z.string(),
  }),
])
.and(z.object({
  id: z.string().uuid().optional(),
  name: z.string().optional(),
  AND: z.union([ z.lazy(() => CarrierWhereInputSchema),z.lazy(() => CarrierWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CarrierWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CarrierWhereInputSchema),z.lazy(() => CarrierWhereInputSchema).array() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  website: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  logoUrl: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  description: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  region: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channels: z.lazy(() => ChannelListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional()
}).strict());

export const CarrierOrderByWithAggregationInputSchema: z.ZodType<Prisma.CarrierOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  website: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  logoUrl: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  description: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  region: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => CarrierCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => CarrierMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => CarrierMinOrderByAggregateInputSchema).optional()
}).strict();

export const CarrierScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.CarrierScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => CarrierScalarWhereWithAggregatesInputSchema),z.lazy(() => CarrierScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => CarrierScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CarrierScalarWhereWithAggregatesInputSchema),z.lazy(() => CarrierScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  website: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  logoUrl: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  description: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  region: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const ChannelWhereInputSchema: z.ZodType<Prisma.ChannelWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ChannelWhereInputSchema),z.lazy(() => ChannelWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ChannelWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ChannelWhereInputSchema),z.lazy(() => ChannelWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  origin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  decimal: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  method: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  rounding: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  compareMode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  volRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cubeRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  splitRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeMethod: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  minCharge: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  ticketPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  boxPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  sizePrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  maxPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  aging: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  assignedUser: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userLevel: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sender: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  showWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePhone: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEmail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePackingList: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifySalesLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifyImageLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVAT: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVATFiling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEORI: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlReceivingFee: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  promptUnderpayment: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  modifyVolRatio: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSupplierData: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  orderBySKULibrary: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noAutoCancelAPIFail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowChannelChange: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowEdit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowTrackingEntry: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowLabelUpload: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hideCarrier: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  refundOnReturn: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noRefundOnCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showInWMS: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  restrictWarehouseCode: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  roundBeforeSplit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeVolume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargePrice: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  unitType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  extraFeeRules: z.lazy(() => JsonNullableFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillRule: z.union([ z.lazy(() => WaybillRuleNullableScalarRelationFilterSchema),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  carrier: z.union([ z.lazy(() => CarrierNullableScalarRelationFilterSchema),z.lazy(() => CarrierWhereInputSchema) ]).optional().nullable(),
  transportPrices: z.lazy(() => TransportPriceListRelationFilterSchema).optional(),
  prices: z.lazy(() => PriceListRelationFilterSchema).optional()
}).strict();

export const ChannelOrderByWithRelationInputSchema: z.ZodType<Prisma.ChannelOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  country: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  warehouse: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  origin: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  decimal: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  method: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  rounding: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  compareMode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  cubeRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  splitRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeMethod: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minCharge: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ticketPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  boxPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sizePrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minPieces: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxPieces: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxMaterialWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxAvgWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minTicketChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxTicketChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minTicketRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxTicketRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxBoxRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxBoxChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minDeclareValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxDeclareValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  aging: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillRuleId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  labelCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  assignedUser: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  userLevel: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declareCurrency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  defaultDeclareCurrency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sender: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  showWeight: z.lazy(() => SortOrderSchema).optional(),
  showSize: z.lazy(() => SortOrderSchema).optional(),
  requireWeight: z.lazy(() => SortOrderSchema).optional(),
  requireSize: z.lazy(() => SortOrderSchema).optional(),
  requirePhone: z.lazy(() => SortOrderSchema).optional(),
  requireEmail: z.lazy(() => SortOrderSchema).optional(),
  requirePackingList: z.lazy(() => SortOrderSchema).optional(),
  verifySalesLink: z.lazy(() => SortOrderSchema).optional(),
  verifyImageLink: z.lazy(() => SortOrderSchema).optional(),
  requireVAT: z.lazy(() => SortOrderSchema).optional(),
  requireVATFiling: z.lazy(() => SortOrderSchema).optional(),
  requireEORI: z.lazy(() => SortOrderSchema).optional(),
  enableBilling: z.lazy(() => SortOrderSchema).optional(),
  showBilling: z.lazy(() => SortOrderSchema).optional(),
  controlBilling: z.lazy(() => SortOrderSchema).optional(),
  controlReceivingFee: z.lazy(() => SortOrderSchema).optional(),
  promptUnderpayment: z.lazy(() => SortOrderSchema).optional(),
  modifyVolRatio: z.lazy(() => SortOrderSchema).optional(),
  showSupplierData: z.lazy(() => SortOrderSchema).optional(),
  orderBySKULibrary: z.lazy(() => SortOrderSchema).optional(),
  allowCancel: z.lazy(() => SortOrderSchema).optional(),
  noAutoCancelAPIFail: z.lazy(() => SortOrderSchema).optional(),
  allowChannelChange: z.lazy(() => SortOrderSchema).optional(),
  allowEdit: z.lazy(() => SortOrderSchema).optional(),
  allowTrackingEntry: z.lazy(() => SortOrderSchema).optional(),
  allowLabelUpload: z.lazy(() => SortOrderSchema).optional(),
  hideCarrier: z.lazy(() => SortOrderSchema).optional(),
  refundOnReturn: z.lazy(() => SortOrderSchema).optional(),
  noRefundOnCancel: z.lazy(() => SortOrderSchema).optional(),
  showInWMS: z.lazy(() => SortOrderSchema).optional(),
  enableCOD: z.lazy(() => SortOrderSchema).optional(),
  restrictWarehouseCode: z.lazy(() => SortOrderSchema).optional(),
  roundBeforeSplit: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeVolume: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargePrice: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  unitType: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  extraFeeRules: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  carrierId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleOrderByWithRelationInputSchema).optional(),
  rates: z.lazy(() => RateRuleOrderByRelationAggregateInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  carrier: z.lazy(() => CarrierOrderByWithRelationInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceOrderByRelationAggregateInputSchema).optional(),
  prices: z.lazy(() => PriceOrderByRelationAggregateInputSchema).optional()
}).strict();

export const ChannelWhereUniqueInputSchema: z.ZodType<Prisma.ChannelWhereUniqueInput> = z.union([
  z.object({
    id: z.string().uuid(),
    name: z.string(),
    waybillRuleId: z.string()
  }),
  z.object({
    id: z.string().uuid(),
    name: z.string(),
  }),
  z.object({
    id: z.string().uuid(),
    waybillRuleId: z.string(),
  }),
  z.object({
    id: z.string().uuid(),
  }),
  z.object({
    name: z.string(),
    waybillRuleId: z.string(),
  }),
  z.object({
    name: z.string(),
  }),
  z.object({
    waybillRuleId: z.string(),
  }),
])
.and(z.object({
  id: z.string().uuid().optional(),
  name: z.string().optional(),
  waybillRuleId: z.string().optional(),
  AND: z.union([ z.lazy(() => ChannelWhereInputSchema),z.lazy(() => ChannelWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ChannelWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ChannelWhereInputSchema),z.lazy(() => ChannelWhereInputSchema).array() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  origin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  decimal: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  method: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  rounding: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  compareMode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  volRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cubeRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  splitRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeMethod: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  minCharge: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  ticketPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  boxPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  sizePrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number().int() ]).optional().nullable(),
  maxPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number().int() ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  aging: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  assignedUser: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userLevel: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sender: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  showWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePhone: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEmail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePackingList: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifySalesLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifyImageLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVAT: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVATFiling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEORI: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlReceivingFee: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  promptUnderpayment: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  modifyVolRatio: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSupplierData: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  orderBySKULibrary: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noAutoCancelAPIFail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowChannelChange: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowEdit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowTrackingEntry: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowLabelUpload: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hideCarrier: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  refundOnReturn: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noRefundOnCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showInWMS: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  restrictWarehouseCode: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  roundBeforeSplit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeVolume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargePrice: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  unitType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  extraFeeRules: z.lazy(() => JsonNullableFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillRule: z.union([ z.lazy(() => WaybillRuleNullableScalarRelationFilterSchema),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleListRelationFilterSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  carrier: z.union([ z.lazy(() => CarrierNullableScalarRelationFilterSchema),z.lazy(() => CarrierWhereInputSchema) ]).optional().nullable(),
  transportPrices: z.lazy(() => TransportPriceListRelationFilterSchema).optional(),
  prices: z.lazy(() => PriceListRelationFilterSchema).optional()
}).strict());

export const ChannelOrderByWithAggregationInputSchema: z.ZodType<Prisma.ChannelOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  country: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  warehouse: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  origin: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  decimal: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  method: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  rounding: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  compareMode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  volRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  cubeRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  splitRatio: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeMethod: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minCharge: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  ticketPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  boxPrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sizePrecision: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minPieces: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxPieces: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxMaterialWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxAvgWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minTicketChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxTicketChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minTicketRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxTicketRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxBoxRealWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxBoxChargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  minDeclareValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  maxDeclareValue: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  aging: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  waybillRuleId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  labelCode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  assignedUser: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  userLevel: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  declareCurrency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  defaultDeclareCurrency: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sender: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  showWeight: z.lazy(() => SortOrderSchema).optional(),
  showSize: z.lazy(() => SortOrderSchema).optional(),
  requireWeight: z.lazy(() => SortOrderSchema).optional(),
  requireSize: z.lazy(() => SortOrderSchema).optional(),
  requirePhone: z.lazy(() => SortOrderSchema).optional(),
  requireEmail: z.lazy(() => SortOrderSchema).optional(),
  requirePackingList: z.lazy(() => SortOrderSchema).optional(),
  verifySalesLink: z.lazy(() => SortOrderSchema).optional(),
  verifyImageLink: z.lazy(() => SortOrderSchema).optional(),
  requireVAT: z.lazy(() => SortOrderSchema).optional(),
  requireVATFiling: z.lazy(() => SortOrderSchema).optional(),
  requireEORI: z.lazy(() => SortOrderSchema).optional(),
  enableBilling: z.lazy(() => SortOrderSchema).optional(),
  showBilling: z.lazy(() => SortOrderSchema).optional(),
  controlBilling: z.lazy(() => SortOrderSchema).optional(),
  controlReceivingFee: z.lazy(() => SortOrderSchema).optional(),
  promptUnderpayment: z.lazy(() => SortOrderSchema).optional(),
  modifyVolRatio: z.lazy(() => SortOrderSchema).optional(),
  showSupplierData: z.lazy(() => SortOrderSchema).optional(),
  orderBySKULibrary: z.lazy(() => SortOrderSchema).optional(),
  allowCancel: z.lazy(() => SortOrderSchema).optional(),
  noAutoCancelAPIFail: z.lazy(() => SortOrderSchema).optional(),
  allowChannelChange: z.lazy(() => SortOrderSchema).optional(),
  allowEdit: z.lazy(() => SortOrderSchema).optional(),
  allowTrackingEntry: z.lazy(() => SortOrderSchema).optional(),
  allowLabelUpload: z.lazy(() => SortOrderSchema).optional(),
  hideCarrier: z.lazy(() => SortOrderSchema).optional(),
  refundOnReturn: z.lazy(() => SortOrderSchema).optional(),
  noRefundOnCancel: z.lazy(() => SortOrderSchema).optional(),
  showInWMS: z.lazy(() => SortOrderSchema).optional(),
  enableCOD: z.lazy(() => SortOrderSchema).optional(),
  restrictWarehouseCode: z.lazy(() => SortOrderSchema).optional(),
  roundBeforeSplit: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargeVolume: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  chargePrice: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  unitType: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  extraFeeRules: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  carrierId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  _count: z.lazy(() => ChannelCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => ChannelAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => ChannelMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => ChannelMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => ChannelSumOrderByAggregateInputSchema).optional()
}).strict();

export const ChannelScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.ChannelScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => ChannelScalarWhereWithAggregatesInputSchema),z.lazy(() => ChannelScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => ChannelScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ChannelScalarWhereWithAggregatesInputSchema),z.lazy(() => ChannelScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  type: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  warehouse: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  origin: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  decimal: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  method: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  rounding: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  compareMode: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  volRatio: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  cubeRatio: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  splitRatio: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  chargeMethod: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  minCharge: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  ticketPrecision: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  boxPrecision: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  sizePrecision: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minPieces: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxPieces: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  minDeclareValue: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  maxDeclareValue: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  aging: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  labelCode: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  assignedUser: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  userLevel: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  declareCurrency: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  sender: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  showWeight: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  showSize: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireWeight: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireSize: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requirePhone: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireEmail: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requirePackingList: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  verifySalesLink: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  verifyImageLink: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireVAT: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireVATFiling: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  requireEORI: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  enableBilling: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  showBilling: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  controlBilling: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  controlReceivingFee: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  promptUnderpayment: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  modifyVolRatio: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  showSupplierData: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  orderBySKULibrary: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowCancel: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  noAutoCancelAPIFail: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowChannelChange: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowEdit: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowTrackingEntry: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  allowLabelUpload: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  hideCarrier: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  refundOnReturn: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  noRefundOnCancel: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  showInWMS: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  enableCOD: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  restrictWarehouseCode: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  roundBeforeSplit: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  chargeVolume: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  chargePrice: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  unitType: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
  extraFeeRules: z.lazy(() => JsonNullableWithAggregatesFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const RateRuleWhereInputSchema: z.ZodType<Prisma.RateRuleWhereInput> = z.object({
  AND: z.union([ z.lazy(() => RateRuleWhereInputSchema),z.lazy(() => RateRuleWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => RateRuleWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => RateRuleWhereInputSchema),z.lazy(() => RateRuleWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  minWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  maxWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  weightType: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  divisor: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  sideRule: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  baseRate: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  taxRate: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  otherFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  priority: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
}).strict();

export const RateRuleOrderByWithRelationInputSchema: z.ZodType<Prisma.RateRuleOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  weightType: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sideRule: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  extraFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  otherFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  priority: z.lazy(() => SortOrderSchema).optional(),
  channel: z.lazy(() => ChannelOrderByWithRelationInputSchema).optional()
}).strict();

export const RateRuleWhereUniqueInputSchema: z.ZodType<Prisma.RateRuleWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => RateRuleWhereInputSchema),z.lazy(() => RateRuleWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => RateRuleWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => RateRuleWhereInputSchema),z.lazy(() => RateRuleWhereInputSchema).array() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  minWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  maxWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  weightType: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  divisor: z.union([ z.lazy(() => IntNullableFilterSchema),z.number().int() ]).optional().nullable(),
  sideRule: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  baseRate: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  taxRate: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  otherFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  priority: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
}).strict());

export const RateRuleOrderByWithAggregationInputSchema: z.ZodType<Prisma.RateRuleOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  weightType: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  sideRule: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  extraFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  otherFee: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  priority: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => RateRuleCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => RateRuleAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => RateRuleMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => RateRuleMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => RateRuleSumOrderByAggregateInputSchema).optional()
}).strict();

export const RateRuleScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.RateRuleScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => RateRuleScalarWhereWithAggregatesInputSchema),z.lazy(() => RateRuleScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => RateRuleScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => RateRuleScalarWhereWithAggregatesInputSchema),z.lazy(() => RateRuleScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  minWeight: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  maxWeight: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  weightType: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  divisor: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  sideRule: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  baseRate: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  taxRate: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  otherFee: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  priority: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),
}).strict();

export const WaybillRuleWhereInputSchema: z.ZodType<Prisma.WaybillRuleWhereInput> = z.object({
  AND: z.union([ z.lazy(() => WaybillRuleWhereInputSchema),z.lazy(() => WaybillRuleWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => WaybillRuleWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => WaybillRuleWhereInputSchema),z.lazy(() => WaybillRuleWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  pattern: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelNullableScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional().nullable(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional()
}).strict();

export const WaybillRuleOrderByWithRelationInputSchema: z.ZodType<Prisma.WaybillRuleOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  pattern: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  channel: z.lazy(() => ChannelOrderByWithRelationInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional()
}).strict();

export const WaybillRuleWhereUniqueInputSchema: z.ZodType<Prisma.WaybillRuleWhereUniqueInput> = z.union([
  z.object({
    id: z.string().uuid(),
    channelId: z.string()
  }),
  z.object({
    id: z.string().uuid(),
  }),
  z.object({
    channelId: z.string(),
  }),
])
.and(z.object({
  id: z.string().uuid().optional(),
  channelId: z.string().optional(),
  AND: z.union([ z.lazy(() => WaybillRuleWhereInputSchema),z.lazy(() => WaybillRuleWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => WaybillRuleWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => WaybillRuleWhereInputSchema),z.lazy(() => WaybillRuleWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  pattern: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelNullableScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional().nullable(),
  fbaOrders: z.lazy(() => FBAOrderListRelationFilterSchema).optional()
}).strict());

export const WaybillRuleOrderByWithAggregationInputSchema: z.ZodType<Prisma.WaybillRuleOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  pattern: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => WaybillRuleCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => WaybillRuleMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => WaybillRuleMinOrderByAggregateInputSchema).optional()
}).strict();

export const WaybillRuleScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.WaybillRuleScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => WaybillRuleScalarWhereWithAggregatesInputSchema),z.lazy(() => WaybillRuleScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => WaybillRuleScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => WaybillRuleScalarWhereWithAggregatesInputSchema),z.lazy(() => WaybillRuleScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  pattern: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const ReceivableWhereInputSchema: z.ZodType<Prisma.ReceivableWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ReceivableWhereInputSchema),z.lazy(() => ReceivableWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ReceivableWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ReceivableWhereInputSchema),z.lazy(() => ReceivableWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  createdBy: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
}).strict();

export const ReceivableOrderByWithRelationInputSchema: z.ZodType<Prisma.ReceivableOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenant: z.lazy(() => TenantOrderByWithRelationInputSchema).optional(),
  createdBy: z.lazy(() => UserOrderByWithRelationInputSchema).optional()
}).strict();

export const ReceivableWhereUniqueInputSchema: z.ZodType<Prisma.ReceivableWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => ReceivableWhereInputSchema),z.lazy(() => ReceivableWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ReceivableWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ReceivableWhereInputSchema),z.lazy(() => ReceivableWhereInputSchema).array() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  createdBy: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
}).strict());

export const ReceivableOrderByWithAggregationInputSchema: z.ZodType<Prisma.ReceivableOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => ReceivableCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => ReceivableAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => ReceivableMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => ReceivableMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => ReceivableSumOrderByAggregateInputSchema).optional()
}).strict();

export const ReceivableScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.ReceivableScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => ReceivableScalarWhereWithAggregatesInputSchema),z.lazy(() => ReceivableScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => ReceivableScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ReceivableScalarWhereWithAggregatesInputSchema),z.lazy(() => ReceivableScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusWithAggregatesFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PayableWhereInputSchema: z.ZodType<Prisma.PayableWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PayableWhereInputSchema),z.lazy(() => PayableWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PayableWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PayableWhereInputSchema),z.lazy(() => PayableWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  createdBy: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
}).strict();

export const PayableOrderByWithRelationInputSchema: z.ZodType<Prisma.PayableOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenant: z.lazy(() => TenantOrderByWithRelationInputSchema).optional(),
  createdBy: z.lazy(() => UserOrderByWithRelationInputSchema).optional()
}).strict();

export const PayableWhereUniqueInputSchema: z.ZodType<Prisma.PayableWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PayableWhereInputSchema),z.lazy(() => PayableWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PayableWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PayableWhereInputSchema),z.lazy(() => PayableWhereInputSchema).array() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenant: z.union([ z.lazy(() => TenantScalarRelationFilterSchema),z.lazy(() => TenantWhereInputSchema) ]).optional(),
  createdBy: z.union([ z.lazy(() => UserNullableScalarRelationFilterSchema),z.lazy(() => UserWhereInputSchema) ]).optional().nullable(),
}).strict());

export const PayableOrderByWithAggregationInputSchema: z.ZodType<Prisma.PayableOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => PayableCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => PayableAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PayableMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PayableMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => PayableSumOrderByAggregateInputSchema).optional()
}).strict();

export const PayableScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PayableScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PayableScalarWhereWithAggregatesInputSchema),z.lazy(() => PayableScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PayableScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PayableScalarWhereWithAggregatesInputSchema),z.lazy(() => PayableScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusWithAggregatesFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const TransportPriceWhereInputSchema: z.ZodType<Prisma.TransportPriceWhereInput> = z.object({
  AND: z.union([ z.lazy(() => TransportPriceWhereInputSchema),z.lazy(() => TransportPriceWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => TransportPriceWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TransportPriceWhereInputSchema),z.lazy(() => TransportPriceWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  region: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  service: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingListRelationFilterSchema).optional()
}).strict();

export const TransportPriceOrderByWithRelationInputSchema: z.ZodType<Prisma.TransportPriceOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  service: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  channel: z.lazy(() => ChannelOrderByWithRelationInputSchema).optional(),
  settings: z.lazy(() => PriceSettingOrderByRelationAggregateInputSchema).optional()
}).strict();

export const TransportPriceWhereUniqueInputSchema: z.ZodType<Prisma.TransportPriceWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => TransportPriceWhereInputSchema),z.lazy(() => TransportPriceWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => TransportPriceWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TransportPriceWhereInputSchema),z.lazy(() => TransportPriceWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  region: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  service: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingListRelationFilterSchema).optional()
}).strict());

export const TransportPriceOrderByWithAggregationInputSchema: z.ZodType<Prisma.TransportPriceOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  service: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => TransportPriceCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => TransportPriceMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => TransportPriceMinOrderByAggregateInputSchema).optional()
}).strict();

export const TransportPriceScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.TransportPriceScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => TransportPriceScalarWhereWithAggregatesInputSchema),z.lazy(() => TransportPriceScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => TransportPriceScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TransportPriceScalarWhereWithAggregatesInputSchema),z.lazy(() => TransportPriceScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  region: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  service: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PriceSettingWhereInputSchema: z.ZodType<Prisma.PriceSettingWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PriceSettingWhereInputSchema),z.lazy(() => PriceSettingWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceSettingWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceSettingWhereInputSchema),z.lazy(() => PriceSettingWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  priceId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  unit: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  value: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  transportPriceId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  price: z.union([ z.lazy(() => PriceScalarRelationFilterSchema),z.lazy(() => PriceWhereInputSchema) ]).optional(),
  transportPrice: z.union([ z.lazy(() => TransportPriceNullableScalarRelationFilterSchema),z.lazy(() => TransportPriceWhereInputSchema) ]).optional().nullable(),
}).strict();

export const PriceSettingOrderByWithRelationInputSchema: z.ZodType<Prisma.PriceSettingOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  priceId: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  unit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  value: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  transportPriceId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  price: z.lazy(() => PriceOrderByWithRelationInputSchema).optional(),
  transportPrice: z.lazy(() => TransportPriceOrderByWithRelationInputSchema).optional()
}).strict();

export const PriceSettingWhereUniqueInputSchema: z.ZodType<Prisma.PriceSettingWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PriceSettingWhereInputSchema),z.lazy(() => PriceSettingWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceSettingWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceSettingWhereInputSchema),z.lazy(() => PriceSettingWhereInputSchema).array() ]).optional(),
  priceId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  unit: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  value: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  transportPriceId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  price: z.union([ z.lazy(() => PriceScalarRelationFilterSchema),z.lazy(() => PriceWhereInputSchema) ]).optional(),
  transportPrice: z.union([ z.lazy(() => TransportPriceNullableScalarRelationFilterSchema),z.lazy(() => TransportPriceWhereInputSchema) ]).optional().nullable(),
}).strict());

export const PriceSettingOrderByWithAggregationInputSchema: z.ZodType<Prisma.PriceSettingOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  priceId: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  unit: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  value: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  transportPriceId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  _count: z.lazy(() => PriceSettingCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => PriceSettingAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PriceSettingMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PriceSettingMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => PriceSettingSumOrderByAggregateInputSchema).optional()
}).strict();

export const PriceSettingScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PriceSettingScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PriceSettingScalarWhereWithAggregatesInputSchema),z.lazy(() => PriceSettingScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceSettingScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceSettingScalarWhereWithAggregatesInputSchema),z.lazy(() => PriceSettingScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  priceId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  unit: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  value: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
  transportPriceId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const PriceWhereInputSchema: z.ZodType<Prisma.PriceWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PriceWhereInputSchema),z.lazy(() => PriceWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceWhereInputSchema),z.lazy(() => PriceWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  settings: z.lazy(() => PriceSettingListRelationFilterSchema).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
}).strict();

export const PriceOrderByWithRelationInputSchema: z.ZodType<Prisma.PriceOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  settings: z.lazy(() => PriceSettingOrderByRelationAggregateInputSchema).optional(),
  channel: z.lazy(() => ChannelOrderByWithRelationInputSchema).optional()
}).strict();

export const PriceWhereUniqueInputSchema: z.ZodType<Prisma.PriceWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PriceWhereInputSchema),z.lazy(() => PriceWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceWhereInputSchema),z.lazy(() => PriceWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  settings: z.lazy(() => PriceSettingListRelationFilterSchema).optional(),
  channel: z.union([ z.lazy(() => ChannelScalarRelationFilterSchema),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
}).strict());

export const PriceOrderByWithAggregationInputSchema: z.ZodType<Prisma.PriceOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => PriceCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PriceMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PriceMinOrderByAggregateInputSchema).optional()
}).strict();

export const PriceScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PriceScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PriceScalarWhereWithAggregatesInputSchema),z.lazy(() => PriceScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceScalarWhereWithAggregatesInputSchema),z.lazy(() => PriceScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PositionWhereInputSchema: z.ZodType<Prisma.PositionWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PositionWhereInputSchema),z.lazy(() => PositionWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionWhereInputSchema),z.lazy(() => PositionWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  title: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  members: z.lazy(() => PositionMemberListRelationFilterSchema).optional()
}).strict();

export const PositionOrderByWithRelationInputSchema: z.ZodType<Prisma.PositionOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  customer: z.lazy(() => CustomerOrderByWithRelationInputSchema).optional(),
  members: z.lazy(() => PositionMemberOrderByRelationAggregateInputSchema).optional()
}).strict();

export const PositionWhereUniqueInputSchema: z.ZodType<Prisma.PositionWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PositionWhereInputSchema),z.lazy(() => PositionWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionWhereInputSchema),z.lazy(() => PositionWhereInputSchema).array() ]).optional(),
  title: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  members: z.lazy(() => PositionMemberListRelationFilterSchema).optional()
}).strict());

export const PositionOrderByWithAggregationInputSchema: z.ZodType<Prisma.PositionOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => PositionCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PositionMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PositionMinOrderByAggregateInputSchema).optional()
}).strict();

export const PositionScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PositionScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PositionScalarWhereWithAggregatesInputSchema),z.lazy(() => PositionScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionScalarWhereWithAggregatesInputSchema),z.lazy(() => PositionScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  title: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PositionMemberWhereInputSchema: z.ZodType<Prisma.PositionMemberWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PositionMemberWhereInputSchema),z.lazy(() => PositionMemberWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionMemberWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionMemberWhereInputSchema),z.lazy(() => PositionMemberWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  positionId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  position: z.union([ z.lazy(() => PositionScalarRelationFilterSchema),z.lazy(() => PositionWhereInputSchema) ]).optional(),
}).strict();

export const PositionMemberOrderByWithRelationInputSchema: z.ZodType<Prisma.PositionMemberOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  positionId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  position: z.lazy(() => PositionOrderByWithRelationInputSchema).optional()
}).strict();

export const PositionMemberWhereUniqueInputSchema: z.ZodType<Prisma.PositionMemberWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => PositionMemberWhereInputSchema),z.lazy(() => PositionMemberWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionMemberWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionMemberWhereInputSchema),z.lazy(() => PositionMemberWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  positionId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  position: z.union([ z.lazy(() => PositionScalarRelationFilterSchema),z.lazy(() => PositionWhereInputSchema) ]).optional(),
}).strict());

export const PositionMemberOrderByWithAggregationInputSchema: z.ZodType<Prisma.PositionMemberOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  positionId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => PositionMemberCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => PositionMemberMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => PositionMemberMinOrderByAggregateInputSchema).optional()
}).strict();

export const PositionMemberScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.PositionMemberScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => PositionMemberScalarWhereWithAggregatesInputSchema),z.lazy(() => PositionMemberScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionMemberScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionMemberScalarWhereWithAggregatesInputSchema),z.lazy(() => PositionMemberScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  phone: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  positionId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const LoginLogWhereInputSchema: z.ZodType<Prisma.LoginLogWhereInput> = z.object({
  AND: z.union([ z.lazy(() => LoginLogWhereInputSchema),z.lazy(() => LoginLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => LoginLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => LoginLogWhereInputSchema),z.lazy(() => LoginLogWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  ip: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  device: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userAgent: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  loginAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
}).strict();

export const LoginLogOrderByWithRelationInputSchema: z.ZodType<Prisma.LoginLogOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  device: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  userAgent: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  loginAt: z.lazy(() => SortOrderSchema).optional(),
  customer: z.lazy(() => CustomerOrderByWithRelationInputSchema).optional()
}).strict();

export const LoginLogWhereUniqueInputSchema: z.ZodType<Prisma.LoginLogWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => LoginLogWhereInputSchema),z.lazy(() => LoginLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => LoginLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => LoginLogWhereInputSchema),z.lazy(() => LoginLogWhereInputSchema).array() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  ip: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  device: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userAgent: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  loginAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
}).strict());

export const LoginLogOrderByWithAggregationInputSchema: z.ZodType<Prisma.LoginLogOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  device: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  userAgent: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  loginAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => LoginLogCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => LoginLogMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => LoginLogMinOrderByAggregateInputSchema).optional()
}).strict();

export const LoginLogScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.LoginLogScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => LoginLogScalarWhereWithAggregatesInputSchema),z.lazy(() => LoginLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => LoginLogScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => LoginLogScalarWhereWithAggregatesInputSchema),z.lazy(() => LoginLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  ip: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  device: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  userAgent: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  loginAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const FinanceBillWhereInputSchema: z.ZodType<Prisma.FinanceBillWhereInput> = z.object({
  AND: z.union([ z.lazy(() => FinanceBillWhereInputSchema),z.lazy(() => FinanceBillWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FinanceBillWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FinanceBillWhereInputSchema),z.lazy(() => FinanceBillWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billNo: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  totalAmount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  logs: z.lazy(() => BillLogListRelationFilterSchema).optional(),
  attachments: z.lazy(() => BillAttachmentListRelationFilterSchema).optional()
}).strict();

export const FinanceBillOrderByWithRelationInputSchema: z.ZodType<Prisma.FinanceBillOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billNo: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  customer: z.lazy(() => CustomerOrderByWithRelationInputSchema).optional(),
  waybills: z.lazy(() => FBAOrderOrderByRelationAggregateInputSchema).optional(),
  logs: z.lazy(() => BillLogOrderByRelationAggregateInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentOrderByRelationAggregateInputSchema).optional()
}).strict();

export const FinanceBillWhereUniqueInputSchema: z.ZodType<Prisma.FinanceBillWhereUniqueInput> = z.union([
  z.object({
    id: z.string().uuid(),
    billNo: z.string()
  }),
  z.object({
    id: z.string().uuid(),
  }),
  z.object({
    billNo: z.string(),
  }),
])
.and(z.object({
  id: z.string().uuid().optional(),
  billNo: z.string().optional(),
  AND: z.union([ z.lazy(() => FinanceBillWhereInputSchema),z.lazy(() => FinanceBillWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FinanceBillWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FinanceBillWhereInputSchema),z.lazy(() => FinanceBillWhereInputSchema).array() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  totalAmount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  customer: z.union([ z.lazy(() => CustomerScalarRelationFilterSchema),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderListRelationFilterSchema).optional(),
  logs: z.lazy(() => BillLogListRelationFilterSchema).optional(),
  attachments: z.lazy(() => BillAttachmentListRelationFilterSchema).optional()
}).strict());

export const FinanceBillOrderByWithAggregationInputSchema: z.ZodType<Prisma.FinanceBillOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billNo: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => FinanceBillCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => FinanceBillAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => FinanceBillMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => FinanceBillMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => FinanceBillSumOrderByAggregateInputSchema).optional()
}).strict();

export const FinanceBillScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.FinanceBillScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => FinanceBillScalarWhereWithAggregatesInputSchema),z.lazy(() => FinanceBillScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => FinanceBillScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FinanceBillScalarWhereWithAggregatesInputSchema),z.lazy(() => FinanceBillScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  billNo: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  totalAmount: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),
  status: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const BillLogWhereInputSchema: z.ZodType<Prisma.BillLogWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BillLogWhereInputSchema),z.lazy(() => BillLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillLogWhereInputSchema),z.lazy(() => BillLogWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  bill: z.union([ z.lazy(() => FinanceBillScalarRelationFilterSchema),z.lazy(() => FinanceBillWhereInputSchema) ]).optional(),
}).strict();

export const BillLogOrderByWithRelationInputSchema: z.ZodType<Prisma.BillLogOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  bill: z.lazy(() => FinanceBillOrderByWithRelationInputSchema).optional()
}).strict();

export const BillLogWhereUniqueInputSchema: z.ZodType<Prisma.BillLogWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => BillLogWhereInputSchema),z.lazy(() => BillLogWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillLogWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillLogWhereInputSchema),z.lazy(() => BillLogWhereInputSchema).array() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  bill: z.union([ z.lazy(() => FinanceBillScalarRelationFilterSchema),z.lazy(() => FinanceBillWhereInputSchema) ]).optional(),
}).strict());

export const BillLogOrderByWithAggregationInputSchema: z.ZodType<Prisma.BillLogOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => BillLogCountOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => BillLogMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => BillLogMinOrderByAggregateInputSchema).optional()
}).strict();

export const BillLogScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.BillLogScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => BillLogScalarWhereWithAggregatesInputSchema),z.lazy(() => BillLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillLogScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillLogScalarWhereWithAggregatesInputSchema),z.lazy(() => BillLogScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const BillAttachmentWhereInputSchema: z.ZodType<Prisma.BillAttachmentWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BillAttachmentWhereInputSchema),z.lazy(() => BillAttachmentWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillAttachmentWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillAttachmentWhereInputSchema),z.lazy(() => BillAttachmentWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  url: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  filename: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fileSize: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  mimeType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  bill: z.union([ z.lazy(() => FinanceBillScalarRelationFilterSchema),z.lazy(() => FinanceBillWhereInputSchema) ]).optional(),
}).strict();

export const BillAttachmentOrderByWithRelationInputSchema: z.ZodType<Prisma.BillAttachmentOrderByWithRelationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  filename: z.lazy(() => SortOrderSchema).optional(),
  fileSize: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  mimeType: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  bill: z.lazy(() => FinanceBillOrderByWithRelationInputSchema).optional()
}).strict();

export const BillAttachmentWhereUniqueInputSchema: z.ZodType<Prisma.BillAttachmentWhereUniqueInput> = z.object({
  id: z.string().uuid()
})
.and(z.object({
  id: z.string().uuid().optional(),
  AND: z.union([ z.lazy(() => BillAttachmentWhereInputSchema),z.lazy(() => BillAttachmentWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillAttachmentWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillAttachmentWhereInputSchema),z.lazy(() => BillAttachmentWhereInputSchema).array() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  url: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  filename: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fileSize: z.union([ z.lazy(() => IntNullableFilterSchema),z.number().int() ]).optional().nullable(),
  mimeType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  bill: z.union([ z.lazy(() => FinanceBillScalarRelationFilterSchema),z.lazy(() => FinanceBillWhereInputSchema) ]).optional(),
}).strict());

export const BillAttachmentOrderByWithAggregationInputSchema: z.ZodType<Prisma.BillAttachmentOrderByWithAggregationInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  filename: z.lazy(() => SortOrderSchema).optional(),
  fileSize: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  mimeType: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  _count: z.lazy(() => BillAttachmentCountOrderByAggregateInputSchema).optional(),
  _avg: z.lazy(() => BillAttachmentAvgOrderByAggregateInputSchema).optional(),
  _max: z.lazy(() => BillAttachmentMaxOrderByAggregateInputSchema).optional(),
  _min: z.lazy(() => BillAttachmentMinOrderByAggregateInputSchema).optional(),
  _sum: z.lazy(() => BillAttachmentSumOrderByAggregateInputSchema).optional()
}).strict();

export const BillAttachmentScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.BillAttachmentScalarWhereWithAggregatesInput> = z.object({
  AND: z.union([ z.lazy(() => BillAttachmentScalarWhereWithAggregatesInputSchema),z.lazy(() => BillAttachmentScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillAttachmentScalarWhereWithAggregatesInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillAttachmentScalarWhereWithAggregatesInputSchema),z.lazy(() => BillAttachmentScalarWhereWithAggregatesInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  url: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  filename: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),
  fileSize: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),
  mimeType: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const TenantCreateInputSchema: z.ZodType<Prisma.TenantCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateInputSchema: z.ZodType<Prisma.TenantUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUpdateInputSchema: z.ZodType<Prisma.TenantUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantCreateManyInputSchema: z.ZodType<Prisma.TenantCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const TenantUpdateManyMutationInputSchema: z.ZodType<Prisma.TenantUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const TenantUncheckedUpdateManyInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const UserCreateInputSchema: z.ZodType<Prisma.UserCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateInputSchema: z.ZodType<Prisma.UserUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUpdateInputSchema: z.ZodType<Prisma.UserUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateInputSchema: z.ZodType<Prisma.UserUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserCreateManyInputSchema: z.ZodType<Prisma.UserCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const UserUpdateManyMutationInputSchema: z.ZodType<Prisma.UserUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const UserUncheckedUpdateManyInputSchema: z.ZodType<Prisma.UserUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionCreateInputSchema: z.ZodType<Prisma.PermissionCreateInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutPermissionsInputSchema)
}).strict();

export const PermissionUncheckedCreateInputSchema: z.ZodType<Prisma.PermissionUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema),
  userId: z.string()
}).strict();

export const PermissionUpdateInputSchema: z.ZodType<Prisma.PermissionUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutPermissionsNestedInputSchema).optional()
}).strict();

export const PermissionUncheckedUpdateInputSchema: z.ZodType<Prisma.PermissionUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionCreateManyInputSchema: z.ZodType<Prisma.PermissionCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema),
  userId: z.string()
}).strict();

export const PermissionUpdateManyMutationInputSchema: z.ZodType<Prisma.PermissionUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PermissionUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BoxCreateInputSchema: z.ZodType<Prisma.BoxCreateInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable(),
  fbaOrder: z.lazy(() => FBAOrderCreateNestedOneWithoutBoxesInputSchema).optional()
}).strict();

export const BoxUncheckedCreateInputSchema: z.ZodType<Prisma.BoxUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  fbaOrderId: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable()
}).strict();

export const BoxUpdateInputSchema: z.ZodType<Prisma.BoxUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fbaOrder: z.lazy(() => FBAOrderUpdateOneWithoutBoxesNestedInputSchema).optional()
}).strict();

export const BoxUncheckedUpdateInputSchema: z.ZodType<Prisma.BoxUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fbaOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const BoxCreateManyInputSchema: z.ZodType<Prisma.BoxCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  fbaOrderId: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable()
}).strict();

export const BoxUpdateManyMutationInputSchema: z.ZodType<Prisma.BoxUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const BoxUncheckedUpdateManyInputSchema: z.ZodType<Prisma.BoxUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fbaOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const ShipmentLogCreateInputSchema: z.ZodType<Prisma.ShipmentLogCreateInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date(),
  shipment: z.lazy(() => FBAOrderCreateNestedOneWithoutLogsInputSchema)
}).strict();

export const ShipmentLogUncheckedCreateInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  shipmentId: z.string(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date()
}).strict();

export const ShipmentLogUpdateInputSchema: z.ZodType<Prisma.ShipmentLogUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  shipment: z.lazy(() => FBAOrderUpdateOneRequiredWithoutLogsNestedInputSchema).optional()
}).strict();

export const ShipmentLogUncheckedUpdateInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  shipmentId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ShipmentLogCreateManyInputSchema: z.ZodType<Prisma.ShipmentLogCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  shipmentId: z.string(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date()
}).strict();

export const ShipmentLogUpdateManyMutationInputSchema: z.ZodType<Prisma.ShipmentLogUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ShipmentLogUncheckedUpdateManyInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  shipmentId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CustomerCreateInputSchema: z.ZodType<Prisma.CustomerCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUpdateInputSchema: z.ZodType<Prisma.CustomerUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerCreateManyInputSchema: z.ZodType<Prisma.CustomerCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional()
}).strict();

export const CustomerUpdateManyMutationInputSchema: z.ZodType<Prisma.CustomerUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CustomerUncheckedUpdateManyInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderCreateInputSchema: z.ZodType<Prisma.FBAOrderCreateInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUpdateInputSchema: z.ZodType<Prisma.FBAOrderUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderCreateManyInputSchema: z.ZodType<Prisma.FBAOrderCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const FBAOrderUpdateManyMutationInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const AttachmentCreateInputSchema: z.ZodType<Prisma.AttachmentCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string(),
  waybill: z.lazy(() => FBAOrderCreateNestedOneWithoutAttachmentsInputSchema)
}).strict();

export const AttachmentUncheckedCreateInputSchema: z.ZodType<Prisma.AttachmentUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string(),
  waybillId: z.string()
}).strict();

export const AttachmentUpdateInputSchema: z.ZodType<Prisma.AttachmentUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  waybill: z.lazy(() => FBAOrderUpdateOneRequiredWithoutAttachmentsNestedInputSchema).optional()
}).strict();

export const AttachmentUncheckedUpdateInputSchema: z.ZodType<Prisma.AttachmentUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  waybillId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const AttachmentCreateManyInputSchema: z.ZodType<Prisma.AttachmentCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string(),
  waybillId: z.string()
}).strict();

export const AttachmentUpdateManyMutationInputSchema: z.ZodType<Prisma.AttachmentUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const AttachmentUncheckedUpdateManyInputSchema: z.ZodType<Prisma.AttachmentUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  waybillId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CarrierCreateInputSchema: z.ZodType<Prisma.CarrierCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channels: z.lazy(() => ChannelCreateNestedManyWithoutCarrierInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierUncheckedCreateInputSchema: z.ZodType<Prisma.CarrierUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channels: z.lazy(() => ChannelUncheckedCreateNestedManyWithoutCarrierInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierUpdateInputSchema: z.ZodType<Prisma.CarrierUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channels: z.lazy(() => ChannelUpdateManyWithoutCarrierNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const CarrierUncheckedUpdateInputSchema: z.ZodType<Prisma.CarrierUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channels: z.lazy(() => ChannelUncheckedUpdateManyWithoutCarrierNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const CarrierCreateManyInputSchema: z.ZodType<Prisma.CarrierCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const CarrierUpdateManyMutationInputSchema: z.ZodType<Prisma.CarrierUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CarrierUncheckedUpdateManyInputSchema: z.ZodType<Prisma.CarrierUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ChannelCreateInputSchema: z.ZodType<Prisma.ChannelCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUpdateInputSchema: z.ZodType<Prisma.ChannelUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelCreateManyInputSchema: z.ZodType<Prisma.ChannelCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const ChannelUpdateManyMutationInputSchema: z.ZodType<Prisma.ChannelUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
}).strict();

export const ChannelUncheckedUpdateManyInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const RateRuleCreateInputSchema: z.ZodType<Prisma.RateRuleCreateInput> = z.object({
  id: z.string().uuid().optional(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutRatesInputSchema)
}).strict();

export const RateRuleUncheckedCreateInputSchema: z.ZodType<Prisma.RateRuleUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int()
}).strict();

export const RateRuleUpdateInputSchema: z.ZodType<Prisma.RateRuleUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutRatesNestedInputSchema).optional()
}).strict();

export const RateRuleUncheckedUpdateInputSchema: z.ZodType<Prisma.RateRuleUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const RateRuleCreateManyInputSchema: z.ZodType<Prisma.RateRuleCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int()
}).strict();

export const RateRuleUpdateManyMutationInputSchema: z.ZodType<Prisma.RateRuleUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const RateRuleUncheckedUpdateManyInputSchema: z.ZodType<Prisma.RateRuleUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const WaybillRuleCreateInputSchema: z.ZodType<Prisma.WaybillRuleCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutWaybillRuleInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedCreateInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelUncheckedCreateNestedOneWithoutWaybillRuleInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleUpdateInputSchema: z.ZodType<Prisma.WaybillRuleUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneWithoutWaybillRuleNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedUpdateInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUncheckedUpdateOneWithoutWaybillRuleNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const WaybillRuleCreateManyInputSchema: z.ZodType<Prisma.WaybillRuleCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const WaybillRuleUpdateManyMutationInputSchema: z.ZodType<Prisma.WaybillRuleUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const WaybillRuleUncheckedUpdateManyInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ReceivableCreateInputSchema: z.ZodType<Prisma.ReceivableCreateInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutReceivablesInputSchema),
  createdBy: z.lazy(() => UserCreateNestedOneWithoutReceivablesInputSchema).optional()
}).strict();

export const ReceivableUncheckedCreateInputSchema: z.ZodType<Prisma.ReceivableUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const ReceivableUpdateInputSchema: z.ZodType<Prisma.ReceivableUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutReceivablesNestedInputSchema).optional(),
  createdBy: z.lazy(() => UserUpdateOneWithoutReceivablesNestedInputSchema).optional()
}).strict();

export const ReceivableUncheckedUpdateInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ReceivableCreateManyInputSchema: z.ZodType<Prisma.ReceivableCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const ReceivableUpdateManyMutationInputSchema: z.ZodType<Prisma.ReceivableUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ReceivableUncheckedUpdateManyInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableCreateInputSchema: z.ZodType<Prisma.PayableCreateInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutPayablesInputSchema),
  createdBy: z.lazy(() => UserCreateNestedOneWithoutPayablesInputSchema).optional()
}).strict();

export const PayableUncheckedCreateInputSchema: z.ZodType<Prisma.PayableUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableUpdateInputSchema: z.ZodType<Prisma.PayableUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutPayablesNestedInputSchema).optional(),
  createdBy: z.lazy(() => UserUpdateOneWithoutPayablesNestedInputSchema).optional()
}).strict();

export const PayableUncheckedUpdateInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableCreateManyInputSchema: z.ZodType<Prisma.PayableCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableUpdateManyMutationInputSchema: z.ZodType<Prisma.PayableUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const TransportPriceCreateInputSchema: z.ZodType<Prisma.TransportPriceCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutTransportPricesInputSchema),
  settings: z.lazy(() => PriceSettingCreateNestedManyWithoutTransportPriceInputSchema).optional()
}).strict();

export const TransportPriceUncheckedCreateInputSchema: z.ZodType<Prisma.TransportPriceUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  channelId: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingUncheckedCreateNestedManyWithoutTransportPriceInputSchema).optional()
}).strict();

export const TransportPriceUpdateInputSchema: z.ZodType<Prisma.TransportPriceUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutTransportPricesNestedInputSchema).optional(),
  settings: z.lazy(() => PriceSettingUpdateManyWithoutTransportPriceNestedInputSchema).optional()
}).strict();

export const TransportPriceUncheckedUpdateInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUncheckedUpdateManyWithoutTransportPriceNestedInputSchema).optional()
}).strict();

export const TransportPriceCreateManyInputSchema: z.ZodType<Prisma.TransportPriceCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  channelId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const TransportPriceUpdateManyMutationInputSchema: z.ZodType<Prisma.TransportPriceUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const TransportPriceUncheckedUpdateManyInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceSettingCreateInputSchema: z.ZodType<Prisma.PriceSettingCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  price: z.lazy(() => PriceCreateNestedOneWithoutSettingsInputSchema),
  transportPrice: z.lazy(() => TransportPriceCreateNestedOneWithoutSettingsInputSchema).optional()
}).strict();

export const PriceSettingUncheckedCreateInputSchema: z.ZodType<Prisma.PriceSettingUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  priceId: z.string(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  transportPriceId: z.string().optional().nullable()
}).strict();

export const PriceSettingUpdateInputSchema: z.ZodType<Prisma.PriceSettingUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  price: z.lazy(() => PriceUpdateOneRequiredWithoutSettingsNestedInputSchema).optional(),
  transportPrice: z.lazy(() => TransportPriceUpdateOneWithoutSettingsNestedInputSchema).optional()
}).strict();

export const PriceSettingUncheckedUpdateInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  priceId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  transportPriceId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PriceSettingCreateManyInputSchema: z.ZodType<Prisma.PriceSettingCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  priceId: z.string(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  transportPriceId: z.string().optional().nullable()
}).strict();

export const PriceSettingUpdateManyMutationInputSchema: z.ZodType<Prisma.PriceSettingUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceSettingUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  priceId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  transportPriceId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PriceCreateInputSchema: z.ZodType<Prisma.PriceCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingCreateNestedManyWithoutPriceInputSchema).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutPricesInputSchema)
}).strict();

export const PriceUncheckedCreateInputSchema: z.ZodType<Prisma.PriceUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  channelId: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingUncheckedCreateNestedManyWithoutPriceInputSchema).optional()
}).strict();

export const PriceUpdateInputSchema: z.ZodType<Prisma.PriceUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUpdateManyWithoutPriceNestedInputSchema).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutPricesNestedInputSchema).optional()
}).strict();

export const PriceUncheckedUpdateInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUncheckedUpdateManyWithoutPriceNestedInputSchema).optional()
}).strict();

export const PriceCreateManyInputSchema: z.ZodType<Prisma.PriceCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  channelId: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PriceUpdateManyMutationInputSchema: z.ZodType<Prisma.PriceUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionCreateInputSchema: z.ZodType<Prisma.PositionCreateInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  createdAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutPositionsInputSchema),
  members: z.lazy(() => PositionMemberCreateNestedManyWithoutPositionInputSchema).optional()
}).strict();

export const PositionUncheckedCreateInputSchema: z.ZodType<Prisma.PositionUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  customerId: z.string(),
  createdAt: z.coerce.date().optional(),
  members: z.lazy(() => PositionMemberUncheckedCreateNestedManyWithoutPositionInputSchema).optional()
}).strict();

export const PositionUpdateInputSchema: z.ZodType<Prisma.PositionUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutPositionsNestedInputSchema).optional(),
  members: z.lazy(() => PositionMemberUpdateManyWithoutPositionNestedInputSchema).optional()
}).strict();

export const PositionUncheckedUpdateInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  members: z.lazy(() => PositionMemberUncheckedUpdateManyWithoutPositionNestedInputSchema).optional()
}).strict();

export const PositionCreateManyInputSchema: z.ZodType<Prisma.PositionCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  customerId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionUpdateManyMutationInputSchema: z.ZodType<Prisma.PositionUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionMemberCreateInputSchema: z.ZodType<Prisma.PositionMemberCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  position: z.lazy(() => PositionCreateNestedOneWithoutMembersInputSchema)
}).strict();

export const PositionMemberUncheckedCreateInputSchema: z.ZodType<Prisma.PositionMemberUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  positionId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionMemberUpdateInputSchema: z.ZodType<Prisma.PositionMemberUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  position: z.lazy(() => PositionUpdateOneRequiredWithoutMembersNestedInputSchema).optional()
}).strict();

export const PositionMemberUncheckedUpdateInputSchema: z.ZodType<Prisma.PositionMemberUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  positionId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionMemberCreateManyInputSchema: z.ZodType<Prisma.PositionMemberCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  positionId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionMemberUpdateManyMutationInputSchema: z.ZodType<Prisma.PositionMemberUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionMemberUncheckedUpdateManyInputSchema: z.ZodType<Prisma.PositionMemberUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  positionId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogCreateInputSchema: z.ZodType<Prisma.LoginLogCreateInput> = z.object({
  id: z.string().uuid().optional(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutLoginLogsInputSchema)
}).strict();

export const LoginLogUncheckedCreateInputSchema: z.ZodType<Prisma.LoginLogUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  customerId: z.string(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional()
}).strict();

export const LoginLogUpdateInputSchema: z.ZodType<Prisma.LoginLogUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutLoginLogsNestedInputSchema).optional()
}).strict();

export const LoginLogUncheckedUpdateInputSchema: z.ZodType<Prisma.LoginLogUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogCreateManyInputSchema: z.ZodType<Prisma.LoginLogCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  customerId: z.string(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional()
}).strict();

export const LoginLogUpdateManyMutationInputSchema: z.ZodType<Prisma.LoginLogUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogUncheckedUpdateManyInputSchema: z.ZodType<Prisma.LoginLogUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FinanceBillCreateInputSchema: z.ZodType<Prisma.FinanceBillCreateInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutBillsInputSchema),
  waybills: z.lazy(() => FBAOrderCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUncheckedCreateInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  waybills: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUpdateInputSchema: z.ZodType<Prisma.FinanceBillUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutBillsNestedInputSchema).optional(),
  waybills: z.lazy(() => FBAOrderUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillCreateManyInputSchema: z.ZodType<Prisma.FinanceBillCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional()
}).strict();

export const FinanceBillUpdateManyMutationInputSchema: z.ZodType<Prisma.FinanceBillUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FinanceBillUncheckedUpdateManyInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogCreateInputSchema: z.ZodType<Prisma.BillLogCreateInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional(),
  bill: z.lazy(() => FinanceBillCreateNestedOneWithoutLogsInputSchema)
}).strict();

export const BillLogUncheckedCreateInputSchema: z.ZodType<Prisma.BillLogUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  billId: z.string(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional()
}).strict();

export const BillLogUpdateInputSchema: z.ZodType<Prisma.BillLogUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  bill: z.lazy(() => FinanceBillUpdateOneRequiredWithoutLogsNestedInputSchema).optional()
}).strict();

export const BillLogUncheckedUpdateInputSchema: z.ZodType<Prisma.BillLogUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogCreateManyInputSchema: z.ZodType<Prisma.BillLogCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  billId: z.string(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional()
}).strict();

export const BillLogUpdateManyMutationInputSchema: z.ZodType<Prisma.BillLogUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogUncheckedUpdateManyInputSchema: z.ZodType<Prisma.BillLogUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentCreateInputSchema: z.ZodType<Prisma.BillAttachmentCreateInput> = z.object({
  id: z.string().uuid().optional(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  bill: z.lazy(() => FinanceBillCreateNestedOneWithoutAttachmentsInputSchema)
}).strict();

export const BillAttachmentUncheckedCreateInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedCreateInput> = z.object({
  id: z.string().uuid().optional(),
  billId: z.string(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const BillAttachmentUpdateInputSchema: z.ZodType<Prisma.BillAttachmentUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  bill: z.lazy(() => FinanceBillUpdateOneRequiredWithoutAttachmentsNestedInputSchema).optional()
}).strict();

export const BillAttachmentUncheckedUpdateInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedUpdateInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentCreateManyInputSchema: z.ZodType<Prisma.BillAttachmentCreateManyInput> = z.object({
  id: z.string().uuid().optional(),
  billId: z.string(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const BillAttachmentUpdateManyMutationInputSchema: z.ZodType<Prisma.BillAttachmentUpdateManyMutationInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentUncheckedUpdateManyInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedUpdateManyInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const StringFilterSchema: z.ZodType<Prisma.StringFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringFilterSchema) ]).optional(),
}).strict();

export const DateTimeFilterSchema: z.ZodType<Prisma.DateTimeFilter> = z.object({
  equals: z.coerce.date().optional(),
  in: z.coerce.date().array().optional(),
  notIn: z.coerce.date().array().optional(),
  lt: z.coerce.date().optional(),
  lte: z.coerce.date().optional(),
  gt: z.coerce.date().optional(),
  gte: z.coerce.date().optional(),
  not: z.union([ z.coerce.date(),z.lazy(() => NestedDateTimeFilterSchema) ]).optional(),
}).strict();

export const UserListRelationFilterSchema: z.ZodType<Prisma.UserListRelationFilter> = z.object({
  every: z.lazy(() => UserWhereInputSchema).optional(),
  some: z.lazy(() => UserWhereInputSchema).optional(),
  none: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const FBAOrderListRelationFilterSchema: z.ZodType<Prisma.FBAOrderListRelationFilter> = z.object({
  every: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  some: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  none: z.lazy(() => FBAOrderWhereInputSchema).optional()
}).strict();

export const ReceivableListRelationFilterSchema: z.ZodType<Prisma.ReceivableListRelationFilter> = z.object({
  every: z.lazy(() => ReceivableWhereInputSchema).optional(),
  some: z.lazy(() => ReceivableWhereInputSchema).optional(),
  none: z.lazy(() => ReceivableWhereInputSchema).optional()
}).strict();

export const PayableListRelationFilterSchema: z.ZodType<Prisma.PayableListRelationFilter> = z.object({
  every: z.lazy(() => PayableWhereInputSchema).optional(),
  some: z.lazy(() => PayableWhereInputSchema).optional(),
  none: z.lazy(() => PayableWhereInputSchema).optional()
}).strict();

export const CustomerListRelationFilterSchema: z.ZodType<Prisma.CustomerListRelationFilter> = z.object({
  every: z.lazy(() => CustomerWhereInputSchema).optional(),
  some: z.lazy(() => CustomerWhereInputSchema).optional(),
  none: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const UserOrderByRelationAggregateInputSchema: z.ZodType<Prisma.UserOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderOrderByRelationAggregateInputSchema: z.ZodType<Prisma.FBAOrderOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ReceivableOrderByRelationAggregateInputSchema: z.ZodType<Prisma.ReceivableOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PayableOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PayableOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CustomerOrderByRelationAggregateInputSchema: z.ZodType<Prisma.CustomerOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TenantCountOrderByAggregateInputSchema: z.ZodType<Prisma.TenantCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TenantMaxOrderByAggregateInputSchema: z.ZodType<Prisma.TenantMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TenantMinOrderByAggregateInputSchema: z.ZodType<Prisma.TenantMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const StringWithAggregatesFilterSchema: z.ZodType<Prisma.StringWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional()
}).strict();

export const DateTimeWithAggregatesFilterSchema: z.ZodType<Prisma.DateTimeWithAggregatesFilter> = z.object({
  equals: z.coerce.date().optional(),
  in: z.coerce.date().array().optional(),
  notIn: z.coerce.date().array().optional(),
  lt: z.coerce.date().optional(),
  lte: z.coerce.date().optional(),
  gt: z.coerce.date().optional(),
  gte: z.coerce.date().optional(),
  not: z.union([ z.coerce.date(),z.lazy(() => NestedDateTimeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeFilterSchema).optional()
}).strict();

export const EnumRoleTypeFilterSchema: z.ZodType<Prisma.EnumRoleTypeFilter> = z.object({
  equals: z.lazy(() => RoleTypeSchema).optional(),
  in: z.lazy(() => RoleTypeSchema).array().optional(),
  notIn: z.lazy(() => RoleTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => NestedEnumRoleTypeFilterSchema) ]).optional(),
}).strict();

export const TenantScalarRelationFilterSchema: z.ZodType<Prisma.TenantScalarRelationFilter> = z.object({
  is: z.lazy(() => TenantWhereInputSchema).optional(),
  isNot: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const PermissionListRelationFilterSchema: z.ZodType<Prisma.PermissionListRelationFilter> = z.object({
  every: z.lazy(() => PermissionWhereInputSchema).optional(),
  some: z.lazy(() => PermissionWhereInputSchema).optional(),
  none: z.lazy(() => PermissionWhereInputSchema).optional()
}).strict();

export const PermissionOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PermissionOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const UserCountOrderByAggregateInputSchema: z.ZodType<Prisma.UserCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const UserMaxOrderByAggregateInputSchema: z.ZodType<Prisma.UserMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const UserMinOrderByAggregateInputSchema: z.ZodType<Prisma.UserMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  role: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumRoleTypeWithAggregatesFilterSchema: z.ZodType<Prisma.EnumRoleTypeWithAggregatesFilter> = z.object({
  equals: z.lazy(() => RoleTypeSchema).optional(),
  in: z.lazy(() => RoleTypeSchema).array().optional(),
  notIn: z.lazy(() => RoleTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => NestedEnumRoleTypeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumRoleTypeFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumRoleTypeFilterSchema).optional()
}).strict();

export const EnumPermissionTypeFilterSchema: z.ZodType<Prisma.EnumPermissionTypeFilter> = z.object({
  equals: z.lazy(() => PermissionTypeSchema).optional(),
  in: z.lazy(() => PermissionTypeSchema).array().optional(),
  notIn: z.lazy(() => PermissionTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => NestedEnumPermissionTypeFilterSchema) ]).optional(),
}).strict();

export const UserScalarRelationFilterSchema: z.ZodType<Prisma.UserScalarRelationFilter> = z.object({
  is: z.lazy(() => UserWhereInputSchema).optional(),
  isNot: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const PermissionCountOrderByAggregateInputSchema: z.ZodType<Prisma.PermissionCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PermissionMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PermissionMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PermissionMinOrderByAggregateInputSchema: z.ZodType<Prisma.PermissionMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumPermissionTypeWithAggregatesFilterSchema: z.ZodType<Prisma.EnumPermissionTypeWithAggregatesFilter> = z.object({
  equals: z.lazy(() => PermissionTypeSchema).optional(),
  in: z.lazy(() => PermissionTypeSchema).array().optional(),
  notIn: z.lazy(() => PermissionTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => NestedEnumPermissionTypeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumPermissionTypeFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumPermissionTypeFilterSchema).optional()
}).strict();

export const FloatNullableFilterSchema: z.ZodType<Prisma.FloatNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const BoolFilterSchema: z.ZodType<Prisma.BoolFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([ z.boolean(),z.lazy(() => NestedBoolFilterSchema) ]).optional(),
}).strict();

export const FloatFilterSchema: z.ZodType<Prisma.FloatFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatFilterSchema) ]).optional(),
}).strict();

export const IntFilterSchema: z.ZodType<Prisma.IntFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntFilterSchema) ]).optional(),
}).strict();

export const StringNullableFilterSchema: z.ZodType<Prisma.StringNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const FBAOrderNullableScalarRelationFilterSchema: z.ZodType<Prisma.FBAOrderNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => FBAOrderWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => FBAOrderWhereInputSchema).optional().nullable()
}).strict();

export const SortOrderInputSchema: z.ZodType<Prisma.SortOrderInput> = z.object({
  sort: z.lazy(() => SortOrderSchema),
  nulls: z.lazy(() => NullsOrderSchema).optional()
}).strict();

export const BoxCountOrderByAggregateInputSchema: z.ZodType<Prisma.BoxCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  fullCode: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  productNameEn: z.lazy(() => SortOrderSchema).optional(),
  productNameCn: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  material: z.lazy(() => SortOrderSchema).optional(),
  hsCode: z.lazy(() => SortOrderSchema).optional(),
  usage: z.lazy(() => SortOrderSchema).optional(),
  brand: z.lazy(() => SortOrderSchema).optional(),
  model: z.lazy(() => SortOrderSchema).optional(),
  sku: z.lazy(() => SortOrderSchema).optional(),
  asin: z.lazy(() => SortOrderSchema).optional(),
  fnsku: z.lazy(() => SortOrderSchema).optional(),
  fbaOrderId: z.lazy(() => SortOrderSchema).optional(),
  tradOrderId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BoxAvgOrderByAggregateInputSchema: z.ZodType<Prisma.BoxAvgOrderByAggregateInput> = z.object({
  weight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BoxMaxOrderByAggregateInputSchema: z.ZodType<Prisma.BoxMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  fullCode: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  productNameEn: z.lazy(() => SortOrderSchema).optional(),
  productNameCn: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  material: z.lazy(() => SortOrderSchema).optional(),
  hsCode: z.lazy(() => SortOrderSchema).optional(),
  usage: z.lazy(() => SortOrderSchema).optional(),
  brand: z.lazy(() => SortOrderSchema).optional(),
  model: z.lazy(() => SortOrderSchema).optional(),
  sku: z.lazy(() => SortOrderSchema).optional(),
  asin: z.lazy(() => SortOrderSchema).optional(),
  fnsku: z.lazy(() => SortOrderSchema).optional(),
  fbaOrderId: z.lazy(() => SortOrderSchema).optional(),
  tradOrderId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BoxMinOrderByAggregateInputSchema: z.ZodType<Prisma.BoxMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  fullCode: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  productNameEn: z.lazy(() => SortOrderSchema).optional(),
  productNameCn: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  material: z.lazy(() => SortOrderSchema).optional(),
  hsCode: z.lazy(() => SortOrderSchema).optional(),
  usage: z.lazy(() => SortOrderSchema).optional(),
  brand: z.lazy(() => SortOrderSchema).optional(),
  model: z.lazy(() => SortOrderSchema).optional(),
  sku: z.lazy(() => SortOrderSchema).optional(),
  asin: z.lazy(() => SortOrderSchema).optional(),
  fnsku: z.lazy(() => SortOrderSchema).optional(),
  fbaOrderId: z.lazy(() => SortOrderSchema).optional(),
  tradOrderId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BoxSumOrderByAggregateInputSchema: z.ZodType<Prisma.BoxSumOrderByAggregateInput> = z.object({
  weight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FloatNullableWithAggregatesFilterSchema: z.ZodType<Prisma.FloatNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedFloatNullableFilterSchema).optional()
}).strict();

export const BoolWithAggregatesFilterSchema: z.ZodType<Prisma.BoolWithAggregatesFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([ z.boolean(),z.lazy(() => NestedBoolWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolFilterSchema).optional()
}).strict();

export const FloatWithAggregatesFilterSchema: z.ZodType<Prisma.FloatWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedFloatFilterSchema).optional(),
  _min: z.lazy(() => NestedFloatFilterSchema).optional(),
  _max: z.lazy(() => NestedFloatFilterSchema).optional()
}).strict();

export const IntWithAggregatesFilterSchema: z.ZodType<Prisma.IntWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedIntFilterSchema).optional(),
  _max: z.lazy(() => NestedIntFilterSchema).optional()
}).strict();

export const StringNullableWithAggregatesFilterSchema: z.ZodType<Prisma.StringNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional()
}).strict();

export const FBAOrderScalarRelationFilterSchema: z.ZodType<Prisma.FBAOrderScalarRelationFilter> = z.object({
  is: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  isNot: z.lazy(() => FBAOrderWhereInputSchema).optional()
}).strict();

export const ShipmentLogCountOrderByAggregateInputSchema: z.ZodType<Prisma.ShipmentLogCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  shipmentId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ShipmentLogMaxOrderByAggregateInputSchema: z.ZodType<Prisma.ShipmentLogMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  shipmentId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ShipmentLogMinOrderByAggregateInputSchema: z.ZodType<Prisma.ShipmentLogMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  shipmentId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  location: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumCustomerStatusFilterSchema: z.ZodType<Prisma.EnumCustomerStatusFilter> = z.object({
  equals: z.lazy(() => CustomerStatusSchema).optional(),
  in: z.lazy(() => CustomerStatusSchema).array().optional(),
  notIn: z.lazy(() => CustomerStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => NestedEnumCustomerStatusFilterSchema) ]).optional(),
}).strict();

export const EnumSettlementMethodFilterSchema: z.ZodType<Prisma.EnumSettlementMethodFilter> = z.object({
  equals: z.lazy(() => SettlementMethodSchema).optional(),
  in: z.lazy(() => SettlementMethodSchema).array().optional(),
  notIn: z.lazy(() => SettlementMethodSchema).array().optional(),
  not: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => NestedEnumSettlementMethodFilterSchema) ]).optional(),
}).strict();

export const JsonNullableFilterSchema: z.ZodType<Prisma.JsonNullableFilter> = z.object({
  equals: InputJsonValueSchema.optional(),
  path: z.string().array().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_starts_with: InputJsonValueSchema.optional().nullable(),
  array_ends_with: InputJsonValueSchema.optional().nullable(),
  array_contains: InputJsonValueSchema.optional().nullable(),
  lt: InputJsonValueSchema.optional(),
  lte: InputJsonValueSchema.optional(),
  gt: InputJsonValueSchema.optional(),
  gte: InputJsonValueSchema.optional(),
  not: InputJsonValueSchema.optional()
}).strict();

export const UserNullableScalarRelationFilterSchema: z.ZodType<Prisma.UserNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => UserWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => UserWhereInputSchema).optional().nullable()
}).strict();

export const PositionListRelationFilterSchema: z.ZodType<Prisma.PositionListRelationFilter> = z.object({
  every: z.lazy(() => PositionWhereInputSchema).optional(),
  some: z.lazy(() => PositionWhereInputSchema).optional(),
  none: z.lazy(() => PositionWhereInputSchema).optional()
}).strict();

export const LoginLogListRelationFilterSchema: z.ZodType<Prisma.LoginLogListRelationFilter> = z.object({
  every: z.lazy(() => LoginLogWhereInputSchema).optional(),
  some: z.lazy(() => LoginLogWhereInputSchema).optional(),
  none: z.lazy(() => LoginLogWhereInputSchema).optional()
}).strict();

export const FinanceBillListRelationFilterSchema: z.ZodType<Prisma.FinanceBillListRelationFilter> = z.object({
  every: z.lazy(() => FinanceBillWhereInputSchema).optional(),
  some: z.lazy(() => FinanceBillWhereInputSchema).optional(),
  none: z.lazy(() => FinanceBillWhereInputSchema).optional()
}).strict();

export const PositionOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PositionOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const LoginLogOrderByRelationAggregateInputSchema: z.ZodType<Prisma.LoginLogOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillOrderByRelationAggregateInputSchema: z.ZodType<Prisma.FinanceBillOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CustomerCountOrderByAggregateInputSchema: z.ZodType<Prisma.CustomerCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  companyName: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  address: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  settlementMethod: z.lazy(() => SortOrderSchema).optional(),
  financeContactId: z.lazy(() => SortOrderSchema).optional(),
  businessLicense: z.lazy(() => SortOrderSchema).optional(),
  idCard: z.lazy(() => SortOrderSchema).optional(),
  attachments: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CustomerMaxOrderByAggregateInputSchema: z.ZodType<Prisma.CustomerMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  companyName: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  address: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  settlementMethod: z.lazy(() => SortOrderSchema).optional(),
  financeContactId: z.lazy(() => SortOrderSchema).optional(),
  businessLicense: z.lazy(() => SortOrderSchema).optional(),
  idCard: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CustomerMinOrderByAggregateInputSchema: z.ZodType<Prisma.CustomerMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  companyName: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  address: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  settlementMethod: z.lazy(() => SortOrderSchema).optional(),
  financeContactId: z.lazy(() => SortOrderSchema).optional(),
  businessLicense: z.lazy(() => SortOrderSchema).optional(),
  idCard: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumCustomerStatusWithAggregatesFilterSchema: z.ZodType<Prisma.EnumCustomerStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => CustomerStatusSchema).optional(),
  in: z.lazy(() => CustomerStatusSchema).array().optional(),
  notIn: z.lazy(() => CustomerStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => NestedEnumCustomerStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumCustomerStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumCustomerStatusFilterSchema).optional()
}).strict();

export const EnumSettlementMethodWithAggregatesFilterSchema: z.ZodType<Prisma.EnumSettlementMethodWithAggregatesFilter> = z.object({
  equals: z.lazy(() => SettlementMethodSchema).optional(),
  in: z.lazy(() => SettlementMethodSchema).array().optional(),
  notIn: z.lazy(() => SettlementMethodSchema).array().optional(),
  not: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => NestedEnumSettlementMethodWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumSettlementMethodFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumSettlementMethodFilterSchema).optional()
}).strict();

export const JsonNullableWithAggregatesFilterSchema: z.ZodType<Prisma.JsonNullableWithAggregatesFilter> = z.object({
  equals: InputJsonValueSchema.optional(),
  path: z.string().array().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_starts_with: InputJsonValueSchema.optional().nullable(),
  array_ends_with: InputJsonValueSchema.optional().nullable(),
  array_contains: InputJsonValueSchema.optional().nullable(),
  lt: InputJsonValueSchema.optional(),
  lte: InputJsonValueSchema.optional(),
  gt: InputJsonValueSchema.optional(),
  gte: InputJsonValueSchema.optional(),
  not: InputJsonValueSchema.optional(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedJsonNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedJsonNullableFilterSchema).optional()
}).strict();

export const EnumOrderStatusFilterSchema: z.ZodType<Prisma.EnumOrderStatusFilter> = z.object({
  equals: z.lazy(() => OrderStatusSchema).optional(),
  in: z.lazy(() => OrderStatusSchema).array().optional(),
  notIn: z.lazy(() => OrderStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => NestedEnumOrderStatusFilterSchema) ]).optional(),
}).strict();

export const StringNullableListFilterSchema: z.ZodType<Prisma.StringNullableListFilter> = z.object({
  equals: z.string().array().optional().nullable(),
  has: z.string().optional().nullable(),
  hasEvery: z.string().array().optional(),
  hasSome: z.string().array().optional(),
  isEmpty: z.boolean().optional()
}).strict();

export const IntNullableFilterSchema: z.ZodType<Prisma.IntNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const ChannelScalarRelationFilterSchema: z.ZodType<Prisma.ChannelScalarRelationFilter> = z.object({
  is: z.lazy(() => ChannelWhereInputSchema).optional(),
  isNot: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const CustomerScalarRelationFilterSchema: z.ZodType<Prisma.CustomerScalarRelationFilter> = z.object({
  is: z.lazy(() => CustomerWhereInputSchema).optional(),
  isNot: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerNullableScalarRelationFilterSchema: z.ZodType<Prisma.CustomerNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => CustomerWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => CustomerWhereInputSchema).optional().nullable()
}).strict();

export const BoxListRelationFilterSchema: z.ZodType<Prisma.BoxListRelationFilter> = z.object({
  every: z.lazy(() => BoxWhereInputSchema).optional(),
  some: z.lazy(() => BoxWhereInputSchema).optional(),
  none: z.lazy(() => BoxWhereInputSchema).optional()
}).strict();

export const WaybillRuleNullableScalarRelationFilterSchema: z.ZodType<Prisma.WaybillRuleNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => WaybillRuleWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => WaybillRuleWhereInputSchema).optional().nullable()
}).strict();

export const ShipmentLogListRelationFilterSchema: z.ZodType<Prisma.ShipmentLogListRelationFilter> = z.object({
  every: z.lazy(() => ShipmentLogWhereInputSchema).optional(),
  some: z.lazy(() => ShipmentLogWhereInputSchema).optional(),
  none: z.lazy(() => ShipmentLogWhereInputSchema).optional()
}).strict();

export const CarrierNullableScalarRelationFilterSchema: z.ZodType<Prisma.CarrierNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => CarrierWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => CarrierWhereInputSchema).optional().nullable()
}).strict();

export const AttachmentListRelationFilterSchema: z.ZodType<Prisma.AttachmentListRelationFilter> = z.object({
  every: z.lazy(() => AttachmentWhereInputSchema).optional(),
  some: z.lazy(() => AttachmentWhereInputSchema).optional(),
  none: z.lazy(() => AttachmentWhereInputSchema).optional()
}).strict();

export const BoxOrderByRelationAggregateInputSchema: z.ZodType<Prisma.BoxOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ShipmentLogOrderByRelationAggregateInputSchema: z.ZodType<Prisma.ShipmentLogOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const AttachmentOrderByRelationAggregateInputSchema: z.ZodType<Prisma.AttachmentOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderCountOrderByAggregateInputSchema: z.ZodType<Prisma.FBAOrderCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  freightCost: z.lazy(() => SortOrderSchema).optional(),
  totalCost: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  volume: z.lazy(() => SortOrderSchema).optional(),
  volumetricWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  cargo: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  hasMagnetic: z.lazy(() => SortOrderSchema).optional(),
  hasDangerous: z.lazy(() => SortOrderSchema).optional(),
  hasLiquid: z.lazy(() => SortOrderSchema).optional(),
  hasPowder: z.lazy(() => SortOrderSchema).optional(),
  clientCode: z.lazy(() => SortOrderSchema).optional(),
  company: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  store: z.lazy(() => SortOrderSchema).optional(),
  ref1: z.lazy(() => SortOrderSchema).optional(),
  vat: z.lazy(() => SortOrderSchema).optional(),
  ioss: z.lazy(() => SortOrderSchema).optional(),
  eori: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  category: z.lazy(() => SortOrderSchema).optional(),
  productName: z.lazy(() => SortOrderSchema).optional(),
  attrs: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  insurance: z.lazy(() => SortOrderSchema).optional(),
  address1: z.lazy(() => SortOrderSchema).optional(),
  address2: z.lazy(() => SortOrderSchema).optional(),
  address3: z.lazy(() => SortOrderSchema).optional(),
  addressDetail: z.lazy(() => SortOrderSchema).optional(),
  city: z.lazy(() => SortOrderSchema).optional(),
  state: z.lazy(() => SortOrderSchema).optional(),
  postalCode: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  senderId: z.lazy(() => SortOrderSchema).optional(),
  senderName: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  waybillNumber: z.lazy(() => SortOrderSchema).optional(),
  billingPrecision: z.lazy(() => SortOrderSchema).optional(),
  isCOD: z.lazy(() => SortOrderSchema).optional(),
  allowCustomerCancel: z.lazy(() => SortOrderSchema).optional(),
  trackingNumber: z.lazy(() => SortOrderSchema).optional(),
  labelUploaded: z.lazy(() => SortOrderSchema).optional(),
  errors: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderAvgOrderByAggregateInputSchema: z.ZodType<Prisma.FBAOrderAvgOrderByAggregateInput> = z.object({
  freightCost: z.lazy(() => SortOrderSchema).optional(),
  totalCost: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  volume: z.lazy(() => SortOrderSchema).optional(),
  volumetricWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  billingPrecision: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderMaxOrderByAggregateInputSchema: z.ZodType<Prisma.FBAOrderMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  freightCost: z.lazy(() => SortOrderSchema).optional(),
  totalCost: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  volume: z.lazy(() => SortOrderSchema).optional(),
  volumetricWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  cargo: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  hasMagnetic: z.lazy(() => SortOrderSchema).optional(),
  hasDangerous: z.lazy(() => SortOrderSchema).optional(),
  hasLiquid: z.lazy(() => SortOrderSchema).optional(),
  hasPowder: z.lazy(() => SortOrderSchema).optional(),
  clientCode: z.lazy(() => SortOrderSchema).optional(),
  company: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  store: z.lazy(() => SortOrderSchema).optional(),
  ref1: z.lazy(() => SortOrderSchema).optional(),
  vat: z.lazy(() => SortOrderSchema).optional(),
  ioss: z.lazy(() => SortOrderSchema).optional(),
  eori: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  category: z.lazy(() => SortOrderSchema).optional(),
  productName: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  insurance: z.lazy(() => SortOrderSchema).optional(),
  address1: z.lazy(() => SortOrderSchema).optional(),
  address2: z.lazy(() => SortOrderSchema).optional(),
  address3: z.lazy(() => SortOrderSchema).optional(),
  addressDetail: z.lazy(() => SortOrderSchema).optional(),
  city: z.lazy(() => SortOrderSchema).optional(),
  state: z.lazy(() => SortOrderSchema).optional(),
  postalCode: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  senderId: z.lazy(() => SortOrderSchema).optional(),
  senderName: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  waybillNumber: z.lazy(() => SortOrderSchema).optional(),
  billingPrecision: z.lazy(() => SortOrderSchema).optional(),
  isCOD: z.lazy(() => SortOrderSchema).optional(),
  allowCustomerCancel: z.lazy(() => SortOrderSchema).optional(),
  trackingNumber: z.lazy(() => SortOrderSchema).optional(),
  labelUploaded: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderMinOrderByAggregateInputSchema: z.ZodType<Prisma.FBAOrderMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  freightCost: z.lazy(() => SortOrderSchema).optional(),
  totalCost: z.lazy(() => SortOrderSchema).optional(),
  recipient: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  volume: z.lazy(() => SortOrderSchema).optional(),
  volumetricWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  cargo: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  userId: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  hasBattery: z.lazy(() => SortOrderSchema).optional(),
  hasMagnetic: z.lazy(() => SortOrderSchema).optional(),
  hasDangerous: z.lazy(() => SortOrderSchema).optional(),
  hasLiquid: z.lazy(() => SortOrderSchema).optional(),
  hasPowder: z.lazy(() => SortOrderSchema).optional(),
  clientCode: z.lazy(() => SortOrderSchema).optional(),
  company: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  store: z.lazy(() => SortOrderSchema).optional(),
  ref1: z.lazy(() => SortOrderSchema).optional(),
  vat: z.lazy(() => SortOrderSchema).optional(),
  ioss: z.lazy(() => SortOrderSchema).optional(),
  eori: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  category: z.lazy(() => SortOrderSchema).optional(),
  productName: z.lazy(() => SortOrderSchema).optional(),
  notes: z.lazy(() => SortOrderSchema).optional(),
  insurance: z.lazy(() => SortOrderSchema).optional(),
  address1: z.lazy(() => SortOrderSchema).optional(),
  address2: z.lazy(() => SortOrderSchema).optional(),
  address3: z.lazy(() => SortOrderSchema).optional(),
  addressDetail: z.lazy(() => SortOrderSchema).optional(),
  city: z.lazy(() => SortOrderSchema).optional(),
  state: z.lazy(() => SortOrderSchema).optional(),
  postalCode: z.lazy(() => SortOrderSchema).optional(),
  declaredValue: z.lazy(() => SortOrderSchema).optional(),
  declaredQuantity: z.lazy(() => SortOrderSchema).optional(),
  senderId: z.lazy(() => SortOrderSchema).optional(),
  senderName: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  waybillNumber: z.lazy(() => SortOrderSchema).optional(),
  billingPrecision: z.lazy(() => SortOrderSchema).optional(),
  isCOD: z.lazy(() => SortOrderSchema).optional(),
  allowCustomerCancel: z.lazy(() => SortOrderSchema).optional(),
  trackingNumber: z.lazy(() => SortOrderSchema).optional(),
  labelUploaded: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FBAOrderSumOrderByAggregateInputSchema: z.ZodType<Prisma.FBAOrderSumOrderByAggregateInput> = z.object({
  freightCost: z.lazy(() => SortOrderSchema).optional(),
  totalCost: z.lazy(() => SortOrderSchema).optional(),
  quantity: z.lazy(() => SortOrderSchema).optional(),
  weight: z.lazy(() => SortOrderSchema).optional(),
  volume: z.lazy(() => SortOrderSchema).optional(),
  volumetricWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  length: z.lazy(() => SortOrderSchema).optional(),
  width: z.lazy(() => SortOrderSchema).optional(),
  height: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  billingPrecision: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumOrderStatusWithAggregatesFilterSchema: z.ZodType<Prisma.EnumOrderStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => OrderStatusSchema).optional(),
  in: z.lazy(() => OrderStatusSchema).array().optional(),
  notIn: z.lazy(() => OrderStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => NestedEnumOrderStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumOrderStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumOrderStatusFilterSchema).optional()
}).strict();

export const IntNullableWithAggregatesFilterSchema: z.ZodType<Prisma.IntNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedIntNullableFilterSchema).optional()
}).strict();

export const AttachmentCountOrderByAggregateInputSchema: z.ZodType<Prisma.AttachmentCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  waybillId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const AttachmentMaxOrderByAggregateInputSchema: z.ZodType<Prisma.AttachmentMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  waybillId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const AttachmentMinOrderByAggregateInputSchema: z.ZodType<Prisma.AttachmentMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  waybillId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelListRelationFilterSchema: z.ZodType<Prisma.ChannelListRelationFilter> = z.object({
  every: z.lazy(() => ChannelWhereInputSchema).optional(),
  some: z.lazy(() => ChannelWhereInputSchema).optional(),
  none: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelOrderByRelationAggregateInputSchema: z.ZodType<Prisma.ChannelOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CarrierCountOrderByAggregateInputSchema: z.ZodType<Prisma.CarrierCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  website: z.lazy(() => SortOrderSchema).optional(),
  logoUrl: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CarrierMaxOrderByAggregateInputSchema: z.ZodType<Prisma.CarrierMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  website: z.lazy(() => SortOrderSchema).optional(),
  logoUrl: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const CarrierMinOrderByAggregateInputSchema: z.ZodType<Prisma.CarrierMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  website: z.lazy(() => SortOrderSchema).optional(),
  logoUrl: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleListRelationFilterSchema: z.ZodType<Prisma.RateRuleListRelationFilter> = z.object({
  every: z.lazy(() => RateRuleWhereInputSchema).optional(),
  some: z.lazy(() => RateRuleWhereInputSchema).optional(),
  none: z.lazy(() => RateRuleWhereInputSchema).optional()
}).strict();

export const TransportPriceListRelationFilterSchema: z.ZodType<Prisma.TransportPriceListRelationFilter> = z.object({
  every: z.lazy(() => TransportPriceWhereInputSchema).optional(),
  some: z.lazy(() => TransportPriceWhereInputSchema).optional(),
  none: z.lazy(() => TransportPriceWhereInputSchema).optional()
}).strict();

export const PriceListRelationFilterSchema: z.ZodType<Prisma.PriceListRelationFilter> = z.object({
  every: z.lazy(() => PriceWhereInputSchema).optional(),
  some: z.lazy(() => PriceWhereInputSchema).optional(),
  none: z.lazy(() => PriceWhereInputSchema).optional()
}).strict();

export const RateRuleOrderByRelationAggregateInputSchema: z.ZodType<Prisma.RateRuleOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TransportPriceOrderByRelationAggregateInputSchema: z.ZodType<Prisma.TransportPriceOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PriceOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelCountOrderByAggregateInputSchema: z.ZodType<Prisma.ChannelCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  decimal: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  rounding: z.lazy(() => SortOrderSchema).optional(),
  compareMode: z.lazy(() => SortOrderSchema).optional(),
  volRatio: z.lazy(() => SortOrderSchema).optional(),
  cubeRatio: z.lazy(() => SortOrderSchema).optional(),
  splitRatio: z.lazy(() => SortOrderSchema).optional(),
  chargeMethod: z.lazy(() => SortOrderSchema).optional(),
  minCharge: z.lazy(() => SortOrderSchema).optional(),
  ticketPrecision: z.lazy(() => SortOrderSchema).optional(),
  boxPrecision: z.lazy(() => SortOrderSchema).optional(),
  sizePrecision: z.lazy(() => SortOrderSchema).optional(),
  minPieces: z.lazy(() => SortOrderSchema).optional(),
  maxPieces: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxMaterialWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxAvgWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  maxDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  aging: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  labelCode: z.lazy(() => SortOrderSchema).optional(),
  assignedUser: z.lazy(() => SortOrderSchema).optional(),
  userLevel: z.lazy(() => SortOrderSchema).optional(),
  declareCurrency: z.lazy(() => SortOrderSchema).optional(),
  defaultDeclareCurrency: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  showWeight: z.lazy(() => SortOrderSchema).optional(),
  showSize: z.lazy(() => SortOrderSchema).optional(),
  requireWeight: z.lazy(() => SortOrderSchema).optional(),
  requireSize: z.lazy(() => SortOrderSchema).optional(),
  requirePhone: z.lazy(() => SortOrderSchema).optional(),
  requireEmail: z.lazy(() => SortOrderSchema).optional(),
  requirePackingList: z.lazy(() => SortOrderSchema).optional(),
  verifySalesLink: z.lazy(() => SortOrderSchema).optional(),
  verifyImageLink: z.lazy(() => SortOrderSchema).optional(),
  requireVAT: z.lazy(() => SortOrderSchema).optional(),
  requireVATFiling: z.lazy(() => SortOrderSchema).optional(),
  requireEORI: z.lazy(() => SortOrderSchema).optional(),
  enableBilling: z.lazy(() => SortOrderSchema).optional(),
  showBilling: z.lazy(() => SortOrderSchema).optional(),
  controlBilling: z.lazy(() => SortOrderSchema).optional(),
  controlReceivingFee: z.lazy(() => SortOrderSchema).optional(),
  promptUnderpayment: z.lazy(() => SortOrderSchema).optional(),
  modifyVolRatio: z.lazy(() => SortOrderSchema).optional(),
  showSupplierData: z.lazy(() => SortOrderSchema).optional(),
  orderBySKULibrary: z.lazy(() => SortOrderSchema).optional(),
  allowCancel: z.lazy(() => SortOrderSchema).optional(),
  noAutoCancelAPIFail: z.lazy(() => SortOrderSchema).optional(),
  allowChannelChange: z.lazy(() => SortOrderSchema).optional(),
  allowEdit: z.lazy(() => SortOrderSchema).optional(),
  allowTrackingEntry: z.lazy(() => SortOrderSchema).optional(),
  allowLabelUpload: z.lazy(() => SortOrderSchema).optional(),
  hideCarrier: z.lazy(() => SortOrderSchema).optional(),
  refundOnReturn: z.lazy(() => SortOrderSchema).optional(),
  noRefundOnCancel: z.lazy(() => SortOrderSchema).optional(),
  showInWMS: z.lazy(() => SortOrderSchema).optional(),
  enableCOD: z.lazy(() => SortOrderSchema).optional(),
  restrictWarehouseCode: z.lazy(() => SortOrderSchema).optional(),
  roundBeforeSplit: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeVolume: z.lazy(() => SortOrderSchema).optional(),
  chargePrice: z.lazy(() => SortOrderSchema).optional(),
  unitType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  extraFeeRules: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelAvgOrderByAggregateInputSchema: z.ZodType<Prisma.ChannelAvgOrderByAggregateInput> = z.object({
  volRatio: z.lazy(() => SortOrderSchema).optional(),
  cubeRatio: z.lazy(() => SortOrderSchema).optional(),
  splitRatio: z.lazy(() => SortOrderSchema).optional(),
  minCharge: z.lazy(() => SortOrderSchema).optional(),
  ticketPrecision: z.lazy(() => SortOrderSchema).optional(),
  boxPrecision: z.lazy(() => SortOrderSchema).optional(),
  sizePrecision: z.lazy(() => SortOrderSchema).optional(),
  minPieces: z.lazy(() => SortOrderSchema).optional(),
  maxPieces: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxMaterialWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxAvgWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  maxDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeVolume: z.lazy(() => SortOrderSchema).optional(),
  chargePrice: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelMaxOrderByAggregateInputSchema: z.ZodType<Prisma.ChannelMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  decimal: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  rounding: z.lazy(() => SortOrderSchema).optional(),
  compareMode: z.lazy(() => SortOrderSchema).optional(),
  volRatio: z.lazy(() => SortOrderSchema).optional(),
  cubeRatio: z.lazy(() => SortOrderSchema).optional(),
  splitRatio: z.lazy(() => SortOrderSchema).optional(),
  chargeMethod: z.lazy(() => SortOrderSchema).optional(),
  minCharge: z.lazy(() => SortOrderSchema).optional(),
  ticketPrecision: z.lazy(() => SortOrderSchema).optional(),
  boxPrecision: z.lazy(() => SortOrderSchema).optional(),
  sizePrecision: z.lazy(() => SortOrderSchema).optional(),
  minPieces: z.lazy(() => SortOrderSchema).optional(),
  maxPieces: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxMaterialWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxAvgWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  maxDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  aging: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  labelCode: z.lazy(() => SortOrderSchema).optional(),
  assignedUser: z.lazy(() => SortOrderSchema).optional(),
  userLevel: z.lazy(() => SortOrderSchema).optional(),
  declareCurrency: z.lazy(() => SortOrderSchema).optional(),
  defaultDeclareCurrency: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  showWeight: z.lazy(() => SortOrderSchema).optional(),
  showSize: z.lazy(() => SortOrderSchema).optional(),
  requireWeight: z.lazy(() => SortOrderSchema).optional(),
  requireSize: z.lazy(() => SortOrderSchema).optional(),
  requirePhone: z.lazy(() => SortOrderSchema).optional(),
  requireEmail: z.lazy(() => SortOrderSchema).optional(),
  requirePackingList: z.lazy(() => SortOrderSchema).optional(),
  verifySalesLink: z.lazy(() => SortOrderSchema).optional(),
  verifyImageLink: z.lazy(() => SortOrderSchema).optional(),
  requireVAT: z.lazy(() => SortOrderSchema).optional(),
  requireVATFiling: z.lazy(() => SortOrderSchema).optional(),
  requireEORI: z.lazy(() => SortOrderSchema).optional(),
  enableBilling: z.lazy(() => SortOrderSchema).optional(),
  showBilling: z.lazy(() => SortOrderSchema).optional(),
  controlBilling: z.lazy(() => SortOrderSchema).optional(),
  controlReceivingFee: z.lazy(() => SortOrderSchema).optional(),
  promptUnderpayment: z.lazy(() => SortOrderSchema).optional(),
  modifyVolRatio: z.lazy(() => SortOrderSchema).optional(),
  showSupplierData: z.lazy(() => SortOrderSchema).optional(),
  orderBySKULibrary: z.lazy(() => SortOrderSchema).optional(),
  allowCancel: z.lazy(() => SortOrderSchema).optional(),
  noAutoCancelAPIFail: z.lazy(() => SortOrderSchema).optional(),
  allowChannelChange: z.lazy(() => SortOrderSchema).optional(),
  allowEdit: z.lazy(() => SortOrderSchema).optional(),
  allowTrackingEntry: z.lazy(() => SortOrderSchema).optional(),
  allowLabelUpload: z.lazy(() => SortOrderSchema).optional(),
  hideCarrier: z.lazy(() => SortOrderSchema).optional(),
  refundOnReturn: z.lazy(() => SortOrderSchema).optional(),
  noRefundOnCancel: z.lazy(() => SortOrderSchema).optional(),
  showInWMS: z.lazy(() => SortOrderSchema).optional(),
  enableCOD: z.lazy(() => SortOrderSchema).optional(),
  restrictWarehouseCode: z.lazy(() => SortOrderSchema).optional(),
  roundBeforeSplit: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeVolume: z.lazy(() => SortOrderSchema).optional(),
  chargePrice: z.lazy(() => SortOrderSchema).optional(),
  unitType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelMinOrderByAggregateInputSchema: z.ZodType<Prisma.ChannelMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  code: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  country: z.lazy(() => SortOrderSchema).optional(),
  warehouse: z.lazy(() => SortOrderSchema).optional(),
  origin: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  decimal: z.lazy(() => SortOrderSchema).optional(),
  method: z.lazy(() => SortOrderSchema).optional(),
  rounding: z.lazy(() => SortOrderSchema).optional(),
  compareMode: z.lazy(() => SortOrderSchema).optional(),
  volRatio: z.lazy(() => SortOrderSchema).optional(),
  cubeRatio: z.lazy(() => SortOrderSchema).optional(),
  splitRatio: z.lazy(() => SortOrderSchema).optional(),
  chargeMethod: z.lazy(() => SortOrderSchema).optional(),
  minCharge: z.lazy(() => SortOrderSchema).optional(),
  ticketPrecision: z.lazy(() => SortOrderSchema).optional(),
  boxPrecision: z.lazy(() => SortOrderSchema).optional(),
  sizePrecision: z.lazy(() => SortOrderSchema).optional(),
  minPieces: z.lazy(() => SortOrderSchema).optional(),
  maxPieces: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxMaterialWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxAvgWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  maxDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  aging: z.lazy(() => SortOrderSchema).optional(),
  waybillRuleId: z.lazy(() => SortOrderSchema).optional(),
  labelCode: z.lazy(() => SortOrderSchema).optional(),
  assignedUser: z.lazy(() => SortOrderSchema).optional(),
  userLevel: z.lazy(() => SortOrderSchema).optional(),
  declareCurrency: z.lazy(() => SortOrderSchema).optional(),
  defaultDeclareCurrency: z.lazy(() => SortOrderSchema).optional(),
  sender: z.lazy(() => SortOrderSchema).optional(),
  showWeight: z.lazy(() => SortOrderSchema).optional(),
  showSize: z.lazy(() => SortOrderSchema).optional(),
  requireWeight: z.lazy(() => SortOrderSchema).optional(),
  requireSize: z.lazy(() => SortOrderSchema).optional(),
  requirePhone: z.lazy(() => SortOrderSchema).optional(),
  requireEmail: z.lazy(() => SortOrderSchema).optional(),
  requirePackingList: z.lazy(() => SortOrderSchema).optional(),
  verifySalesLink: z.lazy(() => SortOrderSchema).optional(),
  verifyImageLink: z.lazy(() => SortOrderSchema).optional(),
  requireVAT: z.lazy(() => SortOrderSchema).optional(),
  requireVATFiling: z.lazy(() => SortOrderSchema).optional(),
  requireEORI: z.lazy(() => SortOrderSchema).optional(),
  enableBilling: z.lazy(() => SortOrderSchema).optional(),
  showBilling: z.lazy(() => SortOrderSchema).optional(),
  controlBilling: z.lazy(() => SortOrderSchema).optional(),
  controlReceivingFee: z.lazy(() => SortOrderSchema).optional(),
  promptUnderpayment: z.lazy(() => SortOrderSchema).optional(),
  modifyVolRatio: z.lazy(() => SortOrderSchema).optional(),
  showSupplierData: z.lazy(() => SortOrderSchema).optional(),
  orderBySKULibrary: z.lazy(() => SortOrderSchema).optional(),
  allowCancel: z.lazy(() => SortOrderSchema).optional(),
  noAutoCancelAPIFail: z.lazy(() => SortOrderSchema).optional(),
  allowChannelChange: z.lazy(() => SortOrderSchema).optional(),
  allowEdit: z.lazy(() => SortOrderSchema).optional(),
  allowTrackingEntry: z.lazy(() => SortOrderSchema).optional(),
  allowLabelUpload: z.lazy(() => SortOrderSchema).optional(),
  hideCarrier: z.lazy(() => SortOrderSchema).optional(),
  refundOnReturn: z.lazy(() => SortOrderSchema).optional(),
  noRefundOnCancel: z.lazy(() => SortOrderSchema).optional(),
  showInWMS: z.lazy(() => SortOrderSchema).optional(),
  enableCOD: z.lazy(() => SortOrderSchema).optional(),
  restrictWarehouseCode: z.lazy(() => SortOrderSchema).optional(),
  roundBeforeSplit: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeVolume: z.lazy(() => SortOrderSchema).optional(),
  chargePrice: z.lazy(() => SortOrderSchema).optional(),
  unitType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  carrierId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelSumOrderByAggregateInputSchema: z.ZodType<Prisma.ChannelSumOrderByAggregateInput> = z.object({
  volRatio: z.lazy(() => SortOrderSchema).optional(),
  cubeRatio: z.lazy(() => SortOrderSchema).optional(),
  splitRatio: z.lazy(() => SortOrderSchema).optional(),
  minCharge: z.lazy(() => SortOrderSchema).optional(),
  ticketPrecision: z.lazy(() => SortOrderSchema).optional(),
  boxPrecision: z.lazy(() => SortOrderSchema).optional(),
  sizePrecision: z.lazy(() => SortOrderSchema).optional(),
  minPieces: z.lazy(() => SortOrderSchema).optional(),
  maxPieces: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxMaterialWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxAvgWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  maxTicketRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxRealWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxRealWeight: z.lazy(() => SortOrderSchema).optional(),
  minBoxChargeWeightLimit: z.lazy(() => SortOrderSchema).optional(),
  maxBoxChargeWeight: z.lazy(() => SortOrderSchema).optional(),
  minDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  maxDeclareValue: z.lazy(() => SortOrderSchema).optional(),
  chargeWeight: z.lazy(() => SortOrderSchema).optional(),
  chargeVolume: z.lazy(() => SortOrderSchema).optional(),
  chargePrice: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleCountOrderByAggregateInputSchema: z.ZodType<Prisma.RateRuleCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  weightType: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.lazy(() => SortOrderSchema).optional(),
  sideRule: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.lazy(() => SortOrderSchema).optional(),
  otherFee: z.lazy(() => SortOrderSchema).optional(),
  priority: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleAvgOrderByAggregateInputSchema: z.ZodType<Prisma.RateRuleAvgOrderByAggregateInput> = z.object({
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.lazy(() => SortOrderSchema).optional(),
  otherFee: z.lazy(() => SortOrderSchema).optional(),
  priority: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleMaxOrderByAggregateInputSchema: z.ZodType<Prisma.RateRuleMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  weightType: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.lazy(() => SortOrderSchema).optional(),
  sideRule: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.lazy(() => SortOrderSchema).optional(),
  otherFee: z.lazy(() => SortOrderSchema).optional(),
  priority: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleMinOrderByAggregateInputSchema: z.ZodType<Prisma.RateRuleMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  weightType: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.lazy(() => SortOrderSchema).optional(),
  sideRule: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.lazy(() => SortOrderSchema).optional(),
  otherFee: z.lazy(() => SortOrderSchema).optional(),
  priority: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const RateRuleSumOrderByAggregateInputSchema: z.ZodType<Prisma.RateRuleSumOrderByAggregateInput> = z.object({
  minWeight: z.lazy(() => SortOrderSchema).optional(),
  maxWeight: z.lazy(() => SortOrderSchema).optional(),
  divisor: z.lazy(() => SortOrderSchema).optional(),
  extraFee: z.lazy(() => SortOrderSchema).optional(),
  baseRate: z.lazy(() => SortOrderSchema).optional(),
  taxRate: z.lazy(() => SortOrderSchema).optional(),
  otherFee: z.lazy(() => SortOrderSchema).optional(),
  priority: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ChannelNullableScalarRelationFilterSchema: z.ZodType<Prisma.ChannelNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => ChannelWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => ChannelWhereInputSchema).optional().nullable()
}).strict();

export const WaybillRuleCountOrderByAggregateInputSchema: z.ZodType<Prisma.WaybillRuleCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  pattern: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const WaybillRuleMaxOrderByAggregateInputSchema: z.ZodType<Prisma.WaybillRuleMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  pattern: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const WaybillRuleMinOrderByAggregateInputSchema: z.ZodType<Prisma.WaybillRuleMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  pattern: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumFinanceStatusFilterSchema: z.ZodType<Prisma.EnumFinanceStatusFilter> = z.object({
  equals: z.lazy(() => FinanceStatusSchema).optional(),
  in: z.lazy(() => FinanceStatusSchema).array().optional(),
  notIn: z.lazy(() => FinanceStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => NestedEnumFinanceStatusFilterSchema) ]).optional(),
}).strict();

export const ReceivableCountOrderByAggregateInputSchema: z.ZodType<Prisma.ReceivableCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ReceivableAvgOrderByAggregateInputSchema: z.ZodType<Prisma.ReceivableAvgOrderByAggregateInput> = z.object({
  amount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ReceivableMaxOrderByAggregateInputSchema: z.ZodType<Prisma.ReceivableMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ReceivableMinOrderByAggregateInputSchema: z.ZodType<Prisma.ReceivableMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const ReceivableSumOrderByAggregateInputSchema: z.ZodType<Prisma.ReceivableSumOrderByAggregateInput> = z.object({
  amount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const EnumFinanceStatusWithAggregatesFilterSchema: z.ZodType<Prisma.EnumFinanceStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => FinanceStatusSchema).optional(),
  in: z.lazy(() => FinanceStatusSchema).array().optional(),
  notIn: z.lazy(() => FinanceStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => NestedEnumFinanceStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumFinanceStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumFinanceStatusFilterSchema).optional()
}).strict();

export const PayableCountOrderByAggregateInputSchema: z.ZodType<Prisma.PayableCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PayableAvgOrderByAggregateInputSchema: z.ZodType<Prisma.PayableAvgOrderByAggregateInput> = z.object({
  amount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PayableMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PayableMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PayableMinOrderByAggregateInputSchema: z.ZodType<Prisma.PayableMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  orderId: z.lazy(() => SortOrderSchema).optional(),
  client: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  dueDate: z.lazy(() => SortOrderSchema).optional(),
  exception: z.lazy(() => SortOrderSchema).optional(),
  tenantId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PayableSumOrderByAggregateInputSchema: z.ZodType<Prisma.PayableSumOrderByAggregateInput> = z.object({
  amount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceSettingListRelationFilterSchema: z.ZodType<Prisma.PriceSettingListRelationFilter> = z.object({
  every: z.lazy(() => PriceSettingWhereInputSchema).optional(),
  some: z.lazy(() => PriceSettingWhereInputSchema).optional(),
  none: z.lazy(() => PriceSettingWhereInputSchema).optional()
}).strict();

export const PriceSettingOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PriceSettingOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TransportPriceCountOrderByAggregateInputSchema: z.ZodType<Prisma.TransportPriceCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  service: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TransportPriceMaxOrderByAggregateInputSchema: z.ZodType<Prisma.TransportPriceMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  service: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const TransportPriceMinOrderByAggregateInputSchema: z.ZodType<Prisma.TransportPriceMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  region: z.lazy(() => SortOrderSchema).optional(),
  service: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceScalarRelationFilterSchema: z.ZodType<Prisma.PriceScalarRelationFilter> = z.object({
  is: z.lazy(() => PriceWhereInputSchema).optional(),
  isNot: z.lazy(() => PriceWhereInputSchema).optional()
}).strict();

export const TransportPriceNullableScalarRelationFilterSchema: z.ZodType<Prisma.TransportPriceNullableScalarRelationFilter> = z.object({
  is: z.lazy(() => TransportPriceWhereInputSchema).optional().nullable(),
  isNot: z.lazy(() => TransportPriceWhereInputSchema).optional().nullable()
}).strict();

export const PriceSettingCountOrderByAggregateInputSchema: z.ZodType<Prisma.PriceSettingCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  priceId: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  unit: z.lazy(() => SortOrderSchema).optional(),
  value: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  transportPriceId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceSettingAvgOrderByAggregateInputSchema: z.ZodType<Prisma.PriceSettingAvgOrderByAggregateInput> = z.object({
  value: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceSettingMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PriceSettingMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  priceId: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  unit: z.lazy(() => SortOrderSchema).optional(),
  value: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  transportPriceId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceSettingMinOrderByAggregateInputSchema: z.ZodType<Prisma.PriceSettingMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  priceId: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  unit: z.lazy(() => SortOrderSchema).optional(),
  value: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  transportPriceId: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceSettingSumOrderByAggregateInputSchema: z.ZodType<Prisma.PriceSettingSumOrderByAggregateInput> = z.object({
  value: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceCountOrderByAggregateInputSchema: z.ZodType<Prisma.PriceCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PriceMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PriceMinOrderByAggregateInputSchema: z.ZodType<Prisma.PriceMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  channelId: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionMemberListRelationFilterSchema: z.ZodType<Prisma.PositionMemberListRelationFilter> = z.object({
  every: z.lazy(() => PositionMemberWhereInputSchema).optional(),
  some: z.lazy(() => PositionMemberWhereInputSchema).optional(),
  none: z.lazy(() => PositionMemberWhereInputSchema).optional()
}).strict();

export const PositionMemberOrderByRelationAggregateInputSchema: z.ZodType<Prisma.PositionMemberOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionCountOrderByAggregateInputSchema: z.ZodType<Prisma.PositionCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PositionMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionMinOrderByAggregateInputSchema: z.ZodType<Prisma.PositionMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  title: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionScalarRelationFilterSchema: z.ZodType<Prisma.PositionScalarRelationFilter> = z.object({
  is: z.lazy(() => PositionWhereInputSchema).optional(),
  isNot: z.lazy(() => PositionWhereInputSchema).optional()
}).strict();

export const PositionMemberCountOrderByAggregateInputSchema: z.ZodType<Prisma.PositionMemberCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  positionId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionMemberMaxOrderByAggregateInputSchema: z.ZodType<Prisma.PositionMemberMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  positionId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const PositionMemberMinOrderByAggregateInputSchema: z.ZodType<Prisma.PositionMemberMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  phone: z.lazy(() => SortOrderSchema).optional(),
  email: z.lazy(() => SortOrderSchema).optional(),
  positionId: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const LoginLogCountOrderByAggregateInputSchema: z.ZodType<Prisma.LoginLogCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  device: z.lazy(() => SortOrderSchema).optional(),
  userAgent: z.lazy(() => SortOrderSchema).optional(),
  loginAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const LoginLogMaxOrderByAggregateInputSchema: z.ZodType<Prisma.LoginLogMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  device: z.lazy(() => SortOrderSchema).optional(),
  userAgent: z.lazy(() => SortOrderSchema).optional(),
  loginAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const LoginLogMinOrderByAggregateInputSchema: z.ZodType<Prisma.LoginLogMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  ip: z.lazy(() => SortOrderSchema).optional(),
  device: z.lazy(() => SortOrderSchema).optional(),
  userAgent: z.lazy(() => SortOrderSchema).optional(),
  loginAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillLogListRelationFilterSchema: z.ZodType<Prisma.BillLogListRelationFilter> = z.object({
  every: z.lazy(() => BillLogWhereInputSchema).optional(),
  some: z.lazy(() => BillLogWhereInputSchema).optional(),
  none: z.lazy(() => BillLogWhereInputSchema).optional()
}).strict();

export const BillAttachmentListRelationFilterSchema: z.ZodType<Prisma.BillAttachmentListRelationFilter> = z.object({
  every: z.lazy(() => BillAttachmentWhereInputSchema).optional(),
  some: z.lazy(() => BillAttachmentWhereInputSchema).optional(),
  none: z.lazy(() => BillAttachmentWhereInputSchema).optional()
}).strict();

export const BillLogOrderByRelationAggregateInputSchema: z.ZodType<Prisma.BillLogOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentOrderByRelationAggregateInputSchema: z.ZodType<Prisma.BillAttachmentOrderByRelationAggregateInput> = z.object({
  _count: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillCountOrderByAggregateInputSchema: z.ZodType<Prisma.FinanceBillCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billNo: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillAvgOrderByAggregateInputSchema: z.ZodType<Prisma.FinanceBillAvgOrderByAggregateInput> = z.object({
  totalAmount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillMaxOrderByAggregateInputSchema: z.ZodType<Prisma.FinanceBillMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billNo: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillMinOrderByAggregateInputSchema: z.ZodType<Prisma.FinanceBillMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billNo: z.lazy(() => SortOrderSchema).optional(),
  customerId: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillSumOrderByAggregateInputSchema: z.ZodType<Prisma.FinanceBillSumOrderByAggregateInput> = z.object({
  totalAmount: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const FinanceBillScalarRelationFilterSchema: z.ZodType<Prisma.FinanceBillScalarRelationFilter> = z.object({
  is: z.lazy(() => FinanceBillWhereInputSchema).optional(),
  isNot: z.lazy(() => FinanceBillWhereInputSchema).optional()
}).strict();

export const BillLogCountOrderByAggregateInputSchema: z.ZodType<Prisma.BillLogCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillLogMaxOrderByAggregateInputSchema: z.ZodType<Prisma.BillLogMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillLogMinOrderByAggregateInputSchema: z.ZodType<Prisma.BillLogMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  remark: z.lazy(() => SortOrderSchema).optional(),
  timestamp: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentCountOrderByAggregateInputSchema: z.ZodType<Prisma.BillAttachmentCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  filename: z.lazy(() => SortOrderSchema).optional(),
  fileSize: z.lazy(() => SortOrderSchema).optional(),
  mimeType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentAvgOrderByAggregateInputSchema: z.ZodType<Prisma.BillAttachmentAvgOrderByAggregateInput> = z.object({
  fileSize: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentMaxOrderByAggregateInputSchema: z.ZodType<Prisma.BillAttachmentMaxOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  filename: z.lazy(() => SortOrderSchema).optional(),
  fileSize: z.lazy(() => SortOrderSchema).optional(),
  mimeType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentMinOrderByAggregateInputSchema: z.ZodType<Prisma.BillAttachmentMinOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  billId: z.lazy(() => SortOrderSchema).optional(),
  url: z.lazy(() => SortOrderSchema).optional(),
  filename: z.lazy(() => SortOrderSchema).optional(),
  fileSize: z.lazy(() => SortOrderSchema).optional(),
  mimeType: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const BillAttachmentSumOrderByAggregateInputSchema: z.ZodType<Prisma.BillAttachmentSumOrderByAggregateInput> = z.object({
  fileSize: z.lazy(() => SortOrderSchema).optional()
}).strict();

export const UserCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.UserCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserCreateWithoutTenantInputSchema).array(),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema),z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => UserCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateWithoutTenantInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ReceivableCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableCreateWithoutTenantInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PayableCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.PayableCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableCreateWithoutTenantInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.CustomerCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerCreateWithoutTenantInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const UserUncheckedCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.UserUncheckedCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserCreateWithoutTenantInputSchema).array(),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema),z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => UserCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateWithoutTenantInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUncheckedCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableCreateWithoutTenantInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PayableUncheckedCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.PayableUncheckedCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableCreateWithoutTenantInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerUncheckedCreateNestedManyWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateNestedManyWithoutTenantInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerCreateWithoutTenantInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyTenantInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const StringFieldUpdateOperationsInputSchema: z.ZodType<Prisma.StringFieldUpdateOperationsInput> = z.object({
  set: z.string().optional()
}).strict();

export const DateTimeFieldUpdateOperationsInputSchema: z.ZodType<Prisma.DateTimeFieldUpdateOperationsInput> = z.object({
  set: z.coerce.date().optional()
}).strict();

export const UserUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.UserUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserCreateWithoutTenantInputSchema).array(),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema),z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => UserUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => UserUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => UserCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => UserUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => UserUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => UserUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => UserUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => UserScalarWhereInputSchema),z.lazy(() => UserScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateWithoutTenantInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.ReceivableUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableCreateWithoutTenantInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ReceivableUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => ReceivableUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PayableUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.PayableUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableCreateWithoutTenantInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PayableUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => PayableUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PayableUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => PayableUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PayableUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => PayableUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CustomerUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.CustomerUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerCreateWithoutTenantInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => CustomerUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => CustomerUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => CustomerUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => CustomerUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => CustomerUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const UserUncheckedUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.UserUncheckedUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserCreateWithoutTenantInputSchema).array(),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema),z.lazy(() => UserCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => UserUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => UserUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => UserCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => UserWhereUniqueInputSchema),z.lazy(() => UserWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => UserUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => UserUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => UserUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => UserUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => UserScalarWhereInputSchema),z.lazy(() => UserScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateWithoutTenantInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableCreateWithoutTenantInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ReceivableUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => ReceivableUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PayableUncheckedUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableCreateWithoutTenantInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema),z.lazy(() => PayableCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PayableUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => PayableUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PayableUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => PayableUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PayableUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => PayableUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateManyWithoutTenantNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerCreateWithoutTenantInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutTenantInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => CustomerUpsertWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => CustomerUpsertWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyTenantInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateWithWhereUniqueWithoutTenantInputSchema),z.lazy(() => CustomerUpdateWithWhereUniqueWithoutTenantInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => CustomerUpdateManyWithWhereWithoutTenantInputSchema),z.lazy(() => CustomerUpdateManyWithWhereWithoutTenantInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const TenantCreateNestedOneWithoutUsersInputSchema: z.ZodType<Prisma.TenantCreateNestedOneWithoutUsersInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutUsersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutUsersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional()
}).strict();

export const PermissionCreateNestedManyWithoutUserInputSchema: z.ZodType<Prisma.PermissionCreateNestedManyWithoutUserInput> = z.object({
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionCreateWithoutUserInputSchema).array(),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema),z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PermissionCreateManyUserInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedManyWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutUserInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderCreateWithoutUserInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyUserInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ReceivableCreateNestedManyWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableCreateNestedManyWithoutCreatedByInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyCreatedByInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PayableCreateNestedManyWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableCreateNestedManyWithoutCreatedByInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyCreatedByInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerCreateNestedManyWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerCreateNestedManyWithoutFinanceContactInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyFinanceContactInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PermissionUncheckedCreateNestedManyWithoutUserInputSchema: z.ZodType<Prisma.PermissionUncheckedCreateNestedManyWithoutUserInput> = z.object({
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionCreateWithoutUserInputSchema).array(),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema),z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PermissionCreateManyUserInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutUserInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderCreateWithoutUserInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyUserInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUncheckedCreateNestedManyWithoutCreatedByInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyCreatedByInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUncheckedCreateNestedManyWithoutCreatedByInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyCreatedByInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateNestedManyWithoutFinanceContactInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyFinanceContactInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const EnumRoleTypeFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumRoleTypeFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => RoleTypeSchema).optional()
}).strict();

export const TenantUpdateOneRequiredWithoutUsersNestedInputSchema: z.ZodType<Prisma.TenantUpdateOneRequiredWithoutUsersNestedInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutUsersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutUsersInputSchema).optional(),
  upsert: z.lazy(() => TenantUpsertWithoutUsersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TenantUpdateToOneWithWhereWithoutUsersInputSchema),z.lazy(() => TenantUpdateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutUsersInputSchema) ]).optional(),
}).strict();

export const PermissionUpdateManyWithoutUserNestedInputSchema: z.ZodType<Prisma.PermissionUpdateManyWithoutUserNestedInput> = z.object({
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionCreateWithoutUserInputSchema).array(),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema),z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PermissionUpsertWithWhereUniqueWithoutUserInputSchema),z.lazy(() => PermissionUpsertWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PermissionCreateManyUserInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PermissionUpdateWithWhereUniqueWithoutUserInputSchema),z.lazy(() => PermissionUpdateWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PermissionUpdateManyWithWhereWithoutUserInputSchema),z.lazy(() => PermissionUpdateManyWithWhereWithoutUserInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PermissionScalarWhereInputSchema),z.lazy(() => PermissionScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutUserNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutUserNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderCreateWithoutUserInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutUserInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyUserInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutUserInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutUserInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutUserInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUpdateManyWithoutCreatedByNestedInputSchema: z.ZodType<Prisma.ReceivableUpdateManyWithoutCreatedByNestedInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyCreatedByInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ReceivableUpdateManyWithWhereWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpdateManyWithWhereWithoutCreatedByInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PayableUpdateManyWithoutCreatedByNestedInputSchema: z.ZodType<Prisma.PayableUpdateManyWithoutCreatedByNestedInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PayableUpsertWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => PayableUpsertWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyCreatedByInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PayableUpdateWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => PayableUpdateWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PayableUpdateManyWithWhereWithoutCreatedByInputSchema),z.lazy(() => PayableUpdateManyWithWhereWithoutCreatedByInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CustomerUpdateManyWithoutFinanceContactNestedInputSchema: z.ZodType<Prisma.CustomerUpdateManyWithoutFinanceContactNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => CustomerUpsertWithWhereUniqueWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpsertWithWhereUniqueWithoutFinanceContactInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyFinanceContactInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateWithWhereUniqueWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpdateWithWhereUniqueWithoutFinanceContactInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => CustomerUpdateManyWithWhereWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpdateManyWithWhereWithoutFinanceContactInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PermissionUncheckedUpdateManyWithoutUserNestedInputSchema: z.ZodType<Prisma.PermissionUncheckedUpdateManyWithoutUserNestedInput> = z.object({
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionCreateWithoutUserInputSchema).array(),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema),z.lazy(() => PermissionCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PermissionUpsertWithWhereUniqueWithoutUserInputSchema),z.lazy(() => PermissionUpsertWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PermissionCreateManyUserInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PermissionWhereUniqueInputSchema),z.lazy(() => PermissionWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PermissionUpdateWithWhereUniqueWithoutUserInputSchema),z.lazy(() => PermissionUpdateWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PermissionUpdateManyWithWhereWithoutUserInputSchema),z.lazy(() => PermissionUpdateManyWithWhereWithoutUserInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PermissionScalarWhereInputSchema),z.lazy(() => PermissionScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutUserNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderCreateWithoutUserInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutUserInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutUserInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyUserInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutUserInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutUserInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutUserInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutUserInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateManyWithoutCreatedByNestedInput> = z.object({
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => ReceivableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpsertWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ReceivableCreateManyCreatedByInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ReceivableWhereUniqueInputSchema),z.lazy(() => ReceivableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpdateWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ReceivableUpdateManyWithWhereWithoutCreatedByInputSchema),z.lazy(() => ReceivableUpdateManyWithWhereWithoutCreatedByInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateManyWithoutCreatedByNestedInput> = z.object({
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableCreateWithoutCreatedByInputSchema).array(),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema),z.lazy(() => PayableCreateOrConnectWithoutCreatedByInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PayableUpsertWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => PayableUpsertWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PayableCreateManyCreatedByInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PayableWhereUniqueInputSchema),z.lazy(() => PayableWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PayableUpdateWithWhereUniqueWithoutCreatedByInputSchema),z.lazy(() => PayableUpdateWithWhereUniqueWithoutCreatedByInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PayableUpdateManyWithWhereWithoutCreatedByInputSchema),z.lazy(() => PayableUpdateManyWithWhereWithoutCreatedByInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateManyWithoutFinanceContactNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema).array(),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema),z.lazy(() => CustomerCreateOrConnectWithoutFinanceContactInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => CustomerUpsertWithWhereUniqueWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpsertWithWhereUniqueWithoutFinanceContactInputSchema).array() ]).optional(),
  createMany: z.lazy(() => CustomerCreateManyFinanceContactInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => CustomerWhereUniqueInputSchema),z.lazy(() => CustomerWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateWithWhereUniqueWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpdateWithWhereUniqueWithoutFinanceContactInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => CustomerUpdateManyWithWhereWithoutFinanceContactInputSchema),z.lazy(() => CustomerUpdateManyWithWhereWithoutFinanceContactInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const UserCreateNestedOneWithoutPermissionsInputSchema: z.ZodType<Prisma.UserCreateNestedOneWithoutPermissionsInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedCreateWithoutPermissionsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutPermissionsInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional()
}).strict();

export const EnumPermissionTypeFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumPermissionTypeFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => PermissionTypeSchema).optional()
}).strict();

export const UserUpdateOneRequiredWithoutPermissionsNestedInputSchema: z.ZodType<Prisma.UserUpdateOneRequiredWithoutPermissionsNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedCreateWithoutPermissionsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutPermissionsInputSchema).optional(),
  upsert: z.lazy(() => UserUpsertWithoutPermissionsInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => UserUpdateToOneWithWhereWithoutPermissionsInputSchema),z.lazy(() => UserUpdateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPermissionsInputSchema) ]).optional(),
}).strict();

export const FBAOrderCreateNestedOneWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedOneWithoutBoxesInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBoxesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutBoxesInputSchema).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional()
}).strict();

export const NullableFloatFieldUpdateOperationsInputSchema: z.ZodType<Prisma.NullableFloatFieldUpdateOperationsInput> = z.object({
  set: z.number().optional().nullable(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional()
}).strict();

export const BoolFieldUpdateOperationsInputSchema: z.ZodType<Prisma.BoolFieldUpdateOperationsInput> = z.object({
  set: z.boolean().optional()
}).strict();

export const FloatFieldUpdateOperationsInputSchema: z.ZodType<Prisma.FloatFieldUpdateOperationsInput> = z.object({
  set: z.number().optional(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional()
}).strict();

export const IntFieldUpdateOperationsInputSchema: z.ZodType<Prisma.IntFieldUpdateOperationsInput> = z.object({
  set: z.number().optional(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional()
}).strict();

export const NullableStringFieldUpdateOperationsInputSchema: z.ZodType<Prisma.NullableStringFieldUpdateOperationsInput> = z.object({
  set: z.string().optional().nullable()
}).strict();

export const FBAOrderUpdateOneWithoutBoxesNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateOneWithoutBoxesNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBoxesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutBoxesInputSchema).optional(),
  upsert: z.lazy(() => FBAOrderUpsertWithoutBoxesInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => FBAOrderWhereInputSchema) ]).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateToOneWithWhereWithoutBoxesInputSchema),z.lazy(() => FBAOrderUpdateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutBoxesInputSchema) ]).optional(),
}).strict();

export const FBAOrderCreateNestedOneWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedOneWithoutLogsInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutLogsInputSchema).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderUpdateOneRequiredWithoutLogsNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateOneRequiredWithoutLogsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutLogsInputSchema).optional(),
  upsert: z.lazy(() => FBAOrderUpsertWithoutLogsInputSchema).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateToOneWithWhereWithoutLogsInputSchema),z.lazy(() => FBAOrderUpdateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutLogsInputSchema) ]).optional(),
}).strict();

export const UserCreateNestedOneWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserCreateNestedOneWithoutFinanceCustomersInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFinanceCustomersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutFinanceCustomersInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional()
}).strict();

export const TenantCreateNestedOneWithoutCustomersInputSchema: z.ZodType<Prisma.TenantCreateNestedOneWithoutCustomersInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutCustomersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutCustomersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderCreateNestedManyWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutSenderInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateWithoutSenderInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManySenderInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PositionCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.PositionCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionCreateWithoutCustomerInputSchema).array(),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const LoginLogCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateWithoutCustomerInputSchema).array(),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => LoginLogCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FinanceBillCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutSenderInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateWithoutSenderInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManySenderInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PositionUncheckedCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUncheckedCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionCreateWithoutCustomerInputSchema).array(),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUncheckedCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateWithoutCustomerInputSchema).array(),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => LoginLogCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateNestedManyWithoutCustomerInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FinanceBillCreateManyCustomerInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const EnumCustomerStatusFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumCustomerStatusFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => CustomerStatusSchema).optional()
}).strict();

export const EnumSettlementMethodFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumSettlementMethodFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => SettlementMethodSchema).optional()
}).strict();

export const UserUpdateOneWithoutFinanceCustomersNestedInputSchema: z.ZodType<Prisma.UserUpdateOneWithoutFinanceCustomersNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFinanceCustomersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutFinanceCustomersInputSchema).optional(),
  upsert: z.lazy(() => UserUpsertWithoutFinanceCustomersInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => UserUpdateToOneWithWhereWithoutFinanceCustomersInputSchema),z.lazy(() => UserUpdateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFinanceCustomersInputSchema) ]).optional(),
}).strict();

export const TenantUpdateOneRequiredWithoutCustomersNestedInputSchema: z.ZodType<Prisma.TenantUpdateOneRequiredWithoutCustomersNestedInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutCustomersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutCustomersInputSchema).optional(),
  upsert: z.lazy(() => TenantUpsertWithoutCustomersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TenantUpdateToOneWithWhereWithoutCustomersInputSchema),z.lazy(() => TenantUpdateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutCustomersInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutSenderNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutSenderNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateWithoutSenderInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutSenderInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutSenderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManySenderInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutSenderInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutSenderInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutSenderInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutSenderInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PositionUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.PositionUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionCreateWithoutCustomerInputSchema).array(),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PositionUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => PositionUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PositionUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => PositionUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PositionUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => PositionUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PositionScalarWhereInputSchema),z.lazy(() => PositionScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const LoginLogUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.LoginLogUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateWithoutCustomerInputSchema).array(),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => LoginLogUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => LoginLogUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => LoginLogCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => LoginLogUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => LoginLogUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => LoginLogUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => LoginLogUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => LoginLogScalarWhereInputSchema),z.lazy(() => LoginLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.FinanceBillUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FinanceBillCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FinanceBillUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutSenderNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateWithoutSenderInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutSenderInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutSenderInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutSenderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManySenderInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutSenderInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutSenderInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutSenderInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutSenderInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionCreateWithoutCustomerInputSchema).array(),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => PositionCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PositionUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => PositionUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PositionWhereUniqueInputSchema),z.lazy(() => PositionWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PositionUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => PositionUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PositionUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => PositionUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PositionScalarWhereInputSchema),z.lazy(() => PositionScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.LoginLogUncheckedUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateWithoutCustomerInputSchema).array(),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => LoginLogCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => LoginLogUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => LoginLogUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => LoginLogCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => LoginLogWhereUniqueInputSchema),z.lazy(() => LoginLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => LoginLogUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => LoginLogUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => LoginLogUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => LoginLogUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => LoginLogScalarWhereInputSchema),z.lazy(() => LoginLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateManyWithoutCustomerNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutCustomerInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FinanceBillCreateManyCustomerInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutCustomerInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FinanceBillUpdateManyWithWhereWithoutCustomerInputSchema),z.lazy(() => FinanceBillUpdateManyWithWhereWithoutCustomerInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateattrsInputSchema: z.ZodType<Prisma.FBAOrderCreateattrsInput> = z.object({
  set: z.string().array()
}).strict();

export const FBAOrderCreateerrorsInputSchema: z.ZodType<Prisma.FBAOrderCreateerrorsInput> = z.object({
  set: z.string().array()
}).strict();

export const ChannelCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const TenantCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional()
}).strict();

export const CustomerCreateNestedOneWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerCreateNestedOneWithoutOrdersInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutOrdersInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional()
}).strict();

export const UserCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional()
}).strict();

export const CustomerCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional()
}).strict();

export const BoxCreateNestedManyWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxCreateNestedManyWithoutFbaOrderInput> = z.object({
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateWithoutFbaOrderInputSchema).array(),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BoxCreateManyFbaOrderInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => WaybillRuleCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => WaybillRuleWhereUniqueInputSchema).optional()
}).strict();

export const ShipmentLogCreateNestedManyWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogCreateNestedManyWithoutShipmentInput> = z.object({
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema).array(),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ShipmentLogCreateManyShipmentInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CarrierCreateNestedOneWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierCreateNestedOneWithoutFbaOrdersInput> = z.object({
  create: z.union([ z.lazy(() => CarrierCreateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CarrierCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => CarrierWhereUniqueInputSchema).optional()
}).strict();

export const AttachmentCreateNestedManyWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentCreateNestedManyWithoutWaybillInput> = z.object({
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateWithoutWaybillInputSchema).array(),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => AttachmentCreateManyWaybillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillCreateNestedManyWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillCreateNestedManyWithoutWaybillsInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUncheckedCreateNestedManyWithoutFbaOrderInput> = z.object({
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateWithoutFbaOrderInputSchema).array(),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BoxCreateManyFbaOrderInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedCreateNestedManyWithoutShipmentInput> = z.object({
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema).array(),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ShipmentLogCreateManyShipmentInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUncheckedCreateNestedManyWithoutWaybillInput> = z.object({
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateWithoutWaybillInputSchema).array(),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => AttachmentCreateManyWaybillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateNestedManyWithoutWaybillsInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const EnumOrderStatusFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumOrderStatusFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => OrderStatusSchema).optional()
}).strict();

export const FBAOrderUpdateattrsInputSchema: z.ZodType<Prisma.FBAOrderUpdateattrsInput> = z.object({
  set: z.string().array().optional(),
  push: z.union([ z.string(),z.string().array() ]).optional(),
}).strict();

export const NullableIntFieldUpdateOperationsInputSchema: z.ZodType<Prisma.NullableIntFieldUpdateOperationsInput> = z.object({
  set: z.number().optional().nullable(),
  increment: z.number().optional(),
  decrement: z.number().optional(),
  multiply: z.number().optional(),
  divide: z.number().optional()
}).strict();

export const FBAOrderUpdateerrorsInputSchema: z.ZodType<Prisma.FBAOrderUpdateerrorsInput> = z.object({
  set: z.string().array().optional(),
  push: z.union([ z.string(),z.string().array() ]).optional(),
}).strict();

export const ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.ChannelUpdateOneRequiredWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUpdateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.TenantUpdateOneRequiredWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => TenantUpsertWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TenantUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => TenantUpdateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema: z.ZodType<Prisma.CustomerUpdateOneRequiredWithoutOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutOrdersInputSchema).optional(),
  upsert: z.lazy(() => CustomerUpsertWithoutOrdersInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateToOneWithWhereWithoutOrdersInputSchema),z.lazy(() => CustomerUpdateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutOrdersInputSchema) ]).optional(),
}).strict();

export const UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.UserUpdateOneRequiredWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => UserUpsertWithoutFbaOrdersInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => UserUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => UserUpdateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const CustomerUpdateOneWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.CustomerUpdateOneWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => CustomerUpsertWithoutFbaOrdersInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => CustomerWhereInputSchema) ]).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const BoxUpdateManyWithoutFbaOrderNestedInputSchema: z.ZodType<Prisma.BoxUpdateManyWithoutFbaOrderNestedInput> = z.object({
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateWithoutFbaOrderInputSchema).array(),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BoxUpsertWithWhereUniqueWithoutFbaOrderInputSchema),z.lazy(() => BoxUpsertWithWhereUniqueWithoutFbaOrderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BoxCreateManyFbaOrderInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BoxUpdateWithWhereUniqueWithoutFbaOrderInputSchema),z.lazy(() => BoxUpdateWithWhereUniqueWithoutFbaOrderInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BoxUpdateManyWithWhereWithoutFbaOrderInputSchema),z.lazy(() => BoxUpdateManyWithWhereWithoutFbaOrderInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BoxScalarWhereInputSchema),z.lazy(() => BoxScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.WaybillRuleUpdateOneWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => WaybillRuleCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => WaybillRuleUpsertWithoutFbaOrdersInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional(),
  connect: z.lazy(() => WaybillRuleWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => WaybillRuleUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUpdateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const ShipmentLogUpdateManyWithoutShipmentNestedInputSchema: z.ZodType<Prisma.ShipmentLogUpdateManyWithoutShipmentNestedInput> = z.object({
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema).array(),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ShipmentLogUpsertWithWhereUniqueWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpsertWithWhereUniqueWithoutShipmentInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ShipmentLogCreateManyShipmentInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ShipmentLogUpdateWithWhereUniqueWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpdateWithWhereUniqueWithoutShipmentInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ShipmentLogUpdateManyWithWhereWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpdateManyWithWhereWithoutShipmentInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ShipmentLogScalarWhereInputSchema),z.lazy(() => ShipmentLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CarrierUpdateOneWithoutFbaOrdersNestedInputSchema: z.ZodType<Prisma.CarrierUpdateOneWithoutFbaOrdersNestedInput> = z.object({
  create: z.union([ z.lazy(() => CarrierCreateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutFbaOrdersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CarrierCreateOrConnectWithoutFbaOrdersInputSchema).optional(),
  upsert: z.lazy(() => CarrierUpsertWithoutFbaOrdersInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => CarrierWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => CarrierWhereInputSchema) ]).optional(),
  connect: z.lazy(() => CarrierWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CarrierUpdateToOneWithWhereWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutFbaOrdersInputSchema) ]).optional(),
}).strict();

export const AttachmentUpdateManyWithoutWaybillNestedInputSchema: z.ZodType<Prisma.AttachmentUpdateManyWithoutWaybillNestedInput> = z.object({
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateWithoutWaybillInputSchema).array(),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => AttachmentUpsertWithWhereUniqueWithoutWaybillInputSchema),z.lazy(() => AttachmentUpsertWithWhereUniqueWithoutWaybillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => AttachmentCreateManyWaybillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => AttachmentUpdateWithWhereUniqueWithoutWaybillInputSchema),z.lazy(() => AttachmentUpdateWithWhereUniqueWithoutWaybillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => AttachmentUpdateManyWithWhereWithoutWaybillInputSchema),z.lazy(() => AttachmentUpdateManyWithWhereWithoutWaybillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => AttachmentScalarWhereInputSchema),z.lazy(() => AttachmentScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUpdateManyWithoutWaybillsNestedInputSchema: z.ZodType<Prisma.FinanceBillUpdateManyWithoutWaybillsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutWaybillsInputSchema).array() ]).optional(),
  set: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutWaybillsInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FinanceBillUpdateManyWithWhereWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpdateManyWithWhereWithoutWaybillsInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema: z.ZodType<Prisma.BoxUncheckedUpdateManyWithoutFbaOrderNestedInput> = z.object({
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateWithoutFbaOrderInputSchema).array(),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema),z.lazy(() => BoxCreateOrConnectWithoutFbaOrderInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BoxUpsertWithWhereUniqueWithoutFbaOrderInputSchema),z.lazy(() => BoxUpsertWithWhereUniqueWithoutFbaOrderInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BoxCreateManyFbaOrderInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BoxWhereUniqueInputSchema),z.lazy(() => BoxWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BoxUpdateWithWhereUniqueWithoutFbaOrderInputSchema),z.lazy(() => BoxUpdateWithWhereUniqueWithoutFbaOrderInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BoxUpdateManyWithWhereWithoutFbaOrderInputSchema),z.lazy(() => BoxUpdateManyWithWhereWithoutFbaOrderInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BoxScalarWhereInputSchema),z.lazy(() => BoxScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInput> = z.object({
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema).array(),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema),z.lazy(() => ShipmentLogCreateOrConnectWithoutShipmentInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ShipmentLogUpsertWithWhereUniqueWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpsertWithWhereUniqueWithoutShipmentInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ShipmentLogCreateManyShipmentInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ShipmentLogWhereUniqueInputSchema),z.lazy(() => ShipmentLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ShipmentLogUpdateWithWhereUniqueWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpdateWithWhereUniqueWithoutShipmentInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ShipmentLogUpdateManyWithWhereWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUpdateManyWithWhereWithoutShipmentInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ShipmentLogScalarWhereInputSchema),z.lazy(() => ShipmentLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema: z.ZodType<Prisma.AttachmentUncheckedUpdateManyWithoutWaybillNestedInput> = z.object({
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateWithoutWaybillInputSchema).array(),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema),z.lazy(() => AttachmentCreateOrConnectWithoutWaybillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => AttachmentUpsertWithWhereUniqueWithoutWaybillInputSchema),z.lazy(() => AttachmentUpsertWithWhereUniqueWithoutWaybillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => AttachmentCreateManyWaybillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => AttachmentWhereUniqueInputSchema),z.lazy(() => AttachmentWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => AttachmentUpdateWithWhereUniqueWithoutWaybillInputSchema),z.lazy(() => AttachmentUpdateWithWhereUniqueWithoutWaybillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => AttachmentUpdateManyWithWhereWithoutWaybillInputSchema),z.lazy(() => AttachmentUpdateManyWithWhereWithoutWaybillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => AttachmentScalarWhereInputSchema),z.lazy(() => AttachmentScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema).array(),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema),z.lazy(() => FinanceBillCreateOrConnectWithoutWaybillsInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpsertWithWhereUniqueWithoutWaybillsInputSchema).array() ]).optional(),
  set: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FinanceBillWhereUniqueInputSchema),z.lazy(() => FinanceBillWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpdateWithWhereUniqueWithoutWaybillsInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FinanceBillUpdateManyWithWhereWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUpdateManyWithWhereWithoutWaybillsInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedOneWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedOneWithoutAttachmentsInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutAttachmentsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutAttachmentsInputSchema).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderUpdateOneRequiredWithoutAttachmentsNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateOneRequiredWithoutAttachmentsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutAttachmentsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FBAOrderCreateOrConnectWithoutAttachmentsInputSchema).optional(),
  upsert: z.lazy(() => FBAOrderUpsertWithoutAttachmentsInputSchema).optional(),
  connect: z.lazy(() => FBAOrderWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateToOneWithWhereWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUpdateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutAttachmentsInputSchema) ]).optional(),
}).strict();

export const ChannelCreateNestedManyWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelCreateNestedManyWithoutCarrierInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelCreateWithoutCarrierInputSchema).array(),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ChannelCreateManyCarrierInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedManyWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutCarrierInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCarrierInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelUncheckedCreateNestedManyWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateNestedManyWithoutCarrierInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelCreateWithoutCarrierInputSchema).array(),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ChannelCreateManyCarrierInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutCarrierInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCarrierInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelUpdateManyWithoutCarrierNestedInputSchema: z.ZodType<Prisma.ChannelUpdateManyWithoutCarrierNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelCreateWithoutCarrierInputSchema).array(),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ChannelUpsertWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => ChannelUpsertWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ChannelCreateManyCarrierInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => ChannelUpdateWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ChannelUpdateManyWithWhereWithoutCarrierInputSchema),z.lazy(() => ChannelUpdateManyWithWhereWithoutCarrierInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ChannelScalarWhereInputSchema),z.lazy(() => ChannelScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutCarrierNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutCarrierNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCarrierInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCarrierInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ChannelUncheckedUpdateManyWithoutCarrierNestedInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateManyWithoutCarrierNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelCreateWithoutCarrierInputSchema).array(),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => ChannelCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => ChannelUpsertWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => ChannelUpsertWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => ChannelCreateManyCarrierInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => ChannelWhereUniqueInputSchema),z.lazy(() => ChannelWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => ChannelUpdateWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => ChannelUpdateManyWithWhereWithoutCarrierInputSchema),z.lazy(() => ChannelUpdateManyWithWhereWithoutCarrierInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => ChannelScalarWhereInputSchema),z.lazy(() => ChannelScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutCarrierNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutCarrierNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutCarrierInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyCarrierInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutCarrierInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCarrierInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutCarrierInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const WaybillRuleCreateNestedOneWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleCreateNestedOneWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutChannelInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => WaybillRuleCreateOrConnectWithoutChannelInputSchema).optional(),
  connect: z.lazy(() => WaybillRuleWhereUniqueInputSchema).optional()
}).strict();

export const RateRuleCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleCreateWithoutChannelInputSchema).array(),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema),z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => RateRuleCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateWithoutChannelInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CarrierCreateNestedOneWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierCreateNestedOneWithoutChannelsInput> = z.object({
  create: z.union([ z.lazy(() => CarrierCreateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutChannelsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CarrierCreateOrConnectWithoutChannelsInputSchema).optional(),
  connect: z.lazy(() => CarrierWhereUniqueInputSchema).optional()
}).strict();

export const TransportPriceCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateWithoutChannelInputSchema).array(),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => TransportPriceCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PriceCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.PriceCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceCreateWithoutChannelInputSchema).array(),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUncheckedCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleCreateWithoutChannelInputSchema).array(),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema),z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => RateRuleCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateWithoutChannelInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUncheckedCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateWithoutChannelInputSchema).array(),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => TransportPriceCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PriceUncheckedCreateNestedManyWithoutChannelInputSchema: z.ZodType<Prisma.PriceUncheckedCreateNestedManyWithoutChannelInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceCreateWithoutChannelInputSchema).array(),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceCreateManyChannelInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const WaybillRuleUpdateOneWithoutChannelNestedInputSchema: z.ZodType<Prisma.WaybillRuleUpdateOneWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutChannelInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => WaybillRuleCreateOrConnectWithoutChannelInputSchema).optional(),
  upsert: z.lazy(() => WaybillRuleUpsertWithoutChannelInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => WaybillRuleWhereInputSchema) ]).optional(),
  connect: z.lazy(() => WaybillRuleWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => WaybillRuleUpdateToOneWithWhereWithoutChannelInputSchema),z.lazy(() => WaybillRuleUpdateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutChannelInputSchema) ]).optional(),
}).strict();

export const RateRuleUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.RateRuleUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleCreateWithoutChannelInputSchema).array(),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema),z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => RateRuleUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => RateRuleUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => RateRuleCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => RateRuleUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => RateRuleUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => RateRuleUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => RateRuleUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => RateRuleScalarWhereInputSchema),z.lazy(() => RateRuleScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateWithoutChannelInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CarrierUpdateOneWithoutChannelsNestedInputSchema: z.ZodType<Prisma.CarrierUpdateOneWithoutChannelsNestedInput> = z.object({
  create: z.union([ z.lazy(() => CarrierCreateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutChannelsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CarrierCreateOrConnectWithoutChannelsInputSchema).optional(),
  upsert: z.lazy(() => CarrierUpsertWithoutChannelsInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => CarrierWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => CarrierWhereInputSchema) ]).optional(),
  connect: z.lazy(() => CarrierWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CarrierUpdateToOneWithWhereWithoutChannelsInputSchema),z.lazy(() => CarrierUpdateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutChannelsInputSchema) ]).optional(),
}).strict();

export const TransportPriceUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.TransportPriceUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateWithoutChannelInputSchema).array(),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => TransportPriceUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => TransportPriceUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => TransportPriceCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => TransportPriceUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => TransportPriceUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => TransportPriceUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => TransportPriceUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => TransportPriceScalarWhereInputSchema),z.lazy(() => TransportPriceScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PriceUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.PriceUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceCreateWithoutChannelInputSchema).array(),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => PriceUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => PriceUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => PriceUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceScalarWhereInputSchema),z.lazy(() => PriceScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.RateRuleUncheckedUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleCreateWithoutChannelInputSchema).array(),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema),z.lazy(() => RateRuleCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => RateRuleUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => RateRuleUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => RateRuleCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => RateRuleWhereUniqueInputSchema),z.lazy(() => RateRuleWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => RateRuleUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => RateRuleUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => RateRuleUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => RateRuleUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => RateRuleScalarWhereInputSchema),z.lazy(() => RateRuleScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateWithoutChannelInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateWithoutChannelInputSchema).array(),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => TransportPriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => TransportPriceUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => TransportPriceUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => TransportPriceCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => TransportPriceWhereUniqueInputSchema),z.lazy(() => TransportPriceWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => TransportPriceUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => TransportPriceUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => TransportPriceUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => TransportPriceUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => TransportPriceScalarWhereInputSchema),z.lazy(() => TransportPriceScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PriceUncheckedUpdateManyWithoutChannelNestedInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateManyWithoutChannelNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceCreateWithoutChannelInputSchema).array(),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema),z.lazy(() => PriceCreateOrConnectWithoutChannelInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceUpsertWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => PriceUpsertWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceCreateManyChannelInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceWhereUniqueInputSchema),z.lazy(() => PriceWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceUpdateWithWhereUniqueWithoutChannelInputSchema),z.lazy(() => PriceUpdateWithWhereUniqueWithoutChannelInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceUpdateManyWithWhereWithoutChannelInputSchema),z.lazy(() => PriceUpdateManyWithWhereWithoutChannelInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceScalarWhereInputSchema),z.lazy(() => PriceScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ChannelCreateNestedOneWithoutRatesInputSchema: z.ZodType<Prisma.ChannelCreateNestedOneWithoutRatesInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutRatesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutRatesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const ChannelUpdateOneRequiredWithoutRatesNestedInputSchema: z.ZodType<Prisma.ChannelUpdateOneRequiredWithoutRatesNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutRatesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutRatesInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutRatesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutRatesInputSchema),z.lazy(() => ChannelUpdateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutRatesInputSchema) ]).optional(),
}).strict();

export const ChannelCreateNestedOneWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelCreateNestedOneWithoutWaybillRuleInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutWaybillRuleInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderCreateNestedManyWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutWaybillRuleInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyWaybillRuleInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelUncheckedCreateNestedOneWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateNestedOneWithoutWaybillRuleInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutWaybillRuleInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutWaybillRuleInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyWaybillRuleInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelUpdateOneWithoutWaybillRuleNestedInputSchema: z.ZodType<Prisma.ChannelUpdateOneWithoutWaybillRuleNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutWaybillRuleInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutWaybillRuleInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUpdateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutWaybillRuleInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutWaybillRuleNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutWaybillRuleNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyWaybillRuleInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutWaybillRuleInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ChannelUncheckedUpdateOneWithoutWaybillRuleNestedInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateOneWithoutWaybillRuleNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutWaybillRuleInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutWaybillRuleInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => ChannelWhereInputSchema) ]).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUpdateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutWaybillRuleInputSchema) ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutWaybillRuleNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutWaybillRuleNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInputSchema).array() ]).optional(),
  createMany: z.lazy(() => FBAOrderCreateManyWaybillRuleInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutWaybillRuleInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const TenantCreateNestedOneWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantCreateNestedOneWithoutReceivablesInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutReceivablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutReceivablesInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional()
}).strict();

export const UserCreateNestedOneWithoutReceivablesInputSchema: z.ZodType<Prisma.UserCreateNestedOneWithoutReceivablesInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutReceivablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutReceivablesInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional()
}).strict();

export const EnumFinanceStatusFieldUpdateOperationsInputSchema: z.ZodType<Prisma.EnumFinanceStatusFieldUpdateOperationsInput> = z.object({
  set: z.lazy(() => FinanceStatusSchema).optional()
}).strict();

export const TenantUpdateOneRequiredWithoutReceivablesNestedInputSchema: z.ZodType<Prisma.TenantUpdateOneRequiredWithoutReceivablesNestedInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutReceivablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutReceivablesInputSchema).optional(),
  upsert: z.lazy(() => TenantUpsertWithoutReceivablesInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TenantUpdateToOneWithWhereWithoutReceivablesInputSchema),z.lazy(() => TenantUpdateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutReceivablesInputSchema) ]).optional(),
}).strict();

export const UserUpdateOneWithoutReceivablesNestedInputSchema: z.ZodType<Prisma.UserUpdateOneWithoutReceivablesNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutReceivablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutReceivablesInputSchema).optional(),
  upsert: z.lazy(() => UserUpsertWithoutReceivablesInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => UserUpdateToOneWithWhereWithoutReceivablesInputSchema),z.lazy(() => UserUpdateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutReceivablesInputSchema) ]).optional(),
}).strict();

export const TenantCreateNestedOneWithoutPayablesInputSchema: z.ZodType<Prisma.TenantCreateNestedOneWithoutPayablesInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutPayablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutPayablesInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional()
}).strict();

export const UserCreateNestedOneWithoutPayablesInputSchema: z.ZodType<Prisma.UserCreateNestedOneWithoutPayablesInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutPayablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutPayablesInputSchema).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional()
}).strict();

export const TenantUpdateOneRequiredWithoutPayablesNestedInputSchema: z.ZodType<Prisma.TenantUpdateOneRequiredWithoutPayablesNestedInput> = z.object({
  create: z.union([ z.lazy(() => TenantCreateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutPayablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TenantCreateOrConnectWithoutPayablesInputSchema).optional(),
  upsert: z.lazy(() => TenantUpsertWithoutPayablesInputSchema).optional(),
  connect: z.lazy(() => TenantWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TenantUpdateToOneWithWhereWithoutPayablesInputSchema),z.lazy(() => TenantUpdateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutPayablesInputSchema) ]).optional(),
}).strict();

export const UserUpdateOneWithoutPayablesNestedInputSchema: z.ZodType<Prisma.UserUpdateOneWithoutPayablesNestedInput> = z.object({
  create: z.union([ z.lazy(() => UserCreateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutPayablesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => UserCreateOrConnectWithoutPayablesInputSchema).optional(),
  upsert: z.lazy(() => UserUpsertWithoutPayablesInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => UserWhereInputSchema) ]).optional(),
  connect: z.lazy(() => UserWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => UserUpdateToOneWithWhereWithoutPayablesInputSchema),z.lazy(() => UserUpdateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPayablesInputSchema) ]).optional(),
}).strict();

export const ChannelCreateNestedOneWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelCreateNestedOneWithoutTransportPricesInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutTransportPricesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutTransportPricesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const PriceSettingCreateNestedManyWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateNestedManyWithoutTransportPriceInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyTransportPriceInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PriceSettingUncheckedCreateNestedManyWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedCreateNestedManyWithoutTransportPriceInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyTransportPriceInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelUpdateOneRequiredWithoutTransportPricesNestedInputSchema: z.ZodType<Prisma.ChannelUpdateOneRequiredWithoutTransportPricesNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutTransportPricesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutTransportPricesInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutTransportPricesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutTransportPricesInputSchema),z.lazy(() => ChannelUpdateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutTransportPricesInputSchema) ]).optional(),
}).strict();

export const PriceSettingUpdateManyWithoutTransportPriceNestedInputSchema: z.ZodType<Prisma.PriceSettingUpdateManyWithoutTransportPriceNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyTransportPriceInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceSettingUpdateManyWithWhereWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpdateManyWithWhereWithoutTransportPriceInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PriceSettingUncheckedUpdateManyWithoutTransportPriceNestedInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateManyWithoutTransportPriceNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutTransportPriceInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyTransportPriceInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceSettingUpdateManyWithWhereWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUpdateManyWithWhereWithoutTransportPriceInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PriceCreateNestedOneWithoutSettingsInputSchema: z.ZodType<Prisma.PriceCreateNestedOneWithoutSettingsInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedCreateWithoutSettingsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => PriceCreateOrConnectWithoutSettingsInputSchema).optional(),
  connect: z.lazy(() => PriceWhereUniqueInputSchema).optional()
}).strict();

export const TransportPriceCreateNestedOneWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceCreateNestedOneWithoutSettingsInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutSettingsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TransportPriceCreateOrConnectWithoutSettingsInputSchema).optional(),
  connect: z.lazy(() => TransportPriceWhereUniqueInputSchema).optional()
}).strict();

export const PriceUpdateOneRequiredWithoutSettingsNestedInputSchema: z.ZodType<Prisma.PriceUpdateOneRequiredWithoutSettingsNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceCreateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedCreateWithoutSettingsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => PriceCreateOrConnectWithoutSettingsInputSchema).optional(),
  upsert: z.lazy(() => PriceUpsertWithoutSettingsInputSchema).optional(),
  connect: z.lazy(() => PriceWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => PriceUpdateToOneWithWhereWithoutSettingsInputSchema),z.lazy(() => PriceUpdateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedUpdateWithoutSettingsInputSchema) ]).optional(),
}).strict();

export const TransportPriceUpdateOneWithoutSettingsNestedInputSchema: z.ZodType<Prisma.TransportPriceUpdateOneWithoutSettingsNestedInput> = z.object({
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutSettingsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => TransportPriceCreateOrConnectWithoutSettingsInputSchema).optional(),
  upsert: z.lazy(() => TransportPriceUpsertWithoutSettingsInputSchema).optional(),
  disconnect: z.union([ z.boolean(),z.lazy(() => TransportPriceWhereInputSchema) ]).optional(),
  delete: z.union([ z.boolean(),z.lazy(() => TransportPriceWhereInputSchema) ]).optional(),
  connect: z.lazy(() => TransportPriceWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => TransportPriceUpdateToOneWithWhereWithoutSettingsInputSchema),z.lazy(() => TransportPriceUpdateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedUpdateWithoutSettingsInputSchema) ]).optional(),
}).strict();

export const PriceSettingCreateNestedManyWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateNestedManyWithoutPriceInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyPriceInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const ChannelCreateNestedOneWithoutPricesInputSchema: z.ZodType<Prisma.ChannelCreateNestedOneWithoutPricesInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutPricesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutPricesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional()
}).strict();

export const PriceSettingUncheckedCreateNestedManyWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedCreateNestedManyWithoutPriceInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyPriceInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PriceSettingUpdateManyWithoutPriceNestedInputSchema: z.ZodType<Prisma.PriceSettingUpdateManyWithoutPriceNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutPriceInputSchema),z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyPriceInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutPriceInputSchema),z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutPriceInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceSettingUpdateManyWithWhereWithoutPriceInputSchema),z.lazy(() => PriceSettingUpdateManyWithWhereWithoutPriceInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const ChannelUpdateOneRequiredWithoutPricesNestedInputSchema: z.ZodType<Prisma.ChannelUpdateOneRequiredWithoutPricesNestedInput> = z.object({
  create: z.union([ z.lazy(() => ChannelCreateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutPricesInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => ChannelCreateOrConnectWithoutPricesInputSchema).optional(),
  upsert: z.lazy(() => ChannelUpsertWithoutPricesInputSchema).optional(),
  connect: z.lazy(() => ChannelWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => ChannelUpdateToOneWithWhereWithoutPricesInputSchema),z.lazy(() => ChannelUpdateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutPricesInputSchema) ]).optional(),
}).strict();

export const PriceSettingUncheckedUpdateManyWithoutPriceNestedInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateManyWithoutPriceNestedInput> = z.object({
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateWithoutPriceInputSchema).array(),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema),z.lazy(() => PriceSettingCreateOrConnectWithoutPriceInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutPriceInputSchema),z.lazy(() => PriceSettingUpsertWithWhereUniqueWithoutPriceInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PriceSettingCreateManyPriceInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PriceSettingWhereUniqueInputSchema),z.lazy(() => PriceSettingWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutPriceInputSchema),z.lazy(() => PriceSettingUpdateWithWhereUniqueWithoutPriceInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PriceSettingUpdateManyWithWhereWithoutPriceInputSchema),z.lazy(() => PriceSettingUpdateManyWithWhereWithoutPriceInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const CustomerCreateNestedOneWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerCreateNestedOneWithoutPositionsInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutPositionsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutPositionsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional()
}).strict();

export const PositionMemberCreateNestedManyWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberCreateNestedManyWithoutPositionInput> = z.object({
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateWithoutPositionInputSchema).array(),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionMemberCreateManyPositionInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const PositionMemberUncheckedCreateNestedManyWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUncheckedCreateNestedManyWithoutPositionInput> = z.object({
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateWithoutPositionInputSchema).array(),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionMemberCreateManyPositionInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerUpdateOneRequiredWithoutPositionsNestedInputSchema: z.ZodType<Prisma.CustomerUpdateOneRequiredWithoutPositionsNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutPositionsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutPositionsInputSchema).optional(),
  upsert: z.lazy(() => CustomerUpsertWithoutPositionsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateToOneWithWhereWithoutPositionsInputSchema),z.lazy(() => CustomerUpdateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutPositionsInputSchema) ]).optional(),
}).strict();

export const PositionMemberUpdateManyWithoutPositionNestedInputSchema: z.ZodType<Prisma.PositionMemberUpdateManyWithoutPositionNestedInput> = z.object({
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateWithoutPositionInputSchema).array(),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PositionMemberUpsertWithWhereUniqueWithoutPositionInputSchema),z.lazy(() => PositionMemberUpsertWithWhereUniqueWithoutPositionInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionMemberCreateManyPositionInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PositionMemberUpdateWithWhereUniqueWithoutPositionInputSchema),z.lazy(() => PositionMemberUpdateWithWhereUniqueWithoutPositionInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PositionMemberUpdateManyWithWhereWithoutPositionInputSchema),z.lazy(() => PositionMemberUpdateManyWithWhereWithoutPositionInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PositionMemberScalarWhereInputSchema),z.lazy(() => PositionMemberScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PositionMemberUncheckedUpdateManyWithoutPositionNestedInputSchema: z.ZodType<Prisma.PositionMemberUncheckedUpdateManyWithoutPositionNestedInput> = z.object({
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateWithoutPositionInputSchema).array(),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema),z.lazy(() => PositionMemberCreateOrConnectWithoutPositionInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => PositionMemberUpsertWithWhereUniqueWithoutPositionInputSchema),z.lazy(() => PositionMemberUpsertWithWhereUniqueWithoutPositionInputSchema).array() ]).optional(),
  createMany: z.lazy(() => PositionMemberCreateManyPositionInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => PositionMemberWhereUniqueInputSchema),z.lazy(() => PositionMemberWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => PositionMemberUpdateWithWhereUniqueWithoutPositionInputSchema),z.lazy(() => PositionMemberUpdateWithWhereUniqueWithoutPositionInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => PositionMemberUpdateManyWithWhereWithoutPositionInputSchema),z.lazy(() => PositionMemberUpdateManyWithWhereWithoutPositionInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => PositionMemberScalarWhereInputSchema),z.lazy(() => PositionMemberScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const PositionCreateNestedOneWithoutMembersInputSchema: z.ZodType<Prisma.PositionCreateNestedOneWithoutMembersInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedCreateWithoutMembersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => PositionCreateOrConnectWithoutMembersInputSchema).optional(),
  connect: z.lazy(() => PositionWhereUniqueInputSchema).optional()
}).strict();

export const PositionUpdateOneRequiredWithoutMembersNestedInputSchema: z.ZodType<Prisma.PositionUpdateOneRequiredWithoutMembersNestedInput> = z.object({
  create: z.union([ z.lazy(() => PositionCreateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedCreateWithoutMembersInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => PositionCreateOrConnectWithoutMembersInputSchema).optional(),
  upsert: z.lazy(() => PositionUpsertWithoutMembersInputSchema).optional(),
  connect: z.lazy(() => PositionWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => PositionUpdateToOneWithWhereWithoutMembersInputSchema),z.lazy(() => PositionUpdateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedUpdateWithoutMembersInputSchema) ]).optional(),
}).strict();

export const CustomerCreateNestedOneWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerCreateNestedOneWithoutLoginLogsInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutLoginLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutLoginLogsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional()
}).strict();

export const CustomerUpdateOneRequiredWithoutLoginLogsNestedInputSchema: z.ZodType<Prisma.CustomerUpdateOneRequiredWithoutLoginLogsNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutLoginLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutLoginLogsInputSchema).optional(),
  upsert: z.lazy(() => CustomerUpsertWithoutLoginLogsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateToOneWithWhereWithoutLoginLogsInputSchema),z.lazy(() => CustomerUpdateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutLoginLogsInputSchema) ]).optional(),
}).strict();

export const CustomerCreateNestedOneWithoutBillsInputSchema: z.ZodType<Prisma.CustomerCreateNestedOneWithoutBillsInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutBillsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutBillsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional()
}).strict();

export const FBAOrderCreateNestedManyWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderCreateNestedManyWithoutBillsInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateWithoutBillsInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const BillLogCreateNestedManyWithoutBillInputSchema: z.ZodType<Prisma.BillLogCreateNestedManyWithoutBillInput> = z.object({
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogCreateWithoutBillInputSchema).array(),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillLogCreateManyBillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const BillAttachmentCreateNestedManyWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentCreateNestedManyWithoutBillInput> = z.object({
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateWithoutBillInputSchema).array(),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillAttachmentCreateManyBillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedCreateNestedManyWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateNestedManyWithoutBillsInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateWithoutBillsInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const BillLogUncheckedCreateNestedManyWithoutBillInputSchema: z.ZodType<Prisma.BillLogUncheckedCreateNestedManyWithoutBillInput> = z.object({
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogCreateWithoutBillInputSchema).array(),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillLogCreateManyBillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const BillAttachmentUncheckedCreateNestedManyWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedCreateNestedManyWithoutBillInput> = z.object({
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateWithoutBillInputSchema).array(),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillAttachmentCreateManyBillInputEnvelopeSchema).optional(),
  connect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
}).strict();

export const CustomerUpdateOneRequiredWithoutBillsNestedInputSchema: z.ZodType<Prisma.CustomerUpdateOneRequiredWithoutBillsNestedInput> = z.object({
  create: z.union([ z.lazy(() => CustomerCreateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutBillsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => CustomerCreateOrConnectWithoutBillsInputSchema).optional(),
  upsert: z.lazy(() => CustomerUpsertWithoutBillsInputSchema).optional(),
  connect: z.lazy(() => CustomerWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => CustomerUpdateToOneWithWhereWithoutBillsInputSchema),z.lazy(() => CustomerUpdateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutBillsInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateManyWithoutBillsNestedInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithoutBillsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateWithoutBillsInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutBillsInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutBillsInputSchema).array() ]).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutBillsInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutBillsInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutBillsInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutBillsInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const BillLogUpdateManyWithoutBillNestedInputSchema: z.ZodType<Prisma.BillLogUpdateManyWithoutBillNestedInput> = z.object({
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogCreateWithoutBillInputSchema).array(),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BillLogUpsertWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillLogUpsertWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillLogCreateManyBillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BillLogUpdateWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillLogUpdateWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BillLogUpdateManyWithWhereWithoutBillInputSchema),z.lazy(() => BillLogUpdateManyWithWhereWithoutBillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BillLogScalarWhereInputSchema),z.lazy(() => BillLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const BillAttachmentUpdateManyWithoutBillNestedInputSchema: z.ZodType<Prisma.BillAttachmentUpdateManyWithoutBillNestedInput> = z.object({
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateWithoutBillInputSchema).array(),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BillAttachmentUpsertWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillAttachmentUpsertWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillAttachmentCreateManyBillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BillAttachmentUpdateWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillAttachmentUpdateWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BillAttachmentUpdateManyWithWhereWithoutBillInputSchema),z.lazy(() => BillAttachmentUpdateManyWithWhereWithoutBillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BillAttachmentScalarWhereInputSchema),z.lazy(() => BillAttachmentScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutBillsNestedInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutBillsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateWithoutBillsInputSchema).array(),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema),z.lazy(() => FBAOrderCreateOrConnectWithoutBillsInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutBillsInputSchema),z.lazy(() => FBAOrderUpsertWithWhereUniqueWithoutBillsInputSchema).array() ]).optional(),
  set: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => FBAOrderWhereUniqueInputSchema),z.lazy(() => FBAOrderWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutBillsInputSchema),z.lazy(() => FBAOrderUpdateWithWhereUniqueWithoutBillsInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => FBAOrderUpdateManyWithWhereWithoutBillsInputSchema),z.lazy(() => FBAOrderUpdateManyWithWhereWithoutBillsInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const BillLogUncheckedUpdateManyWithoutBillNestedInputSchema: z.ZodType<Prisma.BillLogUncheckedUpdateManyWithoutBillNestedInput> = z.object({
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogCreateWithoutBillInputSchema).array(),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillLogCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BillLogUpsertWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillLogUpsertWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillLogCreateManyBillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BillLogWhereUniqueInputSchema),z.lazy(() => BillLogWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BillLogUpdateWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillLogUpdateWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BillLogUpdateManyWithWhereWithoutBillInputSchema),z.lazy(() => BillLogUpdateManyWithWhereWithoutBillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BillLogScalarWhereInputSchema),z.lazy(() => BillLogScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const BillAttachmentUncheckedUpdateManyWithoutBillNestedInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedUpdateManyWithoutBillNestedInput> = z.object({
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateWithoutBillInputSchema).array(),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema).array() ]).optional(),
  connectOrCreate: z.union([ z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema),z.lazy(() => BillAttachmentCreateOrConnectWithoutBillInputSchema).array() ]).optional(),
  upsert: z.union([ z.lazy(() => BillAttachmentUpsertWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillAttachmentUpsertWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  createMany: z.lazy(() => BillAttachmentCreateManyBillInputEnvelopeSchema).optional(),
  set: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  disconnect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  delete: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  connect: z.union([ z.lazy(() => BillAttachmentWhereUniqueInputSchema),z.lazy(() => BillAttachmentWhereUniqueInputSchema).array() ]).optional(),
  update: z.union([ z.lazy(() => BillAttachmentUpdateWithWhereUniqueWithoutBillInputSchema),z.lazy(() => BillAttachmentUpdateWithWhereUniqueWithoutBillInputSchema).array() ]).optional(),
  updateMany: z.union([ z.lazy(() => BillAttachmentUpdateManyWithWhereWithoutBillInputSchema),z.lazy(() => BillAttachmentUpdateManyWithWhereWithoutBillInputSchema).array() ]).optional(),
  deleteMany: z.union([ z.lazy(() => BillAttachmentScalarWhereInputSchema),z.lazy(() => BillAttachmentScalarWhereInputSchema).array() ]).optional(),
}).strict();

export const FinanceBillCreateNestedOneWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillCreateNestedOneWithoutLogsInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FinanceBillCreateOrConnectWithoutLogsInputSchema).optional(),
  connect: z.lazy(() => FinanceBillWhereUniqueInputSchema).optional()
}).strict();

export const FinanceBillUpdateOneRequiredWithoutLogsNestedInputSchema: z.ZodType<Prisma.FinanceBillUpdateOneRequiredWithoutLogsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutLogsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FinanceBillCreateOrConnectWithoutLogsInputSchema).optional(),
  upsert: z.lazy(() => FinanceBillUpsertWithoutLogsInputSchema).optional(),
  connect: z.lazy(() => FinanceBillWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateToOneWithWhereWithoutLogsInputSchema),z.lazy(() => FinanceBillUpdateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutLogsInputSchema) ]).optional(),
}).strict();

export const FinanceBillCreateNestedOneWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillCreateNestedOneWithoutAttachmentsInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutAttachmentsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FinanceBillCreateOrConnectWithoutAttachmentsInputSchema).optional(),
  connect: z.lazy(() => FinanceBillWhereUniqueInputSchema).optional()
}).strict();

export const FinanceBillUpdateOneRequiredWithoutAttachmentsNestedInputSchema: z.ZodType<Prisma.FinanceBillUpdateOneRequiredWithoutAttachmentsNestedInput> = z.object({
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutAttachmentsInputSchema) ]).optional(),
  connectOrCreate: z.lazy(() => FinanceBillCreateOrConnectWithoutAttachmentsInputSchema).optional(),
  upsert: z.lazy(() => FinanceBillUpsertWithoutAttachmentsInputSchema).optional(),
  connect: z.lazy(() => FinanceBillWhereUniqueInputSchema).optional(),
  update: z.union([ z.lazy(() => FinanceBillUpdateToOneWithWhereWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUpdateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutAttachmentsInputSchema) ]).optional(),
}).strict();

export const NestedStringFilterSchema: z.ZodType<Prisma.NestedStringFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringFilterSchema) ]).optional(),
}).strict();

export const NestedDateTimeFilterSchema: z.ZodType<Prisma.NestedDateTimeFilter> = z.object({
  equals: z.coerce.date().optional(),
  in: z.coerce.date().array().optional(),
  notIn: z.coerce.date().array().optional(),
  lt: z.coerce.date().optional(),
  lte: z.coerce.date().optional(),
  gt: z.coerce.date().optional(),
  gte: z.coerce.date().optional(),
  not: z.union([ z.coerce.date(),z.lazy(() => NestedDateTimeFilterSchema) ]).optional(),
}).strict();

export const NestedStringWithAggregatesFilterSchema: z.ZodType<Prisma.NestedStringWithAggregatesFilter> = z.object({
  equals: z.string().optional(),
  in: z.string().array().optional(),
  notIn: z.string().array().optional(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedStringFilterSchema).optional(),
  _max: z.lazy(() => NestedStringFilterSchema).optional()
}).strict();

export const NestedIntFilterSchema: z.ZodType<Prisma.NestedIntFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntFilterSchema) ]).optional(),
}).strict();

export const NestedDateTimeWithAggregatesFilterSchema: z.ZodType<Prisma.NestedDateTimeWithAggregatesFilter> = z.object({
  equals: z.coerce.date().optional(),
  in: z.coerce.date().array().optional(),
  notIn: z.coerce.date().array().optional(),
  lt: z.coerce.date().optional(),
  lte: z.coerce.date().optional(),
  gt: z.coerce.date().optional(),
  gte: z.coerce.date().optional(),
  not: z.union([ z.coerce.date(),z.lazy(() => NestedDateTimeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedDateTimeFilterSchema).optional(),
  _max: z.lazy(() => NestedDateTimeFilterSchema).optional()
}).strict();

export const NestedEnumRoleTypeFilterSchema: z.ZodType<Prisma.NestedEnumRoleTypeFilter> = z.object({
  equals: z.lazy(() => RoleTypeSchema).optional(),
  in: z.lazy(() => RoleTypeSchema).array().optional(),
  notIn: z.lazy(() => RoleTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => NestedEnumRoleTypeFilterSchema) ]).optional(),
}).strict();

export const NestedEnumRoleTypeWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumRoleTypeWithAggregatesFilter> = z.object({
  equals: z.lazy(() => RoleTypeSchema).optional(),
  in: z.lazy(() => RoleTypeSchema).array().optional(),
  notIn: z.lazy(() => RoleTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => NestedEnumRoleTypeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumRoleTypeFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumRoleTypeFilterSchema).optional()
}).strict();

export const NestedEnumPermissionTypeFilterSchema: z.ZodType<Prisma.NestedEnumPermissionTypeFilter> = z.object({
  equals: z.lazy(() => PermissionTypeSchema).optional(),
  in: z.lazy(() => PermissionTypeSchema).array().optional(),
  notIn: z.lazy(() => PermissionTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => NestedEnumPermissionTypeFilterSchema) ]).optional(),
}).strict();

export const NestedEnumPermissionTypeWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumPermissionTypeWithAggregatesFilter> = z.object({
  equals: z.lazy(() => PermissionTypeSchema).optional(),
  in: z.lazy(() => PermissionTypeSchema).array().optional(),
  notIn: z.lazy(() => PermissionTypeSchema).array().optional(),
  not: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => NestedEnumPermissionTypeWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumPermissionTypeFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumPermissionTypeFilterSchema).optional()
}).strict();

export const NestedFloatNullableFilterSchema: z.ZodType<Prisma.NestedFloatNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const NestedBoolFilterSchema: z.ZodType<Prisma.NestedBoolFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([ z.boolean(),z.lazy(() => NestedBoolFilterSchema) ]).optional(),
}).strict();

export const NestedFloatFilterSchema: z.ZodType<Prisma.NestedFloatFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatFilterSchema) ]).optional(),
}).strict();

export const NestedStringNullableFilterSchema: z.ZodType<Prisma.NestedStringNullableFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const NestedFloatNullableWithAggregatesFilterSchema: z.ZodType<Prisma.NestedFloatNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedFloatNullableFilterSchema).optional()
}).strict();

export const NestedIntNullableFilterSchema: z.ZodType<Prisma.NestedIntNullableFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntNullableFilterSchema) ]).optional().nullable(),
}).strict();

export const NestedBoolWithAggregatesFilterSchema: z.ZodType<Prisma.NestedBoolWithAggregatesFilter> = z.object({
  equals: z.boolean().optional(),
  not: z.union([ z.boolean(),z.lazy(() => NestedBoolWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedBoolFilterSchema).optional(),
  _max: z.lazy(() => NestedBoolFilterSchema).optional()
}).strict();

export const NestedFloatWithAggregatesFilterSchema: z.ZodType<Prisma.NestedFloatWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedFloatWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedFloatFilterSchema).optional(),
  _min: z.lazy(() => NestedFloatFilterSchema).optional(),
  _max: z.lazy(() => NestedFloatFilterSchema).optional()
}).strict();

export const NestedIntWithAggregatesFilterSchema: z.ZodType<Prisma.NestedIntWithAggregatesFilter> = z.object({
  equals: z.number().optional(),
  in: z.number().array().optional(),
  notIn: z.number().array().optional(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedIntFilterSchema).optional(),
  _max: z.lazy(() => NestedIntFilterSchema).optional()
}).strict();

export const NestedStringNullableWithAggregatesFilterSchema: z.ZodType<Prisma.NestedStringNullableWithAggregatesFilter> = z.object({
  equals: z.string().optional().nullable(),
  in: z.string().array().optional().nullable(),
  notIn: z.string().array().optional().nullable(),
  lt: z.string().optional(),
  lte: z.string().optional(),
  gt: z.string().optional(),
  gte: z.string().optional(),
  contains: z.string().optional(),
  startsWith: z.string().optional(),
  endsWith: z.string().optional(),
  not: z.union([ z.string(),z.lazy(() => NestedStringNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedStringNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedStringNullableFilterSchema).optional()
}).strict();

export const NestedEnumCustomerStatusFilterSchema: z.ZodType<Prisma.NestedEnumCustomerStatusFilter> = z.object({
  equals: z.lazy(() => CustomerStatusSchema).optional(),
  in: z.lazy(() => CustomerStatusSchema).array().optional(),
  notIn: z.lazy(() => CustomerStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => NestedEnumCustomerStatusFilterSchema) ]).optional(),
}).strict();

export const NestedEnumSettlementMethodFilterSchema: z.ZodType<Prisma.NestedEnumSettlementMethodFilter> = z.object({
  equals: z.lazy(() => SettlementMethodSchema).optional(),
  in: z.lazy(() => SettlementMethodSchema).array().optional(),
  notIn: z.lazy(() => SettlementMethodSchema).array().optional(),
  not: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => NestedEnumSettlementMethodFilterSchema) ]).optional(),
}).strict();

export const NestedEnumCustomerStatusWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumCustomerStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => CustomerStatusSchema).optional(),
  in: z.lazy(() => CustomerStatusSchema).array().optional(),
  notIn: z.lazy(() => CustomerStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => NestedEnumCustomerStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumCustomerStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumCustomerStatusFilterSchema).optional()
}).strict();

export const NestedEnumSettlementMethodWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumSettlementMethodWithAggregatesFilter> = z.object({
  equals: z.lazy(() => SettlementMethodSchema).optional(),
  in: z.lazy(() => SettlementMethodSchema).array().optional(),
  notIn: z.lazy(() => SettlementMethodSchema).array().optional(),
  not: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => NestedEnumSettlementMethodWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumSettlementMethodFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumSettlementMethodFilterSchema).optional()
}).strict();

export const NestedJsonNullableFilterSchema: z.ZodType<Prisma.NestedJsonNullableFilter> = z.object({
  equals: InputJsonValueSchema.optional(),
  path: z.string().array().optional(),
  mode: z.lazy(() => QueryModeSchema).optional(),
  string_contains: z.string().optional(),
  string_starts_with: z.string().optional(),
  string_ends_with: z.string().optional(),
  array_starts_with: InputJsonValueSchema.optional().nullable(),
  array_ends_with: InputJsonValueSchema.optional().nullable(),
  array_contains: InputJsonValueSchema.optional().nullable(),
  lt: InputJsonValueSchema.optional(),
  lte: InputJsonValueSchema.optional(),
  gt: InputJsonValueSchema.optional(),
  gte: InputJsonValueSchema.optional(),
  not: InputJsonValueSchema.optional()
}).strict();

export const NestedEnumOrderStatusFilterSchema: z.ZodType<Prisma.NestedEnumOrderStatusFilter> = z.object({
  equals: z.lazy(() => OrderStatusSchema).optional(),
  in: z.lazy(() => OrderStatusSchema).array().optional(),
  notIn: z.lazy(() => OrderStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => NestedEnumOrderStatusFilterSchema) ]).optional(),
}).strict();

export const NestedEnumOrderStatusWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumOrderStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => OrderStatusSchema).optional(),
  in: z.lazy(() => OrderStatusSchema).array().optional(),
  notIn: z.lazy(() => OrderStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => NestedEnumOrderStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumOrderStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumOrderStatusFilterSchema).optional()
}).strict();

export const NestedIntNullableWithAggregatesFilterSchema: z.ZodType<Prisma.NestedIntNullableWithAggregatesFilter> = z.object({
  equals: z.number().optional().nullable(),
  in: z.number().array().optional().nullable(),
  notIn: z.number().array().optional().nullable(),
  lt: z.number().optional(),
  lte: z.number().optional(),
  gt: z.number().optional(),
  gte: z.number().optional(),
  not: z.union([ z.number(),z.lazy(() => NestedIntNullableWithAggregatesFilterSchema) ]).optional().nullable(),
  _count: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _avg: z.lazy(() => NestedFloatNullableFilterSchema).optional(),
  _sum: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _min: z.lazy(() => NestedIntNullableFilterSchema).optional(),
  _max: z.lazy(() => NestedIntNullableFilterSchema).optional()
}).strict();

export const NestedEnumFinanceStatusFilterSchema: z.ZodType<Prisma.NestedEnumFinanceStatusFilter> = z.object({
  equals: z.lazy(() => FinanceStatusSchema).optional(),
  in: z.lazy(() => FinanceStatusSchema).array().optional(),
  notIn: z.lazy(() => FinanceStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => NestedEnumFinanceStatusFilterSchema) ]).optional(),
}).strict();

export const NestedEnumFinanceStatusWithAggregatesFilterSchema: z.ZodType<Prisma.NestedEnumFinanceStatusWithAggregatesFilter> = z.object({
  equals: z.lazy(() => FinanceStatusSchema).optional(),
  in: z.lazy(() => FinanceStatusSchema).array().optional(),
  notIn: z.lazy(() => FinanceStatusSchema).array().optional(),
  not: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => NestedEnumFinanceStatusWithAggregatesFilterSchema) ]).optional(),
  _count: z.lazy(() => NestedIntFilterSchema).optional(),
  _min: z.lazy(() => NestedEnumFinanceStatusFilterSchema).optional(),
  _max: z.lazy(() => NestedEnumFinanceStatusFilterSchema).optional()
}).strict();

export const UserCreateWithoutTenantInputSchema: z.ZodType<Prisma.UserCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutTenantInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutTenantInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutTenantInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const UserCreateManyTenantInputEnvelopeSchema: z.ZodType<Prisma.UserCreateManyTenantInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => UserCreateManyTenantInputSchema),z.lazy(() => UserCreateManyTenantInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FBAOrderCreateWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutTenantInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const FBAOrderCreateManyTenantInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyTenantInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyTenantInputSchema),z.lazy(() => FBAOrderCreateManyTenantInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ReceivableCreateWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  createdBy: z.lazy(() => UserCreateNestedOneWithoutReceivablesInputSchema).optional()
}).strict();

export const ReceivableUncheckedCreateWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUncheckedCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const ReceivableCreateOrConnectWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableCreateOrConnectWithoutTenantInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const ReceivableCreateManyTenantInputEnvelopeSchema: z.ZodType<Prisma.ReceivableCreateManyTenantInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => ReceivableCreateManyTenantInputSchema),z.lazy(() => ReceivableCreateManyTenantInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const PayableCreateWithoutTenantInputSchema: z.ZodType<Prisma.PayableCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  createdBy: z.lazy(() => UserCreateNestedOneWithoutPayablesInputSchema).optional()
}).strict();

export const PayableUncheckedCreateWithoutTenantInputSchema: z.ZodType<Prisma.PayableUncheckedCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableCreateOrConnectWithoutTenantInputSchema: z.ZodType<Prisma.PayableCreateOrConnectWithoutTenantInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const PayableCreateManyTenantInputEnvelopeSchema: z.ZodType<Prisma.PayableCreateManyTenantInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PayableCreateManyTenantInputSchema),z.lazy(() => PayableCreateManyTenantInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CustomerCreateWithoutTenantInputSchema: z.ZodType<Prisma.CustomerCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutTenantInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutTenantInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const CustomerCreateManyTenantInputEnvelopeSchema: z.ZodType<Prisma.CustomerCreateManyTenantInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => CustomerCreateManyTenantInputSchema),z.lazy(() => CustomerCreateManyTenantInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const UserUpsertWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.UserUpsertWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => UserUpdateWithoutTenantInputSchema),z.lazy(() => UserUncheckedUpdateWithoutTenantInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutTenantInputSchema),z.lazy(() => UserUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const UserUpdateWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.UserUpdateWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => UserUpdateWithoutTenantInputSchema),z.lazy(() => UserUncheckedUpdateWithoutTenantInputSchema) ]),
}).strict();

export const UserUpdateManyWithWhereWithoutTenantInputSchema: z.ZodType<Prisma.UserUpdateManyWithWhereWithoutTenantInput> = z.object({
  where: z.lazy(() => UserScalarWhereInputSchema),
  data: z.union([ z.lazy(() => UserUpdateManyMutationInputSchema),z.lazy(() => UserUncheckedUpdateManyWithoutTenantInputSchema) ]),
}).strict();

export const UserScalarWhereInputSchema: z.ZodType<Prisma.UserScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => UserScalarWhereInputSchema),z.lazy(() => UserScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => UserScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => UserScalarWhereInputSchema),z.lazy(() => UserScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  password: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  role: z.union([ z.lazy(() => EnumRoleTypeFilterSchema),z.lazy(() => RoleTypeSchema) ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutTenantInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutTenantInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutTenantInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutTenantInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantInputSchema) ]),
}).strict();

export const FBAOrderScalarWhereInputSchema: z.ZodType<Prisma.FBAOrderScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FBAOrderScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FBAOrderScalarWhereInputSchema),z.lazy(() => FBAOrderScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  freightCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  totalCost: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  recipient: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  quantity: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  volumetricWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cargo: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumOrderStatusFilterSchema),z.lazy(() => OrderStatusSchema) ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasMagnetic: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasDangerous: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasLiquid: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hasPowder: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  clientCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  company: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  store: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ref1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  vat: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  ioss: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  eori: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  category: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  productName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attrs: z.lazy(() => StringNullableListFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  insurance: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  address1: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address2: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address3: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  addressDetail: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  city: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  state: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  postalCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredValue: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declaredQuantity: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  senderName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  billingPrecision: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  isCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCustomerCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  trackingNumber: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelUploaded: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  errors: z.lazy(() => StringNullableListFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const ReceivableUpsertWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUpsertWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => ReceivableUpdateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedUpdateWithoutTenantInputSchema) ]),
  create: z.union([ z.lazy(() => ReceivableCreateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const ReceivableUpdateWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUpdateWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => ReceivableUpdateWithoutTenantInputSchema),z.lazy(() => ReceivableUncheckedUpdateWithoutTenantInputSchema) ]),
}).strict();

export const ReceivableUpdateManyWithWhereWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUpdateManyWithWhereWithoutTenantInput> = z.object({
  where: z.lazy(() => ReceivableScalarWhereInputSchema),
  data: z.union([ z.lazy(() => ReceivableUpdateManyMutationInputSchema),z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantInputSchema) ]),
}).strict();

export const ReceivableScalarWhereInputSchema: z.ZodType<Prisma.ReceivableScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ReceivableScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ReceivableScalarWhereInputSchema),z.lazy(() => ReceivableScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PayableUpsertWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.PayableUpsertWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PayableUpdateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedUpdateWithoutTenantInputSchema) ]),
  create: z.union([ z.lazy(() => PayableCreateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const PayableUpdateWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.PayableUpdateWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PayableUpdateWithoutTenantInputSchema),z.lazy(() => PayableUncheckedUpdateWithoutTenantInputSchema) ]),
}).strict();

export const PayableUpdateManyWithWhereWithoutTenantInputSchema: z.ZodType<Prisma.PayableUpdateManyWithWhereWithoutTenantInput> = z.object({
  where: z.lazy(() => PayableScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PayableUpdateManyMutationInputSchema),z.lazy(() => PayableUncheckedUpdateManyWithoutTenantInputSchema) ]),
}).strict();

export const PayableScalarWhereInputSchema: z.ZodType<Prisma.PayableScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PayableScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PayableScalarWhereInputSchema),z.lazy(() => PayableScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  orderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  client: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  amount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => EnumFinanceStatusFilterSchema),z.lazy(() => FinanceStatusSchema) ]).optional(),
  dueDate: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  exception: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdById: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const CustomerUpsertWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUpsertWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => CustomerUpdateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutTenantInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutTenantInputSchema) ]),
}).strict();

export const CustomerUpdateWithWhereUniqueWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUpdateWithWhereUniqueWithoutTenantInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutTenantInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutTenantInputSchema) ]),
}).strict();

export const CustomerUpdateManyWithWhereWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUpdateManyWithWhereWithoutTenantInput> = z.object({
  where: z.lazy(() => CustomerScalarWhereInputSchema),
  data: z.union([ z.lazy(() => CustomerUpdateManyMutationInputSchema),z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantInputSchema) ]),
}).strict();

export const CustomerScalarWhereInputSchema: z.ZodType<Prisma.CustomerScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CustomerScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CustomerScalarWhereInputSchema),z.lazy(() => CustomerScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  companyName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tenantId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  address: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  status: z.union([ z.lazy(() => EnumCustomerStatusFilterSchema),z.lazy(() => CustomerStatusSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => EnumSettlementMethodFilterSchema),z.lazy(() => SettlementMethodSchema) ]).optional(),
  financeContactId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  businessLicense: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  idCard: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  attachments: z.lazy(() => JsonNullableFilterSchema).optional(),
  notes: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const TenantCreateWithoutUsersInputSchema: z.ZodType<Prisma.TenantCreateWithoutUsersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateWithoutUsersInputSchema: z.ZodType<Prisma.TenantUncheckedCreateWithoutUsersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantCreateOrConnectWithoutUsersInputSchema: z.ZodType<Prisma.TenantCreateOrConnectWithoutUsersInput> = z.object({
  where: z.lazy(() => TenantWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TenantCreateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutUsersInputSchema) ]),
}).strict();

export const PermissionCreateWithoutUserInputSchema: z.ZodType<Prisma.PermissionCreateWithoutUserInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema)
}).strict();

export const PermissionUncheckedCreateWithoutUserInputSchema: z.ZodType<Prisma.PermissionUncheckedCreateWithoutUserInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema)
}).strict();

export const PermissionCreateOrConnectWithoutUserInputSchema: z.ZodType<Prisma.PermissionCreateOrConnectWithoutUserInput> = z.object({
  where: z.lazy(() => PermissionWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema) ]),
}).strict();

export const PermissionCreateManyUserInputEnvelopeSchema: z.ZodType<Prisma.PermissionCreateManyUserInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PermissionCreateManyUserInputSchema),z.lazy(() => PermissionCreateManyUserInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FBAOrderCreateWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutUserInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutUserInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutUserInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema) ]),
}).strict();

export const FBAOrderCreateManyUserInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyUserInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyUserInputSchema),z.lazy(() => FBAOrderCreateManyUserInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ReceivableCreateWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableCreateWithoutCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutReceivablesInputSchema)
}).strict();

export const ReceivableUncheckedCreateWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUncheckedCreateWithoutCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const ReceivableCreateOrConnectWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableCreateOrConnectWithoutCreatedByInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema) ]),
}).strict();

export const ReceivableCreateManyCreatedByInputEnvelopeSchema: z.ZodType<Prisma.ReceivableCreateManyCreatedByInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => ReceivableCreateManyCreatedByInputSchema),z.lazy(() => ReceivableCreateManyCreatedByInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const PayableCreateWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableCreateWithoutCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutPayablesInputSchema)
}).strict();

export const PayableUncheckedCreateWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUncheckedCreateWithoutCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableCreateOrConnectWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableCreateOrConnectWithoutCreatedByInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema) ]),
}).strict();

export const PayableCreateManyCreatedByInputEnvelopeSchema: z.ZodType<Prisma.PayableCreateManyCreatedByInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PayableCreateManyCreatedByInputSchema),z.lazy(() => PayableCreateManyCreatedByInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CustomerCreateWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerCreateWithoutFinanceContactInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutFinanceContactInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutFinanceContactInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema) ]),
}).strict();

export const CustomerCreateManyFinanceContactInputEnvelopeSchema: z.ZodType<Prisma.CustomerCreateManyFinanceContactInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => CustomerCreateManyFinanceContactInputSchema),z.lazy(() => CustomerCreateManyFinanceContactInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const TenantUpsertWithoutUsersInputSchema: z.ZodType<Prisma.TenantUpsertWithoutUsersInput> = z.object({
  update: z.union([ z.lazy(() => TenantUpdateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutUsersInputSchema) ]),
  create: z.union([ z.lazy(() => TenantCreateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutUsersInputSchema) ]),
  where: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const TenantUpdateToOneWithWhereWithoutUsersInputSchema: z.ZodType<Prisma.TenantUpdateToOneWithWhereWithoutUsersInput> = z.object({
  where: z.lazy(() => TenantWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TenantUpdateWithoutUsersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutUsersInputSchema) ]),
}).strict();

export const TenantUpdateWithoutUsersInputSchema: z.ZodType<Prisma.TenantUpdateWithoutUsersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateWithoutUsersInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateWithoutUsersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const PermissionUpsertWithWhereUniqueWithoutUserInputSchema: z.ZodType<Prisma.PermissionUpsertWithWhereUniqueWithoutUserInput> = z.object({
  where: z.lazy(() => PermissionWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PermissionUpdateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedUpdateWithoutUserInputSchema) ]),
  create: z.union([ z.lazy(() => PermissionCreateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedCreateWithoutUserInputSchema) ]),
}).strict();

export const PermissionUpdateWithWhereUniqueWithoutUserInputSchema: z.ZodType<Prisma.PermissionUpdateWithWhereUniqueWithoutUserInput> = z.object({
  where: z.lazy(() => PermissionWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PermissionUpdateWithoutUserInputSchema),z.lazy(() => PermissionUncheckedUpdateWithoutUserInputSchema) ]),
}).strict();

export const PermissionUpdateManyWithWhereWithoutUserInputSchema: z.ZodType<Prisma.PermissionUpdateManyWithWhereWithoutUserInput> = z.object({
  where: z.lazy(() => PermissionScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PermissionUpdateManyMutationInputSchema),z.lazy(() => PermissionUncheckedUpdateManyWithoutUserInputSchema) ]),
}).strict();

export const PermissionScalarWhereInputSchema: z.ZodType<Prisma.PermissionScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PermissionScalarWhereInputSchema),z.lazy(() => PermissionScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PermissionScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PermissionScalarWhereInputSchema),z.lazy(() => PermissionScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => EnumPermissionTypeFilterSchema),z.lazy(() => PermissionTypeSchema) ]).optional(),
  userId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutUserInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutUserInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutUserInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutUserInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutUserInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutUserInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutUserInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserInputSchema) ]),
}).strict();

export const ReceivableUpsertWithWhereUniqueWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUpsertWithWhereUniqueWithoutCreatedByInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => ReceivableUpdateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedUpdateWithoutCreatedByInputSchema) ]),
  create: z.union([ z.lazy(() => ReceivableCreateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedCreateWithoutCreatedByInputSchema) ]),
}).strict();

export const ReceivableUpdateWithWhereUniqueWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUpdateWithWhereUniqueWithoutCreatedByInput> = z.object({
  where: z.lazy(() => ReceivableWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => ReceivableUpdateWithoutCreatedByInputSchema),z.lazy(() => ReceivableUncheckedUpdateWithoutCreatedByInputSchema) ]),
}).strict();

export const ReceivableUpdateManyWithWhereWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUpdateManyWithWhereWithoutCreatedByInput> = z.object({
  where: z.lazy(() => ReceivableScalarWhereInputSchema),
  data: z.union([ z.lazy(() => ReceivableUpdateManyMutationInputSchema),z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByInputSchema) ]),
}).strict();

export const PayableUpsertWithWhereUniqueWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUpsertWithWhereUniqueWithoutCreatedByInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PayableUpdateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedUpdateWithoutCreatedByInputSchema) ]),
  create: z.union([ z.lazy(() => PayableCreateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedCreateWithoutCreatedByInputSchema) ]),
}).strict();

export const PayableUpdateWithWhereUniqueWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUpdateWithWhereUniqueWithoutCreatedByInput> = z.object({
  where: z.lazy(() => PayableWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PayableUpdateWithoutCreatedByInputSchema),z.lazy(() => PayableUncheckedUpdateWithoutCreatedByInputSchema) ]),
}).strict();

export const PayableUpdateManyWithWhereWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUpdateManyWithWhereWithoutCreatedByInput> = z.object({
  where: z.lazy(() => PayableScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PayableUpdateManyMutationInputSchema),z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByInputSchema) ]),
}).strict();

export const CustomerUpsertWithWhereUniqueWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUpsertWithWhereUniqueWithoutFinanceContactInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => CustomerUpdateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutFinanceContactInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFinanceContactInputSchema) ]),
}).strict();

export const CustomerUpdateWithWhereUniqueWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUpdateWithWhereUniqueWithoutFinanceContactInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutFinanceContactInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutFinanceContactInputSchema) ]),
}).strict();

export const CustomerUpdateManyWithWhereWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUpdateManyWithWhereWithoutFinanceContactInput> = z.object({
  where: z.lazy(() => CustomerScalarWhereInputSchema),
  data: z.union([ z.lazy(() => CustomerUpdateManyMutationInputSchema),z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactInputSchema) ]),
}).strict();

export const UserCreateWithoutPermissionsInputSchema: z.ZodType<Prisma.UserCreateWithoutPermissionsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutPermissionsInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutPermissionsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutPermissionsInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutPermissionsInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedCreateWithoutPermissionsInputSchema) ]),
}).strict();

export const UserUpsertWithoutPermissionsInputSchema: z.ZodType<Prisma.UserUpsertWithoutPermissionsInput> = z.object({
  update: z.union([ z.lazy(() => UserUpdateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPermissionsInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedCreateWithoutPermissionsInputSchema) ]),
  where: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const UserUpdateToOneWithWhereWithoutPermissionsInputSchema: z.ZodType<Prisma.UserUpdateToOneWithWhereWithoutPermissionsInput> = z.object({
  where: z.lazy(() => UserWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => UserUpdateWithoutPermissionsInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPermissionsInputSchema) ]),
}).strict();

export const UserUpdateWithoutPermissionsInputSchema: z.ZodType<Prisma.UserUpdateWithoutPermissionsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutPermissionsInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutPermissionsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const FBAOrderCreateWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutBoxesInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutBoxesInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutBoxesInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBoxesInputSchema) ]),
}).strict();

export const FBAOrderUpsertWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithoutBoxesInput> = z.object({
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutBoxesInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBoxesInputSchema) ]),
  where: z.lazy(() => FBAOrderWhereInputSchema).optional()
}).strict();

export const FBAOrderUpdateToOneWithWhereWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderUpdateToOneWithWhereWithoutBoxesInput> = z.object({
  where: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutBoxesInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutBoxesInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutBoxesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutBoxesInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutBoxesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderCreateWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutLogsInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutLogsInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutLogsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutLogsInputSchema) ]),
}).strict();

export const FBAOrderUpsertWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithoutLogsInput> = z.object({
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutLogsInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutLogsInputSchema) ]),
  where: z.lazy(() => FBAOrderWhereInputSchema).optional()
}).strict();

export const FBAOrderUpdateToOneWithWhereWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderUpdateToOneWithWhereWithoutLogsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutLogsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutLogsInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutLogsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const UserCreateWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserCreateWithoutFinanceCustomersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutFinanceCustomersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutFinanceCustomersInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFinanceCustomersInputSchema) ]),
}).strict();

export const TenantCreateWithoutCustomersInputSchema: z.ZodType<Prisma.TenantCreateWithoutCustomersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateWithoutCustomersInputSchema: z.ZodType<Prisma.TenantUncheckedCreateWithoutCustomersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantCreateOrConnectWithoutCustomersInputSchema: z.ZodType<Prisma.TenantCreateOrConnectWithoutCustomersInput> = z.object({
  where: z.lazy(() => TenantWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TenantCreateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutCustomersInputSchema) ]),
}).strict();

export const FBAOrderCreateWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutSenderInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutSenderInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutSenderInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema) ]),
}).strict();

export const FBAOrderCreateManySenderInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManySenderInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManySenderInputSchema),z.lazy(() => FBAOrderCreateManySenderInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FBAOrderCreateWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutCustomerInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const FBAOrderCreateManyCustomerInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyCustomerInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyCustomerInputSchema),z.lazy(() => FBAOrderCreateManyCustomerInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const PositionCreateWithoutCustomerInputSchema: z.ZodType<Prisma.PositionCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  createdAt: z.coerce.date().optional(),
  members: z.lazy(() => PositionMemberCreateNestedManyWithoutPositionInputSchema).optional()
}).strict();

export const PositionUncheckedCreateWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUncheckedCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  createdAt: z.coerce.date().optional(),
  members: z.lazy(() => PositionMemberUncheckedCreateNestedManyWithoutPositionInputSchema).optional()
}).strict();

export const PositionCreateOrConnectWithoutCustomerInputSchema: z.ZodType<Prisma.PositionCreateOrConnectWithoutCustomerInput> = z.object({
  where: z.lazy(() => PositionWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const PositionCreateManyCustomerInputEnvelopeSchema: z.ZodType<Prisma.PositionCreateManyCustomerInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PositionCreateManyCustomerInputSchema),z.lazy(() => PositionCreateManyCustomerInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const LoginLogCreateWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional()
}).strict();

export const LoginLogUncheckedCreateWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUncheckedCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional()
}).strict();

export const LoginLogCreateOrConnectWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogCreateOrConnectWithoutCustomerInput> = z.object({
  where: z.lazy(() => LoginLogWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const LoginLogCreateManyCustomerInputEnvelopeSchema: z.ZodType<Prisma.LoginLogCreateManyCustomerInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => LoginLogCreateManyCustomerInputSchema),z.lazy(() => LoginLogCreateManyCustomerInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FinanceBillCreateWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  waybills: z.lazy(() => FBAOrderCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUncheckedCreateWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateWithoutCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  waybills: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillCreateOrConnectWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillCreateOrConnectWithoutCustomerInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const FinanceBillCreateManyCustomerInputEnvelopeSchema: z.ZodType<Prisma.FinanceBillCreateManyCustomerInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FinanceBillCreateManyCustomerInputSchema),z.lazy(() => FinanceBillCreateManyCustomerInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const UserUpsertWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserUpsertWithoutFinanceCustomersInput> = z.object({
  update: z.union([ z.lazy(() => UserUpdateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFinanceCustomersInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFinanceCustomersInputSchema) ]),
  where: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const UserUpdateToOneWithWhereWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserUpdateToOneWithWhereWithoutFinanceCustomersInput> = z.object({
  where: z.lazy(() => UserWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => UserUpdateWithoutFinanceCustomersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFinanceCustomersInputSchema) ]),
}).strict();

export const UserUpdateWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserUpdateWithoutFinanceCustomersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutFinanceCustomersInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutFinanceCustomersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional()
}).strict();

export const TenantUpsertWithoutCustomersInputSchema: z.ZodType<Prisma.TenantUpsertWithoutCustomersInput> = z.object({
  update: z.union([ z.lazy(() => TenantUpdateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutCustomersInputSchema) ]),
  create: z.union([ z.lazy(() => TenantCreateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutCustomersInputSchema) ]),
  where: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const TenantUpdateToOneWithWhereWithoutCustomersInputSchema: z.ZodType<Prisma.TenantUpdateToOneWithWhereWithoutCustomersInput> = z.object({
  where: z.lazy(() => TenantWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TenantUpdateWithoutCustomersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutCustomersInputSchema) ]),
}).strict();

export const TenantUpdateWithoutCustomersInputSchema: z.ZodType<Prisma.TenantUpdateWithoutCustomersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateWithoutCustomersInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateWithoutCustomersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutSenderInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutSenderInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutSenderInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutSenderInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutSenderInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutSenderInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutSenderInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderInputSchema) ]),
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutCustomerInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutCustomerInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutCustomerInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutCustomerInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerInputSchema) ]),
}).strict();

export const PositionUpsertWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUpsertWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => PositionWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PositionUpdateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedUpdateWithoutCustomerInputSchema) ]),
  create: z.union([ z.lazy(() => PositionCreateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const PositionUpdateWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUpdateWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => PositionWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PositionUpdateWithoutCustomerInputSchema),z.lazy(() => PositionUncheckedUpdateWithoutCustomerInputSchema) ]),
}).strict();

export const PositionUpdateManyWithWhereWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUpdateManyWithWhereWithoutCustomerInput> = z.object({
  where: z.lazy(() => PositionScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PositionUpdateManyMutationInputSchema),z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerInputSchema) ]),
}).strict();

export const PositionScalarWhereInputSchema: z.ZodType<Prisma.PositionScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PositionScalarWhereInputSchema),z.lazy(() => PositionScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionScalarWhereInputSchema),z.lazy(() => PositionScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  title: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const LoginLogUpsertWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUpsertWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => LoginLogWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => LoginLogUpdateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedUpdateWithoutCustomerInputSchema) ]),
  create: z.union([ z.lazy(() => LoginLogCreateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const LoginLogUpdateWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUpdateWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => LoginLogWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => LoginLogUpdateWithoutCustomerInputSchema),z.lazy(() => LoginLogUncheckedUpdateWithoutCustomerInputSchema) ]),
}).strict();

export const LoginLogUpdateManyWithWhereWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUpdateManyWithWhereWithoutCustomerInput> = z.object({
  where: z.lazy(() => LoginLogScalarWhereInputSchema),
  data: z.union([ z.lazy(() => LoginLogUpdateManyMutationInputSchema),z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerInputSchema) ]),
}).strict();

export const LoginLogScalarWhereInputSchema: z.ZodType<Prisma.LoginLogScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => LoginLogScalarWhereInputSchema),z.lazy(() => LoginLogScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => LoginLogScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => LoginLogScalarWhereInputSchema),z.lazy(() => LoginLogScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  ip: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  device: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userAgent: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  loginAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const FinanceBillUpsertWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUpsertWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutCustomerInputSchema) ]),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutCustomerInputSchema) ]),
}).strict();

export const FinanceBillUpdateWithWhereUniqueWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithWhereUniqueWithoutCustomerInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FinanceBillUpdateWithoutCustomerInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutCustomerInputSchema) ]),
}).strict();

export const FinanceBillUpdateManyWithWhereWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUpdateManyWithWhereWithoutCustomerInput> = z.object({
  where: z.lazy(() => FinanceBillScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FinanceBillUpdateManyMutationInputSchema),z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerInputSchema) ]),
}).strict();

export const FinanceBillScalarWhereInputSchema: z.ZodType<Prisma.FinanceBillScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => FinanceBillScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => FinanceBillScalarWhereInputSchema),z.lazy(() => FinanceBillScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billNo: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  customerId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  totalAmount: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const ChannelCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const TenantCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => TenantWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TenantCreateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const CustomerCreateWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerCreateWithoutOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutOrdersInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutOrdersInputSchema) ]),
}).strict();

export const UserCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const CustomerCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const BoxCreateWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxCreateWithoutFbaOrderInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable()
}).strict();

export const BoxUncheckedCreateWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUncheckedCreateWithoutFbaOrderInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable()
}).strict();

export const BoxCreateOrConnectWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxCreateOrConnectWithoutFbaOrderInput> = z.object({
  where: z.lazy(() => BoxWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema) ]),
}).strict();

export const BoxCreateManyFbaOrderInputEnvelopeSchema: z.ZodType<Prisma.BoxCreateManyFbaOrderInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => BoxCreateManyFbaOrderInputSchema),z.lazy(() => BoxCreateManyFbaOrderInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const WaybillRuleCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelUncheckedCreateNestedOneWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => WaybillRuleWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const ShipmentLogCreateWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogCreateWithoutShipmentInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date()
}).strict();

export const ShipmentLogUncheckedCreateWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedCreateWithoutShipmentInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date()
}).strict();

export const ShipmentLogCreateOrConnectWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogCreateOrConnectWithoutShipmentInput> = z.object({
  where: z.lazy(() => ShipmentLogWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema) ]),
}).strict();

export const ShipmentLogCreateManyShipmentInputEnvelopeSchema: z.ZodType<Prisma.ShipmentLogCreateManyShipmentInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => ShipmentLogCreateManyShipmentInputSchema),z.lazy(() => ShipmentLogCreateManyShipmentInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CarrierCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channels: z.lazy(() => ChannelCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierUncheckedCreateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierUncheckedCreateWithoutFbaOrdersInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  channels: z.lazy(() => ChannelUncheckedCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierCreateOrConnectWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierCreateOrConnectWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => CarrierWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CarrierCreateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const AttachmentCreateWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentCreateWithoutWaybillInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string()
}).strict();

export const AttachmentUncheckedCreateWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUncheckedCreateWithoutWaybillInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string()
}).strict();

export const AttachmentCreateOrConnectWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentCreateOrConnectWithoutWaybillInput> = z.object({
  where: z.lazy(() => AttachmentWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema) ]),
}).strict();

export const AttachmentCreateManyWaybillInputEnvelopeSchema: z.ZodType<Prisma.AttachmentCreateManyWaybillInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => AttachmentCreateManyWaybillInputSchema),z.lazy(() => AttachmentCreateManyWaybillInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FinanceBillCreateWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillCreateWithoutWaybillsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutBillsInputSchema),
  logs: z.lazy(() => BillLogCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUncheckedCreateWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateWithoutWaybillsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  logs: z.lazy(() => BillLogUncheckedCreateNestedManyWithoutBillInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillCreateOrConnectWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillCreateOrConnectWithoutWaybillsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema) ]),
}).strict();

export const ChannelUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => ChannelUpdateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => ChannelWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutFbaOrdersInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const ChannelUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const TenantUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => TenantUpdateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => TenantCreateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const TenantUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => TenantWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TenantUpdateWithoutFbaOrdersInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const TenantUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const CustomerUpsertWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerUpsertWithoutOrdersInput> = z.object({
  update: z.union([ z.lazy(() => CustomerUpdateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutOrdersInputSchema) ]),
  where: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerUpdateToOneWithWhereWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerUpdateToOneWithWhereWithoutOrdersInput> = z.object({
  where: z.lazy(() => CustomerWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutOrdersInputSchema) ]),
}).strict();

export const CustomerUpdateWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutOrdersInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const UserUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => UserUpdateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const UserUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => UserWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => UserUpdateWithoutFbaOrdersInputSchema),z.lazy(() => UserUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const UserUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const CustomerUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => CustomerUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => CustomerWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const CustomerUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const BoxUpsertWithWhereUniqueWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUpsertWithWhereUniqueWithoutFbaOrderInput> = z.object({
  where: z.lazy(() => BoxWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => BoxUpdateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedUpdateWithoutFbaOrderInputSchema) ]),
  create: z.union([ z.lazy(() => BoxCreateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedCreateWithoutFbaOrderInputSchema) ]),
}).strict();

export const BoxUpdateWithWhereUniqueWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUpdateWithWhereUniqueWithoutFbaOrderInput> = z.object({
  where: z.lazy(() => BoxWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => BoxUpdateWithoutFbaOrderInputSchema),z.lazy(() => BoxUncheckedUpdateWithoutFbaOrderInputSchema) ]),
}).strict();

export const BoxUpdateManyWithWhereWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUpdateManyWithWhereWithoutFbaOrderInput> = z.object({
  where: z.lazy(() => BoxScalarWhereInputSchema),
  data: z.union([ z.lazy(() => BoxUpdateManyMutationInputSchema),z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderInputSchema) ]),
}).strict();

export const BoxScalarWhereInputSchema: z.ZodType<Prisma.BoxScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BoxScalarWhereInputSchema),z.lazy(() => BoxScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BoxScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BoxScalarWhereInputSchema),z.lazy(() => BoxScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fullCode: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  weight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  length: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  width: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  height: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  hasBattery: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  productNameEn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  productNameCn: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  declaredValue: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  declaredQuantity: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
  material: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  hsCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  usage: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  brand: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  model: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  asin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fnsku: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  fbaOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  tradOrderId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const WaybillRuleUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => WaybillRuleUpdateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => WaybillRuleWhereInputSchema).optional()
}).strict();

export const WaybillRuleUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => WaybillRuleWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => WaybillRuleUpdateWithoutFbaOrdersInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const WaybillRuleUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUncheckedUpdateOneWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const ShipmentLogUpsertWithWhereUniqueWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUpsertWithWhereUniqueWithoutShipmentInput> = z.object({
  where: z.lazy(() => ShipmentLogWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => ShipmentLogUpdateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedUpdateWithoutShipmentInputSchema) ]),
  create: z.union([ z.lazy(() => ShipmentLogCreateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedCreateWithoutShipmentInputSchema) ]),
}).strict();

export const ShipmentLogUpdateWithWhereUniqueWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUpdateWithWhereUniqueWithoutShipmentInput> = z.object({
  where: z.lazy(() => ShipmentLogWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => ShipmentLogUpdateWithoutShipmentInputSchema),z.lazy(() => ShipmentLogUncheckedUpdateWithoutShipmentInputSchema) ]),
}).strict();

export const ShipmentLogUpdateManyWithWhereWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUpdateManyWithWhereWithoutShipmentInput> = z.object({
  where: z.lazy(() => ShipmentLogScalarWhereInputSchema),
  data: z.union([ z.lazy(() => ShipmentLogUpdateManyMutationInputSchema),z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentInputSchema) ]),
}).strict();

export const ShipmentLogScalarWhereInputSchema: z.ZodType<Prisma.ShipmentLogScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ShipmentLogScalarWhereInputSchema),z.lazy(() => ShipmentLogScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ShipmentLogScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ShipmentLogScalarWhereInputSchema),z.lazy(() => ShipmentLogScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  shipmentId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  location: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const CarrierUpsertWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierUpsertWithoutFbaOrdersInput> = z.object({
  update: z.union([ z.lazy(() => CarrierUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
  create: z.union([ z.lazy(() => CarrierCreateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutFbaOrdersInputSchema) ]),
  where: z.lazy(() => CarrierWhereInputSchema).optional()
}).strict();

export const CarrierUpdateToOneWithWhereWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierUpdateToOneWithWhereWithoutFbaOrdersInput> = z.object({
  where: z.lazy(() => CarrierWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CarrierUpdateWithoutFbaOrdersInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutFbaOrdersInputSchema) ]),
}).strict();

export const CarrierUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channels: z.lazy(() => ChannelUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const CarrierUncheckedUpdateWithoutFbaOrdersInputSchema: z.ZodType<Prisma.CarrierUncheckedUpdateWithoutFbaOrdersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channels: z.lazy(() => ChannelUncheckedUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const AttachmentUpsertWithWhereUniqueWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUpsertWithWhereUniqueWithoutWaybillInput> = z.object({
  where: z.lazy(() => AttachmentWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => AttachmentUpdateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedUpdateWithoutWaybillInputSchema) ]),
  create: z.union([ z.lazy(() => AttachmentCreateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedCreateWithoutWaybillInputSchema) ]),
}).strict();

export const AttachmentUpdateWithWhereUniqueWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUpdateWithWhereUniqueWithoutWaybillInput> = z.object({
  where: z.lazy(() => AttachmentWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => AttachmentUpdateWithoutWaybillInputSchema),z.lazy(() => AttachmentUncheckedUpdateWithoutWaybillInputSchema) ]),
}).strict();

export const AttachmentUpdateManyWithWhereWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUpdateManyWithWhereWithoutWaybillInput> = z.object({
  where: z.lazy(() => AttachmentScalarWhereInputSchema),
  data: z.union([ z.lazy(() => AttachmentUpdateManyMutationInputSchema),z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillInputSchema) ]),
}).strict();

export const AttachmentScalarWhereInputSchema: z.ZodType<Prisma.AttachmentScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => AttachmentScalarWhereInputSchema),z.lazy(() => AttachmentScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => AttachmentScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => AttachmentScalarWhereInputSchema),z.lazy(() => AttachmentScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  path: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  waybillId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
}).strict();

export const FinanceBillUpsertWithWhereUniqueWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUpsertWithWhereUniqueWithoutWaybillsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FinanceBillUpdateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutWaybillsInputSchema) ]),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutWaybillsInputSchema) ]),
}).strict();

export const FinanceBillUpdateWithWhereUniqueWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithWhereUniqueWithoutWaybillsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FinanceBillUpdateWithoutWaybillsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutWaybillsInputSchema) ]),
}).strict();

export const FinanceBillUpdateManyWithWhereWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUpdateManyWithWhereWithoutWaybillsInput> = z.object({
  where: z.lazy(() => FinanceBillScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FinanceBillUpdateManyMutationInputSchema),z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsInputSchema) ]),
}).strict();

export const FBAOrderCreateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutAttachmentsInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutAttachmentsInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutAttachmentsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutAttachmentsInputSchema) ]),
}).strict();

export const FBAOrderUpsertWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithoutAttachmentsInput> = z.object({
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutAttachmentsInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutAttachmentsInputSchema) ]),
  where: z.lazy(() => FBAOrderWhereInputSchema).optional()
}).strict();

export const FBAOrderUpdateToOneWithWhereWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderUpdateToOneWithWhereWithoutAttachmentsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutAttachmentsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutAttachmentsInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutAttachmentsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutAttachmentsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const ChannelCreateWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelCreateWithoutCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutCarrierInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema) ]),
}).strict();

export const ChannelCreateManyCarrierInputEnvelopeSchema: z.ZodType<Prisma.ChannelCreateManyCarrierInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => ChannelCreateManyCarrierInputSchema),z.lazy(() => ChannelCreateManyCarrierInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FBAOrderCreateWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutCarrierInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema) ]),
}).strict();

export const FBAOrderCreateManyCarrierInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyCarrierInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyCarrierInputSchema),z.lazy(() => FBAOrderCreateManyCarrierInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ChannelUpsertWithWhereUniqueWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUpsertWithWhereUniqueWithoutCarrierInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => ChannelUpdateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutCarrierInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutCarrierInputSchema) ]),
}).strict();

export const ChannelUpdateWithWhereUniqueWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUpdateWithWhereUniqueWithoutCarrierInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutCarrierInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutCarrierInputSchema) ]),
}).strict();

export const ChannelUpdateManyWithWhereWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUpdateManyWithWhereWithoutCarrierInput> = z.object({
  where: z.lazy(() => ChannelScalarWhereInputSchema),
  data: z.union([ z.lazy(() => ChannelUpdateManyMutationInputSchema),z.lazy(() => ChannelUncheckedUpdateManyWithoutCarrierInputSchema) ]),
}).strict();

export const ChannelScalarWhereInputSchema: z.ZodType<Prisma.ChannelScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => ChannelScalarWhereInputSchema),z.lazy(() => ChannelScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => ChannelScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => ChannelScalarWhereInputSchema),z.lazy(() => ChannelScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  code: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  type: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  country: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  warehouse: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  origin: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  decimal: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  method: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  rounding: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  compareMode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  volRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  cubeRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  splitRatio: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeMethod: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  minCharge: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  ticketPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  boxPrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  sizePrecision: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  maxPieces: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  minDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  maxDeclareValue: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  aging: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  waybillRuleId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  labelCode: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  assignedUser: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  userLevel: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  declareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sender: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  showWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireWeight: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireSize: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePhone: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEmail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requirePackingList: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifySalesLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  verifyImageLink: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVAT: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireVATFiling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  requireEORI: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlBilling: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  controlReceivingFee: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  promptUnderpayment: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  modifyVolRatio: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showSupplierData: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  orderBySKULibrary: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noAutoCancelAPIFail: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowChannelChange: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowEdit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowTrackingEntry: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  allowLabelUpload: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  hideCarrier: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  refundOnReturn: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  noRefundOnCancel: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  showInWMS: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  enableCOD: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  restrictWarehouseCode: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  roundBeforeSplit: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  chargeWeight: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargeVolume: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  chargePrice: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  unitType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  extraFeeRules: z.lazy(() => JsonNullableFilterSchema).optional(),
  carrierId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutCarrierInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutCarrierInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutCarrierInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutCarrierInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutCarrierInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutCarrierInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutCarrierInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCarrierInputSchema) ]),
}).strict();

export const WaybillRuleCreateWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedCreateWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  pattern: z.string(),
  channelId: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutWaybillRuleInputSchema).optional()
}).strict();

export const WaybillRuleCreateOrConnectWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleCreateOrConnectWithoutChannelInput> = z.object({
  where: z.lazy(() => WaybillRuleWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const RateRuleCreateWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int()
}).strict();

export const RateRuleUncheckedCreateWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUncheckedCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int()
}).strict();

export const RateRuleCreateOrConnectWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleCreateOrConnectWithoutChannelInput> = z.object({
  where: z.lazy(() => RateRuleWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const RateRuleCreateManyChannelInputEnvelopeSchema: z.ZodType<Prisma.RateRuleCreateManyChannelInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => RateRuleCreateManyChannelInputSchema),z.lazy(() => RateRuleCreateManyChannelInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const FBAOrderCreateWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutChannelInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const FBAOrderCreateManyChannelInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyChannelInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyChannelInputSchema),z.lazy(() => FBAOrderCreateManyChannelInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CarrierCreateWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierCreateWithoutChannelsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierUncheckedCreateWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierUncheckedCreateWithoutChannelsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  website: z.string().optional().nullable(),
  logoUrl: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  region: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCarrierInputSchema).optional()
}).strict();

export const CarrierCreateOrConnectWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierCreateOrConnectWithoutChannelsInput> = z.object({
  where: z.lazy(() => CarrierWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CarrierCreateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutChannelsInputSchema) ]),
}).strict();

export const TransportPriceCreateWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingCreateNestedManyWithoutTransportPriceInputSchema).optional()
}).strict();

export const TransportPriceUncheckedCreateWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUncheckedCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingUncheckedCreateNestedManyWithoutTransportPriceInputSchema).optional()
}).strict();

export const TransportPriceCreateOrConnectWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceCreateOrConnectWithoutChannelInput> = z.object({
  where: z.lazy(() => TransportPriceWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const TransportPriceCreateManyChannelInputEnvelopeSchema: z.ZodType<Prisma.TransportPriceCreateManyChannelInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => TransportPriceCreateManyChannelInputSchema),z.lazy(() => TransportPriceCreateManyChannelInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const PriceCreateWithoutChannelInputSchema: z.ZodType<Prisma.PriceCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingCreateNestedManyWithoutPriceInputSchema).optional()
}).strict();

export const PriceUncheckedCreateWithoutChannelInputSchema: z.ZodType<Prisma.PriceUncheckedCreateWithoutChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  settings: z.lazy(() => PriceSettingUncheckedCreateNestedManyWithoutPriceInputSchema).optional()
}).strict();

export const PriceCreateOrConnectWithoutChannelInputSchema: z.ZodType<Prisma.PriceCreateOrConnectWithoutChannelInput> = z.object({
  where: z.lazy(() => PriceWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const PriceCreateManyChannelInputEnvelopeSchema: z.ZodType<Prisma.PriceCreateManyChannelInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PriceCreateManyChannelInputSchema),z.lazy(() => PriceCreateManyChannelInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const WaybillRuleUpsertWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleUpsertWithoutChannelInput> = z.object({
  update: z.union([ z.lazy(() => WaybillRuleUpdateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutChannelInputSchema) ]),
  create: z.union([ z.lazy(() => WaybillRuleCreateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedCreateWithoutChannelInputSchema) ]),
  where: z.lazy(() => WaybillRuleWhereInputSchema).optional()
}).strict();

export const WaybillRuleUpdateToOneWithWhereWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleUpdateToOneWithWhereWithoutChannelInput> = z.object({
  where: z.lazy(() => WaybillRuleWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => WaybillRuleUpdateWithoutChannelInputSchema),z.lazy(() => WaybillRuleUncheckedUpdateWithoutChannelInputSchema) ]),
}).strict();

export const WaybillRuleUpdateWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const WaybillRuleUncheckedUpdateWithoutChannelInputSchema: z.ZodType<Prisma.WaybillRuleUncheckedUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  pattern: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutWaybillRuleNestedInputSchema).optional()
}).strict();

export const RateRuleUpsertWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUpsertWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => RateRuleWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => RateRuleUpdateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedUpdateWithoutChannelInputSchema) ]),
  create: z.union([ z.lazy(() => RateRuleCreateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const RateRuleUpdateWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUpdateWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => RateRuleWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => RateRuleUpdateWithoutChannelInputSchema),z.lazy(() => RateRuleUncheckedUpdateWithoutChannelInputSchema) ]),
}).strict();

export const RateRuleUpdateManyWithWhereWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUpdateManyWithWhereWithoutChannelInput> = z.object({
  where: z.lazy(() => RateRuleScalarWhereInputSchema),
  data: z.union([ z.lazy(() => RateRuleUpdateManyMutationInputSchema),z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelInputSchema) ]),
}).strict();

export const RateRuleScalarWhereInputSchema: z.ZodType<Prisma.RateRuleScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => RateRuleScalarWhereInputSchema),z.lazy(() => RateRuleScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => RateRuleScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => RateRuleScalarWhereInputSchema),z.lazy(() => RateRuleScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  minWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  maxWeight: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  weightType: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  divisor: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  sideRule: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  extraFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  baseRate: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  taxRate: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  otherFee: z.union([ z.lazy(() => FloatNullableFilterSchema),z.number() ]).optional().nullable(),
  priority: z.union([ z.lazy(() => IntFilterSchema),z.number() ]).optional(),
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutChannelInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutChannelInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutChannelInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutChannelInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelInputSchema) ]),
}).strict();

export const CarrierUpsertWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierUpsertWithoutChannelsInput> = z.object({
  update: z.union([ z.lazy(() => CarrierUpdateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutChannelsInputSchema) ]),
  create: z.union([ z.lazy(() => CarrierCreateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedCreateWithoutChannelsInputSchema) ]),
  where: z.lazy(() => CarrierWhereInputSchema).optional()
}).strict();

export const CarrierUpdateToOneWithWhereWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierUpdateToOneWithWhereWithoutChannelsInput> = z.object({
  where: z.lazy(() => CarrierWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CarrierUpdateWithoutChannelsInputSchema),z.lazy(() => CarrierUncheckedUpdateWithoutChannelsInputSchema) ]),
}).strict();

export const CarrierUpdateWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierUpdateWithoutChannelsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const CarrierUncheckedUpdateWithoutChannelsInputSchema: z.ZodType<Prisma.CarrierUncheckedUpdateWithoutChannelsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  website: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  logoUrl: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  description: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  region: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCarrierNestedInputSchema).optional()
}).strict();

export const TransportPriceUpsertWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUpsertWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => TransportPriceWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => TransportPriceUpdateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedUpdateWithoutChannelInputSchema) ]),
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const TransportPriceUpdateWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUpdateWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => TransportPriceWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => TransportPriceUpdateWithoutChannelInputSchema),z.lazy(() => TransportPriceUncheckedUpdateWithoutChannelInputSchema) ]),
}).strict();

export const TransportPriceUpdateManyWithWhereWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUpdateManyWithWhereWithoutChannelInput> = z.object({
  where: z.lazy(() => TransportPriceScalarWhereInputSchema),
  data: z.union([ z.lazy(() => TransportPriceUpdateManyMutationInputSchema),z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelInputSchema) ]),
}).strict();

export const TransportPriceScalarWhereInputSchema: z.ZodType<Prisma.TransportPriceScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => TransportPriceScalarWhereInputSchema),z.lazy(() => TransportPriceScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => TransportPriceScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => TransportPriceScalarWhereInputSchema),z.lazy(() => TransportPriceScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  region: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  service: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PriceUpsertWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.PriceUpsertWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => PriceWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PriceUpdateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedUpdateWithoutChannelInputSchema) ]),
  create: z.union([ z.lazy(() => PriceCreateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedCreateWithoutChannelInputSchema) ]),
}).strict();

export const PriceUpdateWithWhereUniqueWithoutChannelInputSchema: z.ZodType<Prisma.PriceUpdateWithWhereUniqueWithoutChannelInput> = z.object({
  where: z.lazy(() => PriceWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PriceUpdateWithoutChannelInputSchema),z.lazy(() => PriceUncheckedUpdateWithoutChannelInputSchema) ]),
}).strict();

export const PriceUpdateManyWithWhereWithoutChannelInputSchema: z.ZodType<Prisma.PriceUpdateManyWithWhereWithoutChannelInput> = z.object({
  where: z.lazy(() => PriceScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PriceUpdateManyMutationInputSchema),z.lazy(() => PriceUncheckedUpdateManyWithoutChannelInputSchema) ]),
}).strict();

export const PriceScalarWhereInputSchema: z.ZodType<Prisma.PriceScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PriceScalarWhereInputSchema),z.lazy(() => PriceScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceScalarWhereInputSchema),z.lazy(() => PriceScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  channelId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  currency: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const ChannelCreateWithoutRatesInputSchema: z.ZodType<Prisma.ChannelCreateWithoutRatesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutRatesInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutRatesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutRatesInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutRatesInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutRatesInputSchema) ]),
}).strict();

export const ChannelUpsertWithoutRatesInputSchema: z.ZodType<Prisma.ChannelUpsertWithoutRatesInput> = z.object({
  update: z.union([ z.lazy(() => ChannelUpdateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutRatesInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutRatesInputSchema) ]),
  where: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelUpdateToOneWithWhereWithoutRatesInputSchema: z.ZodType<Prisma.ChannelUpdateToOneWithWhereWithoutRatesInput> = z.object({
  where: z.lazy(() => ChannelWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutRatesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutRatesInputSchema) ]),
}).strict();

export const ChannelUpdateWithoutRatesInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutRatesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutRatesInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutRatesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelCreateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelCreateWithoutWaybillRuleInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutWaybillRuleInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]),
}).strict();

export const FBAOrderCreateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutWaybillRuleInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutWaybillRuleInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutWaybillsInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema) ]),
}).strict();

export const FBAOrderCreateManyWaybillRuleInputEnvelopeSchema: z.ZodType<Prisma.FBAOrderCreateManyWaybillRuleInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => FBAOrderCreateManyWaybillRuleInputSchema),z.lazy(() => FBAOrderCreateManyWaybillRuleInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ChannelUpsertWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUpsertWithoutWaybillRuleInput> = z.object({
  update: z.union([ z.lazy(() => ChannelUpdateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutWaybillRuleInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutWaybillRuleInputSchema) ]),
  where: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelUpdateToOneWithWhereWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUpdateToOneWithWhereWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => ChannelWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutWaybillRuleInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutWaybillRuleInputSchema) ]),
}).strict();

export const ChannelUpdateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutWaybillRuleInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutWaybillRuleInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutWaybillRuleInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutWaybillRuleInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutWaybillRuleInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutWaybillRuleInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutWaybillRuleInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutWaybillRuleInputSchema) ]),
}).strict();

export const TenantCreateWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantCreateWithoutReceivablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantUncheckedCreateWithoutReceivablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantCreateOrConnectWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantCreateOrConnectWithoutReceivablesInput> = z.object({
  where: z.lazy(() => TenantWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TenantCreateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutReceivablesInputSchema) ]),
}).strict();

export const UserCreateWithoutReceivablesInputSchema: z.ZodType<Prisma.UserCreateWithoutReceivablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  payables: z.lazy(() => PayableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutReceivablesInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutReceivablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutReceivablesInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutReceivablesInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutReceivablesInputSchema) ]),
}).strict();

export const TenantUpsertWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantUpsertWithoutReceivablesInput> = z.object({
  update: z.union([ z.lazy(() => TenantUpdateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutReceivablesInputSchema) ]),
  create: z.union([ z.lazy(() => TenantCreateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutReceivablesInputSchema) ]),
  where: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const TenantUpdateToOneWithWhereWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantUpdateToOneWithWhereWithoutReceivablesInput> = z.object({
  where: z.lazy(() => TenantWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TenantUpdateWithoutReceivablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutReceivablesInputSchema) ]),
}).strict();

export const TenantUpdateWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantUpdateWithoutReceivablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateWithoutReceivablesInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateWithoutReceivablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const UserUpsertWithoutReceivablesInputSchema: z.ZodType<Prisma.UserUpsertWithoutReceivablesInput> = z.object({
  update: z.union([ z.lazy(() => UserUpdateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutReceivablesInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutReceivablesInputSchema) ]),
  where: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const UserUpdateToOneWithWhereWithoutReceivablesInputSchema: z.ZodType<Prisma.UserUpdateToOneWithWhereWithoutReceivablesInput> = z.object({
  where: z.lazy(() => UserWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => UserUpdateWithoutReceivablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutReceivablesInputSchema) ]),
}).strict();

export const UserUpdateWithoutReceivablesInputSchema: z.ZodType<Prisma.UserUpdateWithoutReceivablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutReceivablesInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutReceivablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const TenantCreateWithoutPayablesInputSchema: z.ZodType<Prisma.TenantCreateWithoutPayablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantUncheckedCreateWithoutPayablesInputSchema: z.ZodType<Prisma.TenantUncheckedCreateWithoutPayablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  createdAt: z.coerce.date().optional(),
  users: z.lazy(() => UserUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutTenantInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutTenantInputSchema).optional()
}).strict();

export const TenantCreateOrConnectWithoutPayablesInputSchema: z.ZodType<Prisma.TenantCreateOrConnectWithoutPayablesInput> = z.object({
  where: z.lazy(() => TenantWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TenantCreateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutPayablesInputSchema) ]),
}).strict();

export const UserCreateWithoutPayablesInputSchema: z.ZodType<Prisma.UserCreateWithoutPayablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutUsersInputSchema),
  permissions: z.lazy(() => PermissionCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserUncheckedCreateWithoutPayablesInputSchema: z.ZodType<Prisma.UserUncheckedCreateWithoutPayablesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional(),
  permissions: z.lazy(() => PermissionUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutUserInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedCreateNestedManyWithoutCreatedByInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedCreateNestedManyWithoutFinanceContactInputSchema).optional()
}).strict();

export const UserCreateOrConnectWithoutPayablesInputSchema: z.ZodType<Prisma.UserCreateOrConnectWithoutPayablesInput> = z.object({
  where: z.lazy(() => UserWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => UserCreateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutPayablesInputSchema) ]),
}).strict();

export const TenantUpsertWithoutPayablesInputSchema: z.ZodType<Prisma.TenantUpsertWithoutPayablesInput> = z.object({
  update: z.union([ z.lazy(() => TenantUpdateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutPayablesInputSchema) ]),
  create: z.union([ z.lazy(() => TenantCreateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedCreateWithoutPayablesInputSchema) ]),
  where: z.lazy(() => TenantWhereInputSchema).optional()
}).strict();

export const TenantUpdateToOneWithWhereWithoutPayablesInputSchema: z.ZodType<Prisma.TenantUpdateToOneWithWhereWithoutPayablesInput> = z.object({
  where: z.lazy(() => TenantWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TenantUpdateWithoutPayablesInputSchema),z.lazy(() => TenantUncheckedUpdateWithoutPayablesInputSchema) ]),
}).strict();

export const TenantUpdateWithoutPayablesInputSchema: z.ZodType<Prisma.TenantUpdateWithoutPayablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const TenantUncheckedUpdateWithoutPayablesInputSchema: z.ZodType<Prisma.TenantUncheckedUpdateWithoutPayablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  users: z.lazy(() => UserUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutTenantNestedInputSchema).optional(),
  customers: z.lazy(() => CustomerUncheckedUpdateManyWithoutTenantNestedInputSchema).optional()
}).strict();

export const UserUpsertWithoutPayablesInputSchema: z.ZodType<Prisma.UserUpsertWithoutPayablesInput> = z.object({
  update: z.union([ z.lazy(() => UserUpdateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPayablesInputSchema) ]),
  create: z.union([ z.lazy(() => UserCreateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedCreateWithoutPayablesInputSchema) ]),
  where: z.lazy(() => UserWhereInputSchema).optional()
}).strict();

export const UserUpdateToOneWithWhereWithoutPayablesInputSchema: z.ZodType<Prisma.UserUpdateToOneWithWhereWithoutPayablesInput> = z.object({
  where: z.lazy(() => UserWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => UserUpdateWithoutPayablesInputSchema),z.lazy(() => UserUncheckedUpdateWithoutPayablesInputSchema) ]),
}).strict();

export const UserUpdateWithoutPayablesInputSchema: z.ZodType<Prisma.UserUpdateWithoutPayablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutUsersNestedInputSchema).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutPayablesInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutPayablesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const ChannelCreateWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelCreateWithoutTransportPricesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  prices: z.lazy(() => PriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutTransportPricesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutTransportPricesInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutTransportPricesInputSchema) ]),
}).strict();

export const PriceSettingCreateWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateWithoutTransportPriceInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  price: z.lazy(() => PriceCreateNestedOneWithoutSettingsInputSchema)
}).strict();

export const PriceSettingUncheckedCreateWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedCreateWithoutTransportPriceInput> = z.object({
  id: z.string().uuid().optional(),
  priceId: z.string(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PriceSettingCreateOrConnectWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateOrConnectWithoutTransportPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema) ]),
}).strict();

export const PriceSettingCreateManyTransportPriceInputEnvelopeSchema: z.ZodType<Prisma.PriceSettingCreateManyTransportPriceInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PriceSettingCreateManyTransportPriceInputSchema),z.lazy(() => PriceSettingCreateManyTransportPriceInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ChannelUpsertWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelUpsertWithoutTransportPricesInput> = z.object({
  update: z.union([ z.lazy(() => ChannelUpdateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutTransportPricesInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutTransportPricesInputSchema) ]),
  where: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelUpdateToOneWithWhereWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelUpdateToOneWithWhereWithoutTransportPricesInput> = z.object({
  where: z.lazy(() => ChannelWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutTransportPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutTransportPricesInputSchema) ]),
}).strict();

export const ChannelUpdateWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutTransportPricesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutTransportPricesInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutTransportPricesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUpsertWithWhereUniqueWithoutTransportPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedUpdateWithoutTransportPriceInputSchema) ]),
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutTransportPriceInputSchema) ]),
}).strict();

export const PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateWithWhereUniqueWithoutTransportPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PriceSettingUpdateWithoutTransportPriceInputSchema),z.lazy(() => PriceSettingUncheckedUpdateWithoutTransportPriceInputSchema) ]),
}).strict();

export const PriceSettingUpdateManyWithWhereWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateManyWithWhereWithoutTransportPriceInput> = z.object({
  where: z.lazy(() => PriceSettingScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PriceSettingUpdateManyMutationInputSchema),z.lazy(() => PriceSettingUncheckedUpdateManyWithoutTransportPriceInputSchema) ]),
}).strict();

export const PriceSettingScalarWhereInputSchema: z.ZodType<Prisma.PriceSettingScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PriceSettingScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PriceSettingScalarWhereInputSchema),z.lazy(() => PriceSettingScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  priceId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  unit: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  value: z.union([ z.lazy(() => FloatFilterSchema),z.number() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
  transportPriceId: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
}).strict();

export const PriceCreateWithoutSettingsInputSchema: z.ZodType<Prisma.PriceCreateWithoutSettingsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutPricesInputSchema)
}).strict();

export const PriceUncheckedCreateWithoutSettingsInputSchema: z.ZodType<Prisma.PriceUncheckedCreateWithoutSettingsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  channelId: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PriceCreateOrConnectWithoutSettingsInputSchema: z.ZodType<Prisma.PriceCreateOrConnectWithoutSettingsInput> = z.object({
  where: z.lazy(() => PriceWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PriceCreateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedCreateWithoutSettingsInputSchema) ]),
}).strict();

export const TransportPriceCreateWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceCreateWithoutSettingsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutTransportPricesInputSchema)
}).strict();

export const TransportPriceUncheckedCreateWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceUncheckedCreateWithoutSettingsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  channelId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const TransportPriceCreateOrConnectWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceCreateOrConnectWithoutSettingsInput> = z.object({
  where: z.lazy(() => TransportPriceWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutSettingsInputSchema) ]),
}).strict();

export const PriceUpsertWithoutSettingsInputSchema: z.ZodType<Prisma.PriceUpsertWithoutSettingsInput> = z.object({
  update: z.union([ z.lazy(() => PriceUpdateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedUpdateWithoutSettingsInputSchema) ]),
  create: z.union([ z.lazy(() => PriceCreateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedCreateWithoutSettingsInputSchema) ]),
  where: z.lazy(() => PriceWhereInputSchema).optional()
}).strict();

export const PriceUpdateToOneWithWhereWithoutSettingsInputSchema: z.ZodType<Prisma.PriceUpdateToOneWithWhereWithoutSettingsInput> = z.object({
  where: z.lazy(() => PriceWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => PriceUpdateWithoutSettingsInputSchema),z.lazy(() => PriceUncheckedUpdateWithoutSettingsInputSchema) ]),
}).strict();

export const PriceUpdateWithoutSettingsInputSchema: z.ZodType<Prisma.PriceUpdateWithoutSettingsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutPricesNestedInputSchema).optional()
}).strict();

export const PriceUncheckedUpdateWithoutSettingsInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateWithoutSettingsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const TransportPriceUpsertWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceUpsertWithoutSettingsInput> = z.object({
  update: z.union([ z.lazy(() => TransportPriceUpdateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedUpdateWithoutSettingsInputSchema) ]),
  create: z.union([ z.lazy(() => TransportPriceCreateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedCreateWithoutSettingsInputSchema) ]),
  where: z.lazy(() => TransportPriceWhereInputSchema).optional()
}).strict();

export const TransportPriceUpdateToOneWithWhereWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceUpdateToOneWithWhereWithoutSettingsInput> = z.object({
  where: z.lazy(() => TransportPriceWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => TransportPriceUpdateWithoutSettingsInputSchema),z.lazy(() => TransportPriceUncheckedUpdateWithoutSettingsInputSchema) ]),
}).strict();

export const TransportPriceUpdateWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceUpdateWithoutSettingsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutTransportPricesNestedInputSchema).optional()
}).strict();

export const TransportPriceUncheckedUpdateWithoutSettingsInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateWithoutSettingsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceSettingCreateWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateWithoutPriceInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  transportPrice: z.lazy(() => TransportPriceCreateNestedOneWithoutSettingsInputSchema).optional()
}).strict();

export const PriceSettingUncheckedCreateWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedCreateWithoutPriceInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  transportPriceId: z.string().optional().nullable()
}).strict();

export const PriceSettingCreateOrConnectWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateOrConnectWithoutPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema) ]),
}).strict();

export const PriceSettingCreateManyPriceInputEnvelopeSchema: z.ZodType<Prisma.PriceSettingCreateManyPriceInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PriceSettingCreateManyPriceInputSchema),z.lazy(() => PriceSettingCreateManyPriceInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const ChannelCreateWithoutPricesInputSchema: z.ZodType<Prisma.ChannelCreateWithoutPricesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutChannelInputSchema).optional(),
  rates: z.lazy(() => RateRuleCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutChannelInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutChannelsInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelUncheckedCreateWithoutPricesInputSchema: z.ZodType<Prisma.ChannelUncheckedCreateWithoutPricesInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.string().optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutChannelInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedCreateNestedManyWithoutChannelInputSchema).optional()
}).strict();

export const ChannelCreateOrConnectWithoutPricesInputSchema: z.ZodType<Prisma.ChannelCreateOrConnectWithoutPricesInput> = z.object({
  where: z.lazy(() => ChannelWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => ChannelCreateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutPricesInputSchema) ]),
}).strict();

export const PriceSettingUpsertWithWhereUniqueWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUpsertWithWhereUniqueWithoutPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PriceSettingUpdateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedUpdateWithoutPriceInputSchema) ]),
  create: z.union([ z.lazy(() => PriceSettingCreateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedCreateWithoutPriceInputSchema) ]),
}).strict();

export const PriceSettingUpdateWithWhereUniqueWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateWithWhereUniqueWithoutPriceInput> = z.object({
  where: z.lazy(() => PriceSettingWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PriceSettingUpdateWithoutPriceInputSchema),z.lazy(() => PriceSettingUncheckedUpdateWithoutPriceInputSchema) ]),
}).strict();

export const PriceSettingUpdateManyWithWhereWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateManyWithWhereWithoutPriceInput> = z.object({
  where: z.lazy(() => PriceSettingScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PriceSettingUpdateManyMutationInputSchema),z.lazy(() => PriceSettingUncheckedUpdateManyWithoutPriceInputSchema) ]),
}).strict();

export const ChannelUpsertWithoutPricesInputSchema: z.ZodType<Prisma.ChannelUpsertWithoutPricesInput> = z.object({
  update: z.union([ z.lazy(() => ChannelUpdateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutPricesInputSchema) ]),
  create: z.union([ z.lazy(() => ChannelCreateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedCreateWithoutPricesInputSchema) ]),
  where: z.lazy(() => ChannelWhereInputSchema).optional()
}).strict();

export const ChannelUpdateToOneWithWhereWithoutPricesInputSchema: z.ZodType<Prisma.ChannelUpdateToOneWithWhereWithoutPricesInput> = z.object({
  where: z.lazy(() => ChannelWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => ChannelUpdateWithoutPricesInputSchema),z.lazy(() => ChannelUncheckedUpdateWithoutPricesInputSchema) ]),
}).strict();

export const ChannelUpdateWithoutPricesInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutPricesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutChannelsNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutPricesInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutPricesInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const CustomerCreateWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerCreateWithoutPositionsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutPositionsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutPositionsInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutPositionsInputSchema) ]),
}).strict();

export const PositionMemberCreateWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberCreateWithoutPositionInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionMemberUncheckedCreateWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUncheckedCreateWithoutPositionInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionMemberCreateOrConnectWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberCreateOrConnectWithoutPositionInput> = z.object({
  where: z.lazy(() => PositionMemberWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema) ]),
}).strict();

export const PositionMemberCreateManyPositionInputEnvelopeSchema: z.ZodType<Prisma.PositionMemberCreateManyPositionInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => PositionMemberCreateManyPositionInputSchema),z.lazy(() => PositionMemberCreateManyPositionInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CustomerUpsertWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerUpsertWithoutPositionsInput> = z.object({
  update: z.union([ z.lazy(() => CustomerUpdateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutPositionsInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutPositionsInputSchema) ]),
  where: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerUpdateToOneWithWhereWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerUpdateToOneWithWhereWithoutPositionsInput> = z.object({
  where: z.lazy(() => CustomerWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutPositionsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutPositionsInputSchema) ]),
}).strict();

export const CustomerUpdateWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutPositionsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutPositionsInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutPositionsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const PositionMemberUpsertWithWhereUniqueWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUpsertWithWhereUniqueWithoutPositionInput> = z.object({
  where: z.lazy(() => PositionMemberWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => PositionMemberUpdateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedUpdateWithoutPositionInputSchema) ]),
  create: z.union([ z.lazy(() => PositionMemberCreateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedCreateWithoutPositionInputSchema) ]),
}).strict();

export const PositionMemberUpdateWithWhereUniqueWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUpdateWithWhereUniqueWithoutPositionInput> = z.object({
  where: z.lazy(() => PositionMemberWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => PositionMemberUpdateWithoutPositionInputSchema),z.lazy(() => PositionMemberUncheckedUpdateWithoutPositionInputSchema) ]),
}).strict();

export const PositionMemberUpdateManyWithWhereWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUpdateManyWithWhereWithoutPositionInput> = z.object({
  where: z.lazy(() => PositionMemberScalarWhereInputSchema),
  data: z.union([ z.lazy(() => PositionMemberUpdateManyMutationInputSchema),z.lazy(() => PositionMemberUncheckedUpdateManyWithoutPositionInputSchema) ]),
}).strict();

export const PositionMemberScalarWhereInputSchema: z.ZodType<Prisma.PositionMemberScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => PositionMemberScalarWhereInputSchema),z.lazy(() => PositionMemberScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => PositionMemberScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => PositionMemberScalarWhereInputSchema),z.lazy(() => PositionMemberScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  phone: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  email: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  positionId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const PositionCreateWithoutMembersInputSchema: z.ZodType<Prisma.PositionCreateWithoutMembersInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  createdAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutPositionsInputSchema)
}).strict();

export const PositionUncheckedCreateWithoutMembersInputSchema: z.ZodType<Prisma.PositionUncheckedCreateWithoutMembersInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  customerId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionCreateOrConnectWithoutMembersInputSchema: z.ZodType<Prisma.PositionCreateOrConnectWithoutMembersInput> = z.object({
  where: z.lazy(() => PositionWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => PositionCreateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedCreateWithoutMembersInputSchema) ]),
}).strict();

export const PositionUpsertWithoutMembersInputSchema: z.ZodType<Prisma.PositionUpsertWithoutMembersInput> = z.object({
  update: z.union([ z.lazy(() => PositionUpdateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedUpdateWithoutMembersInputSchema) ]),
  create: z.union([ z.lazy(() => PositionCreateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedCreateWithoutMembersInputSchema) ]),
  where: z.lazy(() => PositionWhereInputSchema).optional()
}).strict();

export const PositionUpdateToOneWithWhereWithoutMembersInputSchema: z.ZodType<Prisma.PositionUpdateToOneWithWhereWithoutMembersInput> = z.object({
  where: z.lazy(() => PositionWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => PositionUpdateWithoutMembersInputSchema),z.lazy(() => PositionUncheckedUpdateWithoutMembersInputSchema) ]),
}).strict();

export const PositionUpdateWithoutMembersInputSchema: z.ZodType<Prisma.PositionUpdateWithoutMembersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutPositionsNestedInputSchema).optional()
}).strict();

export const PositionUncheckedUpdateWithoutMembersInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateWithoutMembersInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CustomerCreateWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerCreateWithoutLoginLogsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutLoginLogsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutLoginLogsInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutLoginLogsInputSchema) ]),
}).strict();

export const CustomerUpsertWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerUpsertWithoutLoginLogsInput> = z.object({
  update: z.union([ z.lazy(() => CustomerUpdateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutLoginLogsInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutLoginLogsInputSchema) ]),
  where: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerUpdateToOneWithWhereWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerUpdateToOneWithWhereWithoutLoginLogsInput> = z.object({
  where: z.lazy(() => CustomerWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutLoginLogsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutLoginLogsInputSchema) ]),
}).strict();

export const CustomerUpdateWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutLoginLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutLoginLogsInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutLoginLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerCreateWithoutBillsInputSchema: z.ZodType<Prisma.CustomerCreateWithoutBillsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  financeContact: z.lazy(() => UserCreateNestedOneWithoutFinanceCustomersInputSchema).optional(),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutCustomersInputSchema),
  fbaOrders: z.lazy(() => FBAOrderCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerUncheckedCreateWithoutBillsInputSchema: z.ZodType<Prisma.CustomerUncheckedCreateWithoutBillsInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutSenderInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedCreateNestedManyWithoutCustomerInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedCreateNestedManyWithoutCustomerInputSchema).optional()
}).strict();

export const CustomerCreateOrConnectWithoutBillsInputSchema: z.ZodType<Prisma.CustomerCreateOrConnectWithoutBillsInput> = z.object({
  where: z.lazy(() => CustomerWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => CustomerCreateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutBillsInputSchema) ]),
}).strict();

export const FBAOrderCreateWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderCreateWithoutBillsInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelCreateNestedOneWithoutFbaOrdersInputSchema),
  tenant: z.lazy(() => TenantCreateNestedOneWithoutFbaOrdersInputSchema),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutOrdersInputSchema),
  user: z.lazy(() => UserCreateNestedOneWithoutFbaOrdersInputSchema),
  sender: z.lazy(() => CustomerCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  boxes: z.lazy(() => BoxCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogCreateNestedManyWithoutShipmentInputSchema).optional(),
  carrier: z.lazy(() => CarrierCreateNestedOneWithoutFbaOrdersInputSchema).optional(),
  attachments: z.lazy(() => AttachmentCreateNestedManyWithoutWaybillInputSchema).optional()
}).strict();

export const FBAOrderUncheckedCreateWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedCreateWithoutBillsInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedCreateNestedManyWithoutFbaOrderInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedCreateNestedManyWithoutShipmentInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedCreateNestedManyWithoutWaybillInputSchema).optional()
}).strict();

export const FBAOrderCreateOrConnectWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderCreateOrConnectWithoutBillsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema) ]),
}).strict();

export const BillLogCreateWithoutBillInputSchema: z.ZodType<Prisma.BillLogCreateWithoutBillInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional()
}).strict();

export const BillLogUncheckedCreateWithoutBillInputSchema: z.ZodType<Prisma.BillLogUncheckedCreateWithoutBillInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional()
}).strict();

export const BillLogCreateOrConnectWithoutBillInputSchema: z.ZodType<Prisma.BillLogCreateOrConnectWithoutBillInput> = z.object({
  where: z.lazy(() => BillLogWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema) ]),
}).strict();

export const BillLogCreateManyBillInputEnvelopeSchema: z.ZodType<Prisma.BillLogCreateManyBillInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => BillLogCreateManyBillInputSchema),z.lazy(() => BillLogCreateManyBillInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const BillAttachmentCreateWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentCreateWithoutBillInput> = z.object({
  id: z.string().uuid().optional(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const BillAttachmentUncheckedCreateWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedCreateWithoutBillInput> = z.object({
  id: z.string().uuid().optional(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const BillAttachmentCreateOrConnectWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentCreateOrConnectWithoutBillInput> = z.object({
  where: z.lazy(() => BillAttachmentWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema) ]),
}).strict();

export const BillAttachmentCreateManyBillInputEnvelopeSchema: z.ZodType<Prisma.BillAttachmentCreateManyBillInputEnvelope> = z.object({
  data: z.union([ z.lazy(() => BillAttachmentCreateManyBillInputSchema),z.lazy(() => BillAttachmentCreateManyBillInputSchema).array() ]),
  skipDuplicates: z.boolean().optional()
}).strict();

export const CustomerUpsertWithoutBillsInputSchema: z.ZodType<Prisma.CustomerUpsertWithoutBillsInput> = z.object({
  update: z.union([ z.lazy(() => CustomerUpdateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutBillsInputSchema) ]),
  create: z.union([ z.lazy(() => CustomerCreateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedCreateWithoutBillsInputSchema) ]),
  where: z.lazy(() => CustomerWhereInputSchema).optional()
}).strict();

export const CustomerUpdateToOneWithWhereWithoutBillsInputSchema: z.ZodType<Prisma.CustomerUpdateToOneWithWhereWithoutBillsInput> = z.object({
  where: z.lazy(() => CustomerWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => CustomerUpdateWithoutBillsInputSchema),z.lazy(() => CustomerUncheckedUpdateWithoutBillsInputSchema) ]),
}).strict();

export const CustomerUpdateWithoutBillsInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutBillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutBillsInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutBillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const FBAOrderUpsertWithWhereUniqueWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUpsertWithWhereUniqueWithoutBillsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => FBAOrderUpdateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutBillsInputSchema) ]),
  create: z.union([ z.lazy(() => FBAOrderCreateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedCreateWithoutBillsInputSchema) ]),
}).strict();

export const FBAOrderUpdateWithWhereUniqueWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithWhereUniqueWithoutBillsInput> = z.object({
  where: z.lazy(() => FBAOrderWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateWithoutBillsInputSchema),z.lazy(() => FBAOrderUncheckedUpdateWithoutBillsInputSchema) ]),
}).strict();

export const FBAOrderUpdateManyWithWhereWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUpdateManyWithWhereWithoutBillsInput> = z.object({
  where: z.lazy(() => FBAOrderScalarWhereInputSchema),
  data: z.union([ z.lazy(() => FBAOrderUpdateManyMutationInputSchema),z.lazy(() => FBAOrderUncheckedUpdateManyWithoutBillsInputSchema) ]),
}).strict();

export const BillLogUpsertWithWhereUniqueWithoutBillInputSchema: z.ZodType<Prisma.BillLogUpsertWithWhereUniqueWithoutBillInput> = z.object({
  where: z.lazy(() => BillLogWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => BillLogUpdateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedUpdateWithoutBillInputSchema) ]),
  create: z.union([ z.lazy(() => BillLogCreateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedCreateWithoutBillInputSchema) ]),
}).strict();

export const BillLogUpdateWithWhereUniqueWithoutBillInputSchema: z.ZodType<Prisma.BillLogUpdateWithWhereUniqueWithoutBillInput> = z.object({
  where: z.lazy(() => BillLogWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => BillLogUpdateWithoutBillInputSchema),z.lazy(() => BillLogUncheckedUpdateWithoutBillInputSchema) ]),
}).strict();

export const BillLogUpdateManyWithWhereWithoutBillInputSchema: z.ZodType<Prisma.BillLogUpdateManyWithWhereWithoutBillInput> = z.object({
  where: z.lazy(() => BillLogScalarWhereInputSchema),
  data: z.union([ z.lazy(() => BillLogUpdateManyMutationInputSchema),z.lazy(() => BillLogUncheckedUpdateManyWithoutBillInputSchema) ]),
}).strict();

export const BillLogScalarWhereInputSchema: z.ZodType<Prisma.BillLogScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BillLogScalarWhereInputSchema),z.lazy(() => BillLogScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillLogScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillLogScalarWhereInputSchema),z.lazy(() => BillLogScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  status: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  remark: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  timestamp: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const BillAttachmentUpsertWithWhereUniqueWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUpsertWithWhereUniqueWithoutBillInput> = z.object({
  where: z.lazy(() => BillAttachmentWhereUniqueInputSchema),
  update: z.union([ z.lazy(() => BillAttachmentUpdateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedUpdateWithoutBillInputSchema) ]),
  create: z.union([ z.lazy(() => BillAttachmentCreateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedCreateWithoutBillInputSchema) ]),
}).strict();

export const BillAttachmentUpdateWithWhereUniqueWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUpdateWithWhereUniqueWithoutBillInput> = z.object({
  where: z.lazy(() => BillAttachmentWhereUniqueInputSchema),
  data: z.union([ z.lazy(() => BillAttachmentUpdateWithoutBillInputSchema),z.lazy(() => BillAttachmentUncheckedUpdateWithoutBillInputSchema) ]),
}).strict();

export const BillAttachmentUpdateManyWithWhereWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUpdateManyWithWhereWithoutBillInput> = z.object({
  where: z.lazy(() => BillAttachmentScalarWhereInputSchema),
  data: z.union([ z.lazy(() => BillAttachmentUpdateManyMutationInputSchema),z.lazy(() => BillAttachmentUncheckedUpdateManyWithoutBillInputSchema) ]),
}).strict();

export const BillAttachmentScalarWhereInputSchema: z.ZodType<Prisma.BillAttachmentScalarWhereInput> = z.object({
  AND: z.union([ z.lazy(() => BillAttachmentScalarWhereInputSchema),z.lazy(() => BillAttachmentScalarWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => BillAttachmentScalarWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => BillAttachmentScalarWhereInputSchema),z.lazy(() => BillAttachmentScalarWhereInputSchema).array() ]).optional(),
  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  billId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  url: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  filename: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  fileSize: z.union([ z.lazy(() => IntNullableFilterSchema),z.number() ]).optional().nullable(),
  mimeType: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),
}).strict();

export const FinanceBillCreateWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillCreateWithoutLogsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutBillsInputSchema),
  waybills: z.lazy(() => FBAOrderCreateNestedManyWithoutBillsInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUncheckedCreateWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateWithoutLogsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  waybills: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutBillsInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillCreateOrConnectWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillCreateOrConnectWithoutLogsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutLogsInputSchema) ]),
}).strict();

export const FinanceBillUpsertWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillUpsertWithoutLogsInput> = z.object({
  update: z.union([ z.lazy(() => FinanceBillUpdateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutLogsInputSchema) ]),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutLogsInputSchema) ]),
  where: z.lazy(() => FinanceBillWhereInputSchema).optional()
}).strict();

export const FinanceBillUpdateToOneWithWhereWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillUpdateToOneWithWhereWithoutLogsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => FinanceBillUpdateWithoutLogsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutLogsInputSchema) ]),
}).strict();

export const FinanceBillUpdateWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithoutLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutBillsNestedInputSchema).optional(),
  waybills: z.lazy(() => FBAOrderUpdateManyWithoutBillsNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateWithoutLogsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateWithoutLogsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutBillsNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillCreateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillCreateWithoutAttachmentsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  customer: z.lazy(() => CustomerCreateNestedOneWithoutBillsInputSchema),
  waybills: z.lazy(() => FBAOrderCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillUncheckedCreateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedCreateWithoutAttachmentsInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  customerId: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional(),
  waybills: z.lazy(() => FBAOrderUncheckedCreateNestedManyWithoutBillsInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedCreateNestedManyWithoutBillInputSchema).optional()
}).strict();

export const FinanceBillCreateOrConnectWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillCreateOrConnectWithoutAttachmentsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereUniqueInputSchema),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutAttachmentsInputSchema) ]),
}).strict();

export const FinanceBillUpsertWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillUpsertWithoutAttachmentsInput> = z.object({
  update: z.union([ z.lazy(() => FinanceBillUpdateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutAttachmentsInputSchema) ]),
  create: z.union([ z.lazy(() => FinanceBillCreateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedCreateWithoutAttachmentsInputSchema) ]),
  where: z.lazy(() => FinanceBillWhereInputSchema).optional()
}).strict();

export const FinanceBillUpdateToOneWithWhereWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillUpdateToOneWithWhereWithoutAttachmentsInput> = z.object({
  where: z.lazy(() => FinanceBillWhereInputSchema).optional(),
  data: z.union([ z.lazy(() => FinanceBillUpdateWithoutAttachmentsInputSchema),z.lazy(() => FinanceBillUncheckedUpdateWithoutAttachmentsInputSchema) ]),
}).strict();

export const FinanceBillUpdateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithoutAttachmentsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutBillsNestedInputSchema).optional(),
  waybills: z.lazy(() => FBAOrderUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateWithoutAttachmentsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateWithoutAttachmentsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const UserCreateManyTenantInputSchema: z.ZodType<Prisma.UserCreateManyTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  email: z.string(),
  password: z.string(),
  role: z.lazy(() => RoleTypeSchema).optional(),
  createdAt: z.coerce.date().optional()
}).strict();

export const FBAOrderCreateManyTenantInputSchema: z.ZodType<Prisma.FBAOrderCreateManyTenantInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const ReceivableCreateManyTenantInputSchema: z.ZodType<Prisma.ReceivableCreateManyTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableCreateManyTenantInputSchema: z.ZodType<Prisma.PayableCreateManyTenantInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  createdById: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const CustomerCreateManyTenantInputSchema: z.ZodType<Prisma.CustomerCreateManyTenantInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  financeContactId: z.string().optional().nullable(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional()
}).strict();

export const UserUpdateWithoutTenantInputSchema: z.ZodType<Prisma.UserUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateWithoutTenantInputSchema: z.ZodType<Prisma.UserUncheckedUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  permissions: z.lazy(() => PermissionUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutUserNestedInputSchema).optional(),
  receivables: z.lazy(() => ReceivableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  payables: z.lazy(() => PayableUncheckedUpdateManyWithoutCreatedByNestedInputSchema).optional(),
  financeCustomers: z.lazy(() => CustomerUncheckedUpdateManyWithoutFinanceContactNestedInputSchema).optional()
}).strict();

export const UserUncheckedUpdateManyWithoutTenantInputSchema: z.ZodType<Prisma.UserUncheckedUpdateManyWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  password: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  role: z.union([ z.lazy(() => RoleTypeSchema),z.lazy(() => EnumRoleTypeFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutTenantInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const ReceivableUpdateWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  createdBy: z.lazy(() => UserUpdateOneWithoutReceivablesNestedInputSchema).optional()
}).strict();

export const ReceivableUncheckedUpdateWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ReceivableUncheckedUpdateManyWithoutTenantInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateManyWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableUpdateWithoutTenantInputSchema: z.ZodType<Prisma.PayableUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  createdBy: z.lazy(() => UserUpdateOneWithoutPayablesNestedInputSchema).optional()
}).strict();

export const PayableUncheckedUpdateWithoutTenantInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableUncheckedUpdateManyWithoutTenantInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateManyWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdById: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CustomerUpdateWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  financeContact: z.lazy(() => UserUpdateOneWithoutFinanceCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateManyWithoutTenantInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateManyWithoutTenantInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  financeContactId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionCreateManyUserInputSchema: z.ZodType<Prisma.PermissionCreateManyUserInput> = z.object({
  id: z.string().uuid().optional(),
  type: z.lazy(() => PermissionTypeSchema)
}).strict();

export const FBAOrderCreateManyUserInputSchema: z.ZodType<Prisma.FBAOrderCreateManyUserInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const ReceivableCreateManyCreatedByInputSchema: z.ZodType<Prisma.ReceivableCreateManyCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PayableCreateManyCreatedByInputSchema: z.ZodType<Prisma.PayableCreateManyCreatedByInput> = z.object({
  id: z.string().uuid().optional(),
  orderId: z.string().optional().nullable(),
  client: z.string(),
  amount: z.number(),
  currency: z.string(),
  status: z.lazy(() => FinanceStatusSchema),
  dueDate: z.string(),
  exception: z.string().optional().nullable(),
  tenantId: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const CustomerCreateManyFinanceContactInputSchema: z.ZodType<Prisma.CustomerCreateManyFinanceContactInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  companyName: z.string().optional().nullable(),
  tenantId: z.string(),
  email: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  status: z.lazy(() => CustomerStatusSchema).optional(),
  settlementMethod: z.lazy(() => SettlementMethodSchema).optional(),
  businessLicense: z.string().optional().nullable(),
  idCard: z.string().optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional()
}).strict();

export const PermissionUpdateWithoutUserInputSchema: z.ZodType<Prisma.PermissionUpdateWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionUncheckedUpdateWithoutUserInputSchema: z.ZodType<Prisma.PermissionUncheckedUpdateWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PermissionUncheckedUpdateManyWithoutUserInputSchema: z.ZodType<Prisma.PermissionUncheckedUpdateManyWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.lazy(() => PermissionTypeSchema),z.lazy(() => EnumPermissionTypeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutUserInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutUserInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const ReceivableUpdateWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUpdateWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutReceivablesNestedInputSchema).optional()
}).strict();

export const ReceivableUncheckedUpdateWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ReceivableUncheckedUpdateManyWithoutCreatedByInputSchema: z.ZodType<Prisma.ReceivableUncheckedUpdateManyWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableUpdateWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUpdateWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutPayablesNestedInputSchema).optional()
}).strict();

export const PayableUncheckedUpdateWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PayableUncheckedUpdateManyWithoutCreatedByInputSchema: z.ZodType<Prisma.PayableUncheckedUpdateManyWithoutCreatedByInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  orderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  client: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  amount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.lazy(() => FinanceStatusSchema),z.lazy(() => EnumFinanceStatusFieldUpdateOperationsInputSchema) ]).optional(),
  dueDate: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  exception: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const CustomerUpdateWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUpdateWithoutFinanceContactInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutCustomersNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateWithoutFinanceContactInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutSenderNestedInputSchema).optional(),
  orders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  positions: z.lazy(() => PositionUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  loginLogs: z.lazy(() => LoginLogUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutCustomerNestedInputSchema).optional()
}).strict();

export const CustomerUncheckedUpdateManyWithoutFinanceContactInputSchema: z.ZodType<Prisma.CustomerUncheckedUpdateManyWithoutFinanceContactInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  companyName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => CustomerStatusSchema),z.lazy(() => EnumCustomerStatusFieldUpdateOperationsInputSchema) ]).optional(),
  settlementMethod: z.union([ z.lazy(() => SettlementMethodSchema),z.lazy(() => EnumSettlementMethodFieldUpdateOperationsInputSchema) ]).optional(),
  businessLicense: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  idCard: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attachments: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderCreateManySenderInputSchema: z.ZodType<Prisma.FBAOrderCreateManySenderInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const FBAOrderCreateManyCustomerInputSchema: z.ZodType<Prisma.FBAOrderCreateManyCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const PositionCreateManyCustomerInputSchema: z.ZodType<Prisma.PositionCreateManyCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  title: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const LoginLogCreateManyCustomerInputSchema: z.ZodType<Prisma.LoginLogCreateManyCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  ip: z.string(),
  device: z.string().optional().nullable(),
  userAgent: z.string().optional().nullable(),
  loginAt: z.coerce.date().optional()
}).strict();

export const FinanceBillCreateManyCustomerInputSchema: z.ZodType<Prisma.FinanceBillCreateManyCustomerInput> = z.object({
  id: z.string().uuid().optional(),
  billNo: z.string(),
  totalAmount: z.number(),
  status: z.string(),
  createdAt: z.coerce.date().optional(),
  updatedAt: z.coerce.date().optional()
}).strict();

export const FBAOrderUpdateWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutSenderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutSenderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutSenderInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutSenderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const FBAOrderUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutCustomerInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PositionUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  members: z.lazy(() => PositionMemberUpdateManyWithoutPositionNestedInputSchema).optional()
}).strict();

export const PositionUncheckedUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  members: z.lazy(() => PositionMemberUncheckedUpdateManyWithoutPositionNestedInputSchema).optional()
}).strict();

export const PositionUncheckedUpdateManyWithoutCustomerInputSchema: z.ZodType<Prisma.PositionUncheckedUpdateManyWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  title: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogUncheckedUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUncheckedUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const LoginLogUncheckedUpdateManyWithoutCustomerInputSchema: z.ZodType<Prisma.LoginLogUncheckedUpdateManyWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  ip: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  device: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userAgent: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  loginAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FinanceBillUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  waybills: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUncheckedUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateManyWithoutCustomerInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateManyWithoutCustomerInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BoxCreateManyFbaOrderInputSchema: z.ZodType<Prisma.BoxCreateManyFbaOrderInput> = z.object({
  id: z.string().uuid().optional(),
  code: z.string(),
  fullCode: z.string(),
  weight: z.number().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  productNameEn: z.string().optional(),
  productNameCn: z.string().optional(),
  declaredValue: z.number().optional(),
  declaredQuantity: z.number().int().optional(),
  material: z.string().optional(),
  hsCode: z.string().optional().nullable(),
  usage: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  model: z.string().optional().nullable(),
  sku: z.string().optional().nullable(),
  asin: z.string().optional().nullable(),
  fnsku: z.string().optional().nullable(),
  tradOrderId: z.string().optional().nullable()
}).strict();

export const ShipmentLogCreateManyShipmentInputSchema: z.ZodType<Prisma.ShipmentLogCreateManyShipmentInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  location: z.string().optional().nullable(),
  timestamp: z.coerce.date()
}).strict();

export const AttachmentCreateManyWaybillInputSchema: z.ZodType<Prisma.AttachmentCreateManyWaybillInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  path: z.string(),
  type: z.string()
}).strict();

export const BoxUpdateWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUpdateWithoutFbaOrderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const BoxUncheckedUpdateWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUncheckedUpdateWithoutFbaOrderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const BoxUncheckedUpdateManyWithoutFbaOrderInputSchema: z.ZodType<Prisma.BoxUncheckedUpdateManyWithoutFbaOrderInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fullCode: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  productNameEn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  productNameCn: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  declaredValue: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  declaredQuantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  material: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  hsCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  usage: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  brand: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  model: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  asin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  fnsku: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  tradOrderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const ShipmentLogUpdateWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUpdateWithoutShipmentInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ShipmentLogUncheckedUpdateWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedUpdateWithoutShipmentInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ShipmentLogUncheckedUpdateManyWithoutShipmentInputSchema: z.ZodType<Prisma.ShipmentLogUncheckedUpdateManyWithoutShipmentInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  location: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const AttachmentUpdateWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUpdateWithoutWaybillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const AttachmentUncheckedUpdateWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUncheckedUpdateWithoutWaybillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const AttachmentUncheckedUpdateManyWithoutWaybillInputSchema: z.ZodType<Prisma.AttachmentUncheckedUpdateManyWithoutWaybillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  path: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FinanceBillUpdateWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUpdateWithoutWaybillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutBillsNestedInputSchema).optional(),
  logs: z.lazy(() => BillLogUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateWithoutWaybillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  logs: z.lazy(() => BillLogUncheckedUpdateManyWithoutBillNestedInputSchema).optional(),
  attachments: z.lazy(() => BillAttachmentUncheckedUpdateManyWithoutBillNestedInputSchema).optional()
}).strict();

export const FinanceBillUncheckedUpdateManyWithoutWaybillsInputSchema: z.ZodType<Prisma.FinanceBillUncheckedUpdateManyWithoutWaybillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  billNo: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  totalAmount: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  updatedAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const ChannelCreateManyCarrierInputSchema: z.ZodType<Prisma.ChannelCreateManyCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  code: z.string().optional().nullable(),
  type: z.string(),
  country: z.string().optional().nullable(),
  warehouse: z.string().optional().nullable(),
  origin: z.string().optional().nullable(),
  currency: z.string(),
  decimal: z.string().optional().nullable(),
  method: z.string().optional().nullable(),
  rounding: z.string().optional().nullable(),
  compareMode: z.string().optional().nullable(),
  volRatio: z.number().optional().nullable(),
  cubeRatio: z.number().optional().nullable(),
  splitRatio: z.number().optional().nullable(),
  chargeMethod: z.string().optional().nullable(),
  minCharge: z.number().optional().nullable(),
  ticketPrecision: z.number().optional().nullable(),
  boxPrecision: z.number().optional().nullable(),
  sizePrecision: z.number().optional().nullable(),
  minPieces: z.number().int().optional().nullable(),
  maxPieces: z.number().int().optional().nullable(),
  minBoxRealWeight: z.number().optional().nullable(),
  minBoxMaterialWeight: z.number().optional().nullable(),
  minBoxChargeWeight: z.number().optional().nullable(),
  minBoxAvgWeight: z.number().optional().nullable(),
  minTicketChargeWeight: z.number().optional().nullable(),
  maxTicketChargeWeight: z.number().optional().nullable(),
  minTicketRealWeight: z.number().optional().nullable(),
  maxTicketRealWeight: z.number().optional().nullable(),
  minBoxRealWeightLimit: z.number().optional().nullable(),
  maxBoxRealWeight: z.number().optional().nullable(),
  minBoxChargeWeightLimit: z.number().optional().nullable(),
  maxBoxChargeWeight: z.number().optional().nullable(),
  minDeclareValue: z.number().optional().nullable(),
  maxDeclareValue: z.number().optional().nullable(),
  aging: z.string().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  labelCode: z.string().optional().nullable(),
  assignedUser: z.string().optional().nullable(),
  userLevel: z.string().optional().nullable(),
  declareCurrency: z.string().optional().nullable(),
  defaultDeclareCurrency: z.string().optional().nullable(),
  sender: z.string().optional().nullable(),
  showWeight: z.boolean().optional(),
  showSize: z.boolean().optional(),
  requireWeight: z.boolean().optional(),
  requireSize: z.boolean().optional(),
  requirePhone: z.boolean().optional(),
  requireEmail: z.boolean().optional(),
  requirePackingList: z.boolean().optional(),
  verifySalesLink: z.boolean().optional(),
  verifyImageLink: z.boolean().optional(),
  requireVAT: z.boolean().optional(),
  requireVATFiling: z.boolean().optional(),
  requireEORI: z.boolean().optional(),
  enableBilling: z.boolean().optional(),
  showBilling: z.boolean().optional(),
  controlBilling: z.boolean().optional(),
  controlReceivingFee: z.boolean().optional(),
  promptUnderpayment: z.boolean().optional(),
  modifyVolRatio: z.boolean().optional(),
  showSupplierData: z.boolean().optional(),
  orderBySKULibrary: z.boolean().optional(),
  allowCancel: z.boolean().optional(),
  noAutoCancelAPIFail: z.boolean().optional(),
  allowChannelChange: z.boolean().optional(),
  allowEdit: z.boolean().optional(),
  allowTrackingEntry: z.boolean().optional(),
  allowLabelUpload: z.boolean().optional(),
  hideCarrier: z.boolean().optional(),
  refundOnReturn: z.boolean().optional(),
  noRefundOnCancel: z.boolean().optional(),
  showInWMS: z.boolean().optional(),
  enableCOD: z.boolean().optional(),
  restrictWarehouseCode: z.boolean().optional(),
  roundBeforeSplit: z.boolean().optional(),
  chargeWeight: z.number().optional().nullable(),
  chargeVolume: z.number().optional().nullable(),
  chargePrice: z.number().optional().nullable(),
  unitType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
}).strict();

export const FBAOrderCreateManyCarrierInputSchema: z.ZodType<Prisma.FBAOrderCreateManyCarrierInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
}).strict();

export const ChannelUpdateWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUpdateWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutChannelNestedInputSchema).optional(),
  rates: z.lazy(() => RateRuleUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  rates: z.lazy(() => RateRuleUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  fbaOrders: z.lazy(() => FBAOrderUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  transportPrices: z.lazy(() => TransportPriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional(),
  prices: z.lazy(() => PriceUncheckedUpdateManyWithoutChannelNestedInputSchema).optional()
}).strict();

export const ChannelUncheckedUpdateManyWithoutCarrierInputSchema: z.ZodType<Prisma.ChannelUncheckedUpdateManyWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  code: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  origin: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  decimal: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  method: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  rounding: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  compareMode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cubeRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  splitRatio: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeMethod: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minCharge: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ticketPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxPrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sizePrecision: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxPieces: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxMaterialWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxAvgWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxTicketRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxRealWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxRealWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minBoxChargeWeightLimit: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxBoxChargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  minDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  maxDeclareValue: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  aging: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  assignedUser: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  userLevel: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  defaultDeclareCurrency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sender: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  showWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireWeight: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireSize: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePhone: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEmail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requirePackingList: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifySalesLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  verifyImageLink: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVAT: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireVATFiling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  requireEORI: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlBilling: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  controlReceivingFee: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  promptUnderpayment: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  modifyVolRatio: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showSupplierData: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  orderBySKULibrary: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noAutoCancelAPIFail: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowChannelChange: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowEdit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowTrackingEntry: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowLabelUpload: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hideCarrier: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  refundOnReturn: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  noRefundOnCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  showInWMS: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  enableCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  restrictWarehouseCode: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  roundBeforeSplit: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeVolume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargePrice: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  unitType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  extraFeeRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
}).strict();

export const FBAOrderUpdateWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutCarrierInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutCarrierInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
}).strict();

export const RateRuleCreateManyChannelInputSchema: z.ZodType<Prisma.RateRuleCreateManyChannelInput> = z.object({
  id: z.string().uuid().optional(),
  minWeight: z.number(),
  maxWeight: z.number(),
  weightType: z.string(),
  divisor: z.number().int().optional().nullable(),
  sideRule: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  baseRate: z.number(),
  taxRate: z.number().optional().nullable(),
  otherFee: z.number().optional().nullable(),
  priority: z.number().int()
}).strict();

export const FBAOrderCreateManyChannelInputSchema: z.ZodType<Prisma.FBAOrderCreateManyChannelInput> = z.object({
  id: z.string().uuid().optional(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillRuleId: z.string().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const TransportPriceCreateManyChannelInputSchema: z.ZodType<Prisma.TransportPriceCreateManyChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  region: z.string(),
  service: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PriceCreateManyChannelInputSchema: z.ZodType<Prisma.PriceCreateManyChannelInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  currency: z.string(),
  createdAt: z.coerce.date().optional()
}).strict();

export const RateRuleUpdateWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const RateRuleUncheckedUpdateWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUncheckedUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const RateRuleUncheckedUpdateManyWithoutChannelInputSchema: z.ZodType<Prisma.RateRuleUncheckedUpdateManyWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  minWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  maxWeight: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  weightType: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  divisor: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  sideRule: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  baseRate: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  taxRate: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  otherFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  priority: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderUpdateWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutChannelInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const TransportPriceUpdateWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUpdateManyWithoutTransportPriceNestedInputSchema).optional()
}).strict();

export const TransportPriceUncheckedUpdateWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUncheckedUpdateManyWithoutTransportPriceNestedInputSchema).optional()
}).strict();

export const TransportPriceUncheckedUpdateManyWithoutChannelInputSchema: z.ZodType<Prisma.TransportPriceUncheckedUpdateManyWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  region: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  service: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceUpdateWithoutChannelInputSchema: z.ZodType<Prisma.PriceUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUpdateManyWithoutPriceNestedInputSchema).optional()
}).strict();

export const PriceUncheckedUpdateWithoutChannelInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  settings: z.lazy(() => PriceSettingUncheckedUpdateManyWithoutPriceNestedInputSchema).optional()
}).strict();

export const PriceUncheckedUpdateManyWithoutChannelInputSchema: z.ZodType<Prisma.PriceUncheckedUpdateManyWithoutChannelInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  currency: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const FBAOrderCreateManyWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderCreateManyWaybillRuleInput> = z.object({
  id: z.string().uuid().optional(),
  channelId: z.string(),
  freightCost: z.number().optional().nullable(),
  totalCost: z.number().optional().nullable(),
  recipient: z.string(),
  country: z.string(),
  quantity: z.number().int(),
  weight: z.number().optional().nullable(),
  volume: z.number().optional().nullable(),
  volumetricWeight: z.number().optional().nullable(),
  chargeWeight: z.number().optional().nullable(),
  cargo: z.string().optional().nullable(),
  status: z.lazy(() => OrderStatusSchema),
  createdAt: z.coerce.date().optional(),
  tenantId: z.string(),
  customerId: z.string(),
  userId: z.string(),
  type: z.string(),
  warehouse: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  height: z.number().optional().nullable(),
  hasBattery: z.boolean().optional(),
  hasMagnetic: z.boolean().optional(),
  hasDangerous: z.boolean().optional(),
  hasLiquid: z.boolean().optional(),
  hasPowder: z.boolean().optional(),
  clientCode: z.string().optional().nullable(),
  company: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  store: z.string().optional().nullable(),
  ref1: z.string().optional().nullable(),
  vat: z.string().optional().nullable(),
  ioss: z.string().optional().nullable(),
  eori: z.string().optional().nullable(),
  currency: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  productName: z.string().optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderCreateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.string().optional().nullable(),
  insurance: z.boolean().optional(),
  address1: z.string().optional().nullable(),
  address2: z.string().optional().nullable(),
  address3: z.string().optional().nullable(),
  addressDetail: z.string().optional().nullable(),
  city: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  postalCode: z.string().optional().nullable(),
  declaredValue: z.string().optional().nullable(),
  declaredQuantity: z.string().optional().nullable(),
  senderId: z.string().optional().nullable(),
  senderName: z.string().optional().nullable(),
  extraFee: z.number().optional().nullable(),
  waybillNumber: z.string().optional().nullable(),
  billingPrecision: z.number().int().optional().nullable(),
  isCOD: z.boolean().optional(),
  allowCustomerCancel: z.boolean().optional(),
  trackingNumber: z.string().optional().nullable(),
  labelUploaded: z.boolean().optional(),
  errors: z.union([ z.lazy(() => FBAOrderCreateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.string().optional().nullable()
}).strict();

export const FBAOrderUpdateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutWaybillRuleInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutWaybillRuleInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional(),
  bills: z.lazy(() => FinanceBillUncheckedUpdateManyWithoutWaybillsNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutWaybillRuleInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutWaybillRuleInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PriceSettingCreateManyTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateManyTransportPriceInput> = z.object({
  id: z.string().uuid().optional(),
  priceId: z.string(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PriceSettingUpdateWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateWithoutTransportPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  price: z.lazy(() => PriceUpdateOneRequiredWithoutSettingsNestedInputSchema).optional()
}).strict();

export const PriceSettingUncheckedUpdateWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateWithoutTransportPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  priceId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceSettingUncheckedUpdateManyWithoutTransportPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateManyWithoutTransportPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  priceId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PriceSettingCreateManyPriceInputSchema: z.ZodType<Prisma.PriceSettingCreateManyPriceInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  unit: z.string().optional().nullable(),
  value: z.number(),
  createdAt: z.coerce.date().optional(),
  transportPriceId: z.string().optional().nullable()
}).strict();

export const PriceSettingUpdateWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUpdateWithoutPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  transportPrice: z.lazy(() => TransportPriceUpdateOneWithoutSettingsNestedInputSchema).optional()
}).strict();

export const PriceSettingUncheckedUpdateWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateWithoutPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  transportPriceId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PriceSettingUncheckedUpdateManyWithoutPriceInputSchema: z.ZodType<Prisma.PriceSettingUncheckedUpdateManyWithoutPriceInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  unit: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  value: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  transportPriceId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const PositionMemberCreateManyPositionInputSchema: z.ZodType<Prisma.PositionMemberCreateManyPositionInput> = z.object({
  id: z.string().uuid().optional(),
  name: z.string(),
  phone: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const PositionMemberUpdateWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUpdateWithoutPositionInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionMemberUncheckedUpdateWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUncheckedUpdateWithoutPositionInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const PositionMemberUncheckedUpdateManyWithoutPositionInputSchema: z.ZodType<Prisma.PositionMemberUncheckedUpdateManyWithoutPositionInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogCreateManyBillInputSchema: z.ZodType<Prisma.BillLogCreateManyBillInput> = z.object({
  id: z.string().uuid().optional(),
  status: z.string(),
  remark: z.string().optional().nullable(),
  timestamp: z.coerce.date().optional()
}).strict();

export const BillAttachmentCreateManyBillInputSchema: z.ZodType<Prisma.BillAttachmentCreateManyBillInput> = z.object({
  id: z.string().uuid().optional(),
  url: z.string(),
  filename: z.string(),
  fileSize: z.number().int().optional().nullable(),
  mimeType: z.string().optional().nullable(),
  createdAt: z.coerce.date().optional()
}).strict();

export const FBAOrderUpdateWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUpdateWithoutBillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  channel: z.lazy(() => ChannelUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  tenant: z.lazy(() => TenantUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  customer: z.lazy(() => CustomerUpdateOneRequiredWithoutOrdersNestedInputSchema).optional(),
  user: z.lazy(() => UserUpdateOneRequiredWithoutFbaOrdersNestedInputSchema).optional(),
  sender: z.lazy(() => CustomerUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  boxes: z.lazy(() => BoxUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  waybillRule: z.lazy(() => WaybillRuleUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUpdateManyWithoutShipmentNestedInputSchema).optional(),
  carrier: z.lazy(() => CarrierUpdateOneWithoutFbaOrdersNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUpdateManyWithoutWaybillNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateWithoutBillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  boxes: z.lazy(() => BoxUncheckedUpdateManyWithoutFbaOrderNestedInputSchema).optional(),
  logs: z.lazy(() => ShipmentLogUncheckedUpdateManyWithoutShipmentNestedInputSchema).optional(),
  attachments: z.lazy(() => AttachmentUncheckedUpdateManyWithoutWaybillNestedInputSchema).optional()
}).strict();

export const FBAOrderUncheckedUpdateManyWithoutBillsInputSchema: z.ZodType<Prisma.FBAOrderUncheckedUpdateManyWithoutBillsInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  channelId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  freightCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  totalCost: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  recipient: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  country: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  quantity: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),
  weight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volume: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  volumetricWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  chargeWeight: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  cargo: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  status: z.union([ z.lazy(() => OrderStatusSchema),z.lazy(() => EnumOrderStatusFieldUpdateOperationsInputSchema) ]).optional(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
  tenantId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  customerId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  userId: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  type: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  warehouse: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  length: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  width: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  height: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  hasBattery: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasMagnetic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasDangerous: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasLiquid: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  hasPowder: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  clientCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  company: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  phone: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  email: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  store: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ref1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  vat: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  ioss: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  eori: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  currency: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  category: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  productName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  attrs: z.union([ z.lazy(() => FBAOrderUpdateattrsInputSchema),z.string().array() ]).optional(),
  notes: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  insurance: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  address1: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address2: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  address3: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  addressDetail: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  city: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  state: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  postalCode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredValue: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  declaredQuantity: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  senderName: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  extraFee: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillRuleId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  waybillNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  billingPrecision: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  isCOD: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  allowCustomerCancel: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  trackingNumber: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  labelUploaded: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),
  errors: z.union([ z.lazy(() => FBAOrderUpdateerrorsInputSchema),z.string().array() ]).optional(),
  carrierId: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
}).strict();

export const BillLogUpdateWithoutBillInputSchema: z.ZodType<Prisma.BillLogUpdateWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogUncheckedUpdateWithoutBillInputSchema: z.ZodType<Prisma.BillLogUncheckedUpdateWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillLogUncheckedUpdateManyWithoutBillInputSchema: z.ZodType<Prisma.BillLogUncheckedUpdateManyWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  status: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  remark: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  timestamp: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentUpdateWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUpdateWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentUncheckedUpdateWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedUpdateWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

export const BillAttachmentUncheckedUpdateManyWithoutBillInputSchema: z.ZodType<Prisma.BillAttachmentUncheckedUpdateManyWithoutBillInput> = z.object({
  id: z.union([ z.string().uuid(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  url: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  filename: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),
  fileSize: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  mimeType: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),
  createdAt: z.union([ z.coerce.date(),z.lazy(() => DateTimeFieldUpdateOperationsInputSchema) ]).optional(),
}).strict();

/////////////////////////////////////////
// ARGS
/////////////////////////////////////////

export const TenantFindFirstArgsSchema: z.ZodType<Prisma.TenantFindFirstArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereInputSchema.optional(),
  orderBy: z.union([ TenantOrderByWithRelationInputSchema.array(),TenantOrderByWithRelationInputSchema ]).optional(),
  cursor: TenantWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TenantScalarFieldEnumSchema,TenantScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TenantFindFirstOrThrowArgsSchema: z.ZodType<Prisma.TenantFindFirstOrThrowArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereInputSchema.optional(),
  orderBy: z.union([ TenantOrderByWithRelationInputSchema.array(),TenantOrderByWithRelationInputSchema ]).optional(),
  cursor: TenantWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TenantScalarFieldEnumSchema,TenantScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TenantFindManyArgsSchema: z.ZodType<Prisma.TenantFindManyArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereInputSchema.optional(),
  orderBy: z.union([ TenantOrderByWithRelationInputSchema.array(),TenantOrderByWithRelationInputSchema ]).optional(),
  cursor: TenantWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TenantScalarFieldEnumSchema,TenantScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TenantAggregateArgsSchema: z.ZodType<Prisma.TenantAggregateArgs> = z.object({
  where: TenantWhereInputSchema.optional(),
  orderBy: z.union([ TenantOrderByWithRelationInputSchema.array(),TenantOrderByWithRelationInputSchema ]).optional(),
  cursor: TenantWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const TenantGroupByArgsSchema: z.ZodType<Prisma.TenantGroupByArgs> = z.object({
  where: TenantWhereInputSchema.optional(),
  orderBy: z.union([ TenantOrderByWithAggregationInputSchema.array(),TenantOrderByWithAggregationInputSchema ]).optional(),
  by: TenantScalarFieldEnumSchema.array(),
  having: TenantScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const TenantFindUniqueArgsSchema: z.ZodType<Prisma.TenantFindUniqueArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereUniqueInputSchema,
}).strict() ;

export const TenantFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.TenantFindUniqueOrThrowArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereUniqueInputSchema,
}).strict() ;

export const UserFindFirstArgsSchema: z.ZodType<Prisma.UserFindFirstArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([ UserOrderByWithRelationInputSchema.array(),UserOrderByWithRelationInputSchema ]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ UserScalarFieldEnumSchema,UserScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const UserFindFirstOrThrowArgsSchema: z.ZodType<Prisma.UserFindFirstOrThrowArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([ UserOrderByWithRelationInputSchema.array(),UserOrderByWithRelationInputSchema ]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ UserScalarFieldEnumSchema,UserScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const UserFindManyArgsSchema: z.ZodType<Prisma.UserFindManyArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([ UserOrderByWithRelationInputSchema.array(),UserOrderByWithRelationInputSchema ]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ UserScalarFieldEnumSchema,UserScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const UserAggregateArgsSchema: z.ZodType<Prisma.UserAggregateArgs> = z.object({
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([ UserOrderByWithRelationInputSchema.array(),UserOrderByWithRelationInputSchema ]).optional(),
  cursor: UserWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const UserGroupByArgsSchema: z.ZodType<Prisma.UserGroupByArgs> = z.object({
  where: UserWhereInputSchema.optional(),
  orderBy: z.union([ UserOrderByWithAggregationInputSchema.array(),UserOrderByWithAggregationInputSchema ]).optional(),
  by: UserScalarFieldEnumSchema.array(),
  having: UserScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const UserFindUniqueArgsSchema: z.ZodType<Prisma.UserFindUniqueArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict() ;

export const UserFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.UserFindUniqueOrThrowArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict() ;

export const PermissionFindFirstArgsSchema: z.ZodType<Prisma.PermissionFindFirstArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereInputSchema.optional(),
  orderBy: z.union([ PermissionOrderByWithRelationInputSchema.array(),PermissionOrderByWithRelationInputSchema ]).optional(),
  cursor: PermissionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PermissionScalarFieldEnumSchema,PermissionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PermissionFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PermissionFindFirstOrThrowArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereInputSchema.optional(),
  orderBy: z.union([ PermissionOrderByWithRelationInputSchema.array(),PermissionOrderByWithRelationInputSchema ]).optional(),
  cursor: PermissionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PermissionScalarFieldEnumSchema,PermissionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PermissionFindManyArgsSchema: z.ZodType<Prisma.PermissionFindManyArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereInputSchema.optional(),
  orderBy: z.union([ PermissionOrderByWithRelationInputSchema.array(),PermissionOrderByWithRelationInputSchema ]).optional(),
  cursor: PermissionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PermissionScalarFieldEnumSchema,PermissionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PermissionAggregateArgsSchema: z.ZodType<Prisma.PermissionAggregateArgs> = z.object({
  where: PermissionWhereInputSchema.optional(),
  orderBy: z.union([ PermissionOrderByWithRelationInputSchema.array(),PermissionOrderByWithRelationInputSchema ]).optional(),
  cursor: PermissionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PermissionGroupByArgsSchema: z.ZodType<Prisma.PermissionGroupByArgs> = z.object({
  where: PermissionWhereInputSchema.optional(),
  orderBy: z.union([ PermissionOrderByWithAggregationInputSchema.array(),PermissionOrderByWithAggregationInputSchema ]).optional(),
  by: PermissionScalarFieldEnumSchema.array(),
  having: PermissionScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PermissionFindUniqueArgsSchema: z.ZodType<Prisma.PermissionFindUniqueArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereUniqueInputSchema,
}).strict() ;

export const PermissionFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PermissionFindUniqueOrThrowArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereUniqueInputSchema,
}).strict() ;

export const BoxFindFirstArgsSchema: z.ZodType<Prisma.BoxFindFirstArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereInputSchema.optional(),
  orderBy: z.union([ BoxOrderByWithRelationInputSchema.array(),BoxOrderByWithRelationInputSchema ]).optional(),
  cursor: BoxWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BoxScalarFieldEnumSchema,BoxScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BoxFindFirstOrThrowArgsSchema: z.ZodType<Prisma.BoxFindFirstOrThrowArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereInputSchema.optional(),
  orderBy: z.union([ BoxOrderByWithRelationInputSchema.array(),BoxOrderByWithRelationInputSchema ]).optional(),
  cursor: BoxWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BoxScalarFieldEnumSchema,BoxScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BoxFindManyArgsSchema: z.ZodType<Prisma.BoxFindManyArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereInputSchema.optional(),
  orderBy: z.union([ BoxOrderByWithRelationInputSchema.array(),BoxOrderByWithRelationInputSchema ]).optional(),
  cursor: BoxWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BoxScalarFieldEnumSchema,BoxScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BoxAggregateArgsSchema: z.ZodType<Prisma.BoxAggregateArgs> = z.object({
  where: BoxWhereInputSchema.optional(),
  orderBy: z.union([ BoxOrderByWithRelationInputSchema.array(),BoxOrderByWithRelationInputSchema ]).optional(),
  cursor: BoxWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BoxGroupByArgsSchema: z.ZodType<Prisma.BoxGroupByArgs> = z.object({
  where: BoxWhereInputSchema.optional(),
  orderBy: z.union([ BoxOrderByWithAggregationInputSchema.array(),BoxOrderByWithAggregationInputSchema ]).optional(),
  by: BoxScalarFieldEnumSchema.array(),
  having: BoxScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BoxFindUniqueArgsSchema: z.ZodType<Prisma.BoxFindUniqueArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereUniqueInputSchema,
}).strict() ;

export const BoxFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.BoxFindUniqueOrThrowArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereUniqueInputSchema,
}).strict() ;

export const ShipmentLogFindFirstArgsSchema: z.ZodType<Prisma.ShipmentLogFindFirstArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereInputSchema.optional(),
  orderBy: z.union([ ShipmentLogOrderByWithRelationInputSchema.array(),ShipmentLogOrderByWithRelationInputSchema ]).optional(),
  cursor: ShipmentLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ShipmentLogScalarFieldEnumSchema,ShipmentLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ShipmentLogFindFirstOrThrowArgsSchema: z.ZodType<Prisma.ShipmentLogFindFirstOrThrowArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereInputSchema.optional(),
  orderBy: z.union([ ShipmentLogOrderByWithRelationInputSchema.array(),ShipmentLogOrderByWithRelationInputSchema ]).optional(),
  cursor: ShipmentLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ShipmentLogScalarFieldEnumSchema,ShipmentLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ShipmentLogFindManyArgsSchema: z.ZodType<Prisma.ShipmentLogFindManyArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereInputSchema.optional(),
  orderBy: z.union([ ShipmentLogOrderByWithRelationInputSchema.array(),ShipmentLogOrderByWithRelationInputSchema ]).optional(),
  cursor: ShipmentLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ShipmentLogScalarFieldEnumSchema,ShipmentLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ShipmentLogAggregateArgsSchema: z.ZodType<Prisma.ShipmentLogAggregateArgs> = z.object({
  where: ShipmentLogWhereInputSchema.optional(),
  orderBy: z.union([ ShipmentLogOrderByWithRelationInputSchema.array(),ShipmentLogOrderByWithRelationInputSchema ]).optional(),
  cursor: ShipmentLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ShipmentLogGroupByArgsSchema: z.ZodType<Prisma.ShipmentLogGroupByArgs> = z.object({
  where: ShipmentLogWhereInputSchema.optional(),
  orderBy: z.union([ ShipmentLogOrderByWithAggregationInputSchema.array(),ShipmentLogOrderByWithAggregationInputSchema ]).optional(),
  by: ShipmentLogScalarFieldEnumSchema.array(),
  having: ShipmentLogScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ShipmentLogFindUniqueArgsSchema: z.ZodType<Prisma.ShipmentLogFindUniqueArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereUniqueInputSchema,
}).strict() ;

export const ShipmentLogFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.ShipmentLogFindUniqueOrThrowArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereUniqueInputSchema,
}).strict() ;

export const CustomerFindFirstArgsSchema: z.ZodType<Prisma.CustomerFindFirstArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereInputSchema.optional(),
  orderBy: z.union([ CustomerOrderByWithRelationInputSchema.array(),CustomerOrderByWithRelationInputSchema ]).optional(),
  cursor: CustomerWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CustomerScalarFieldEnumSchema,CustomerScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CustomerFindFirstOrThrowArgsSchema: z.ZodType<Prisma.CustomerFindFirstOrThrowArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereInputSchema.optional(),
  orderBy: z.union([ CustomerOrderByWithRelationInputSchema.array(),CustomerOrderByWithRelationInputSchema ]).optional(),
  cursor: CustomerWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CustomerScalarFieldEnumSchema,CustomerScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CustomerFindManyArgsSchema: z.ZodType<Prisma.CustomerFindManyArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereInputSchema.optional(),
  orderBy: z.union([ CustomerOrderByWithRelationInputSchema.array(),CustomerOrderByWithRelationInputSchema ]).optional(),
  cursor: CustomerWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CustomerScalarFieldEnumSchema,CustomerScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CustomerAggregateArgsSchema: z.ZodType<Prisma.CustomerAggregateArgs> = z.object({
  where: CustomerWhereInputSchema.optional(),
  orderBy: z.union([ CustomerOrderByWithRelationInputSchema.array(),CustomerOrderByWithRelationInputSchema ]).optional(),
  cursor: CustomerWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const CustomerGroupByArgsSchema: z.ZodType<Prisma.CustomerGroupByArgs> = z.object({
  where: CustomerWhereInputSchema.optional(),
  orderBy: z.union([ CustomerOrderByWithAggregationInputSchema.array(),CustomerOrderByWithAggregationInputSchema ]).optional(),
  by: CustomerScalarFieldEnumSchema.array(),
  having: CustomerScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const CustomerFindUniqueArgsSchema: z.ZodType<Prisma.CustomerFindUniqueArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereUniqueInputSchema,
}).strict() ;

export const CustomerFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.CustomerFindUniqueOrThrowArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereUniqueInputSchema,
}).strict() ;

export const FBAOrderFindFirstArgsSchema: z.ZodType<Prisma.FBAOrderFindFirstArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereInputSchema.optional(),
  orderBy: z.union([ FBAOrderOrderByWithRelationInputSchema.array(),FBAOrderOrderByWithRelationInputSchema ]).optional(),
  cursor: FBAOrderWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FBAOrderScalarFieldEnumSchema,FBAOrderScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FBAOrderFindFirstOrThrowArgsSchema: z.ZodType<Prisma.FBAOrderFindFirstOrThrowArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereInputSchema.optional(),
  orderBy: z.union([ FBAOrderOrderByWithRelationInputSchema.array(),FBAOrderOrderByWithRelationInputSchema ]).optional(),
  cursor: FBAOrderWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FBAOrderScalarFieldEnumSchema,FBAOrderScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FBAOrderFindManyArgsSchema: z.ZodType<Prisma.FBAOrderFindManyArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereInputSchema.optional(),
  orderBy: z.union([ FBAOrderOrderByWithRelationInputSchema.array(),FBAOrderOrderByWithRelationInputSchema ]).optional(),
  cursor: FBAOrderWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FBAOrderScalarFieldEnumSchema,FBAOrderScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FBAOrderAggregateArgsSchema: z.ZodType<Prisma.FBAOrderAggregateArgs> = z.object({
  where: FBAOrderWhereInputSchema.optional(),
  orderBy: z.union([ FBAOrderOrderByWithRelationInputSchema.array(),FBAOrderOrderByWithRelationInputSchema ]).optional(),
  cursor: FBAOrderWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const FBAOrderGroupByArgsSchema: z.ZodType<Prisma.FBAOrderGroupByArgs> = z.object({
  where: FBAOrderWhereInputSchema.optional(),
  orderBy: z.union([ FBAOrderOrderByWithAggregationInputSchema.array(),FBAOrderOrderByWithAggregationInputSchema ]).optional(),
  by: FBAOrderScalarFieldEnumSchema.array(),
  having: FBAOrderScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const FBAOrderFindUniqueArgsSchema: z.ZodType<Prisma.FBAOrderFindUniqueArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereUniqueInputSchema,
}).strict() ;

export const FBAOrderFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.FBAOrderFindUniqueOrThrowArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereUniqueInputSchema,
}).strict() ;

export const AttachmentFindFirstArgsSchema: z.ZodType<Prisma.AttachmentFindFirstArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereInputSchema.optional(),
  orderBy: z.union([ AttachmentOrderByWithRelationInputSchema.array(),AttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: AttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ AttachmentScalarFieldEnumSchema,AttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const AttachmentFindFirstOrThrowArgsSchema: z.ZodType<Prisma.AttachmentFindFirstOrThrowArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereInputSchema.optional(),
  orderBy: z.union([ AttachmentOrderByWithRelationInputSchema.array(),AttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: AttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ AttachmentScalarFieldEnumSchema,AttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const AttachmentFindManyArgsSchema: z.ZodType<Prisma.AttachmentFindManyArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereInputSchema.optional(),
  orderBy: z.union([ AttachmentOrderByWithRelationInputSchema.array(),AttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: AttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ AttachmentScalarFieldEnumSchema,AttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const AttachmentAggregateArgsSchema: z.ZodType<Prisma.AttachmentAggregateArgs> = z.object({
  where: AttachmentWhereInputSchema.optional(),
  orderBy: z.union([ AttachmentOrderByWithRelationInputSchema.array(),AttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: AttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const AttachmentGroupByArgsSchema: z.ZodType<Prisma.AttachmentGroupByArgs> = z.object({
  where: AttachmentWhereInputSchema.optional(),
  orderBy: z.union([ AttachmentOrderByWithAggregationInputSchema.array(),AttachmentOrderByWithAggregationInputSchema ]).optional(),
  by: AttachmentScalarFieldEnumSchema.array(),
  having: AttachmentScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const AttachmentFindUniqueArgsSchema: z.ZodType<Prisma.AttachmentFindUniqueArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereUniqueInputSchema,
}).strict() ;

export const AttachmentFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.AttachmentFindUniqueOrThrowArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereUniqueInputSchema,
}).strict() ;

export const CarrierFindFirstArgsSchema: z.ZodType<Prisma.CarrierFindFirstArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereInputSchema.optional(),
  orderBy: z.union([ CarrierOrderByWithRelationInputSchema.array(),CarrierOrderByWithRelationInputSchema ]).optional(),
  cursor: CarrierWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CarrierScalarFieldEnumSchema,CarrierScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CarrierFindFirstOrThrowArgsSchema: z.ZodType<Prisma.CarrierFindFirstOrThrowArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereInputSchema.optional(),
  orderBy: z.union([ CarrierOrderByWithRelationInputSchema.array(),CarrierOrderByWithRelationInputSchema ]).optional(),
  cursor: CarrierWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CarrierScalarFieldEnumSchema,CarrierScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CarrierFindManyArgsSchema: z.ZodType<Prisma.CarrierFindManyArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereInputSchema.optional(),
  orderBy: z.union([ CarrierOrderByWithRelationInputSchema.array(),CarrierOrderByWithRelationInputSchema ]).optional(),
  cursor: CarrierWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ CarrierScalarFieldEnumSchema,CarrierScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const CarrierAggregateArgsSchema: z.ZodType<Prisma.CarrierAggregateArgs> = z.object({
  where: CarrierWhereInputSchema.optional(),
  orderBy: z.union([ CarrierOrderByWithRelationInputSchema.array(),CarrierOrderByWithRelationInputSchema ]).optional(),
  cursor: CarrierWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const CarrierGroupByArgsSchema: z.ZodType<Prisma.CarrierGroupByArgs> = z.object({
  where: CarrierWhereInputSchema.optional(),
  orderBy: z.union([ CarrierOrderByWithAggregationInputSchema.array(),CarrierOrderByWithAggregationInputSchema ]).optional(),
  by: CarrierScalarFieldEnumSchema.array(),
  having: CarrierScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const CarrierFindUniqueArgsSchema: z.ZodType<Prisma.CarrierFindUniqueArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereUniqueInputSchema,
}).strict() ;

export const CarrierFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.CarrierFindUniqueOrThrowArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereUniqueInputSchema,
}).strict() ;

export const ChannelFindFirstArgsSchema: z.ZodType<Prisma.ChannelFindFirstArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereInputSchema.optional(),
  orderBy: z.union([ ChannelOrderByWithRelationInputSchema.array(),ChannelOrderByWithRelationInputSchema ]).optional(),
  cursor: ChannelWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ChannelScalarFieldEnumSchema,ChannelScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ChannelFindFirstOrThrowArgsSchema: z.ZodType<Prisma.ChannelFindFirstOrThrowArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereInputSchema.optional(),
  orderBy: z.union([ ChannelOrderByWithRelationInputSchema.array(),ChannelOrderByWithRelationInputSchema ]).optional(),
  cursor: ChannelWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ChannelScalarFieldEnumSchema,ChannelScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ChannelFindManyArgsSchema: z.ZodType<Prisma.ChannelFindManyArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereInputSchema.optional(),
  orderBy: z.union([ ChannelOrderByWithRelationInputSchema.array(),ChannelOrderByWithRelationInputSchema ]).optional(),
  cursor: ChannelWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ChannelScalarFieldEnumSchema,ChannelScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ChannelAggregateArgsSchema: z.ZodType<Prisma.ChannelAggregateArgs> = z.object({
  where: ChannelWhereInputSchema.optional(),
  orderBy: z.union([ ChannelOrderByWithRelationInputSchema.array(),ChannelOrderByWithRelationInputSchema ]).optional(),
  cursor: ChannelWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ChannelGroupByArgsSchema: z.ZodType<Prisma.ChannelGroupByArgs> = z.object({
  where: ChannelWhereInputSchema.optional(),
  orderBy: z.union([ ChannelOrderByWithAggregationInputSchema.array(),ChannelOrderByWithAggregationInputSchema ]).optional(),
  by: ChannelScalarFieldEnumSchema.array(),
  having: ChannelScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ChannelFindUniqueArgsSchema: z.ZodType<Prisma.ChannelFindUniqueArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereUniqueInputSchema,
}).strict() ;

export const ChannelFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.ChannelFindUniqueOrThrowArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereUniqueInputSchema,
}).strict() ;

export const RateRuleFindFirstArgsSchema: z.ZodType<Prisma.RateRuleFindFirstArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereInputSchema.optional(),
  orderBy: z.union([ RateRuleOrderByWithRelationInputSchema.array(),RateRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: RateRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ RateRuleScalarFieldEnumSchema,RateRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const RateRuleFindFirstOrThrowArgsSchema: z.ZodType<Prisma.RateRuleFindFirstOrThrowArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereInputSchema.optional(),
  orderBy: z.union([ RateRuleOrderByWithRelationInputSchema.array(),RateRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: RateRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ RateRuleScalarFieldEnumSchema,RateRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const RateRuleFindManyArgsSchema: z.ZodType<Prisma.RateRuleFindManyArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereInputSchema.optional(),
  orderBy: z.union([ RateRuleOrderByWithRelationInputSchema.array(),RateRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: RateRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ RateRuleScalarFieldEnumSchema,RateRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const RateRuleAggregateArgsSchema: z.ZodType<Prisma.RateRuleAggregateArgs> = z.object({
  where: RateRuleWhereInputSchema.optional(),
  orderBy: z.union([ RateRuleOrderByWithRelationInputSchema.array(),RateRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: RateRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const RateRuleGroupByArgsSchema: z.ZodType<Prisma.RateRuleGroupByArgs> = z.object({
  where: RateRuleWhereInputSchema.optional(),
  orderBy: z.union([ RateRuleOrderByWithAggregationInputSchema.array(),RateRuleOrderByWithAggregationInputSchema ]).optional(),
  by: RateRuleScalarFieldEnumSchema.array(),
  having: RateRuleScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const RateRuleFindUniqueArgsSchema: z.ZodType<Prisma.RateRuleFindUniqueArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereUniqueInputSchema,
}).strict() ;

export const RateRuleFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.RateRuleFindUniqueOrThrowArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereUniqueInputSchema,
}).strict() ;

export const WaybillRuleFindFirstArgsSchema: z.ZodType<Prisma.WaybillRuleFindFirstArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereInputSchema.optional(),
  orderBy: z.union([ WaybillRuleOrderByWithRelationInputSchema.array(),WaybillRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: WaybillRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ WaybillRuleScalarFieldEnumSchema,WaybillRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const WaybillRuleFindFirstOrThrowArgsSchema: z.ZodType<Prisma.WaybillRuleFindFirstOrThrowArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereInputSchema.optional(),
  orderBy: z.union([ WaybillRuleOrderByWithRelationInputSchema.array(),WaybillRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: WaybillRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ WaybillRuleScalarFieldEnumSchema,WaybillRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const WaybillRuleFindManyArgsSchema: z.ZodType<Prisma.WaybillRuleFindManyArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereInputSchema.optional(),
  orderBy: z.union([ WaybillRuleOrderByWithRelationInputSchema.array(),WaybillRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: WaybillRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ WaybillRuleScalarFieldEnumSchema,WaybillRuleScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const WaybillRuleAggregateArgsSchema: z.ZodType<Prisma.WaybillRuleAggregateArgs> = z.object({
  where: WaybillRuleWhereInputSchema.optional(),
  orderBy: z.union([ WaybillRuleOrderByWithRelationInputSchema.array(),WaybillRuleOrderByWithRelationInputSchema ]).optional(),
  cursor: WaybillRuleWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const WaybillRuleGroupByArgsSchema: z.ZodType<Prisma.WaybillRuleGroupByArgs> = z.object({
  where: WaybillRuleWhereInputSchema.optional(),
  orderBy: z.union([ WaybillRuleOrderByWithAggregationInputSchema.array(),WaybillRuleOrderByWithAggregationInputSchema ]).optional(),
  by: WaybillRuleScalarFieldEnumSchema.array(),
  having: WaybillRuleScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const WaybillRuleFindUniqueArgsSchema: z.ZodType<Prisma.WaybillRuleFindUniqueArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereUniqueInputSchema,
}).strict() ;

export const WaybillRuleFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.WaybillRuleFindUniqueOrThrowArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereUniqueInputSchema,
}).strict() ;

export const ReceivableFindFirstArgsSchema: z.ZodType<Prisma.ReceivableFindFirstArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereInputSchema.optional(),
  orderBy: z.union([ ReceivableOrderByWithRelationInputSchema.array(),ReceivableOrderByWithRelationInputSchema ]).optional(),
  cursor: ReceivableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ReceivableScalarFieldEnumSchema,ReceivableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ReceivableFindFirstOrThrowArgsSchema: z.ZodType<Prisma.ReceivableFindFirstOrThrowArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereInputSchema.optional(),
  orderBy: z.union([ ReceivableOrderByWithRelationInputSchema.array(),ReceivableOrderByWithRelationInputSchema ]).optional(),
  cursor: ReceivableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ReceivableScalarFieldEnumSchema,ReceivableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ReceivableFindManyArgsSchema: z.ZodType<Prisma.ReceivableFindManyArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereInputSchema.optional(),
  orderBy: z.union([ ReceivableOrderByWithRelationInputSchema.array(),ReceivableOrderByWithRelationInputSchema ]).optional(),
  cursor: ReceivableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ ReceivableScalarFieldEnumSchema,ReceivableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const ReceivableAggregateArgsSchema: z.ZodType<Prisma.ReceivableAggregateArgs> = z.object({
  where: ReceivableWhereInputSchema.optional(),
  orderBy: z.union([ ReceivableOrderByWithRelationInputSchema.array(),ReceivableOrderByWithRelationInputSchema ]).optional(),
  cursor: ReceivableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ReceivableGroupByArgsSchema: z.ZodType<Prisma.ReceivableGroupByArgs> = z.object({
  where: ReceivableWhereInputSchema.optional(),
  orderBy: z.union([ ReceivableOrderByWithAggregationInputSchema.array(),ReceivableOrderByWithAggregationInputSchema ]).optional(),
  by: ReceivableScalarFieldEnumSchema.array(),
  having: ReceivableScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const ReceivableFindUniqueArgsSchema: z.ZodType<Prisma.ReceivableFindUniqueArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereUniqueInputSchema,
}).strict() ;

export const ReceivableFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.ReceivableFindUniqueOrThrowArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereUniqueInputSchema,
}).strict() ;

export const PayableFindFirstArgsSchema: z.ZodType<Prisma.PayableFindFirstArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereInputSchema.optional(),
  orderBy: z.union([ PayableOrderByWithRelationInputSchema.array(),PayableOrderByWithRelationInputSchema ]).optional(),
  cursor: PayableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PayableScalarFieldEnumSchema,PayableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PayableFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PayableFindFirstOrThrowArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereInputSchema.optional(),
  orderBy: z.union([ PayableOrderByWithRelationInputSchema.array(),PayableOrderByWithRelationInputSchema ]).optional(),
  cursor: PayableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PayableScalarFieldEnumSchema,PayableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PayableFindManyArgsSchema: z.ZodType<Prisma.PayableFindManyArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereInputSchema.optional(),
  orderBy: z.union([ PayableOrderByWithRelationInputSchema.array(),PayableOrderByWithRelationInputSchema ]).optional(),
  cursor: PayableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PayableScalarFieldEnumSchema,PayableScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PayableAggregateArgsSchema: z.ZodType<Prisma.PayableAggregateArgs> = z.object({
  where: PayableWhereInputSchema.optional(),
  orderBy: z.union([ PayableOrderByWithRelationInputSchema.array(),PayableOrderByWithRelationInputSchema ]).optional(),
  cursor: PayableWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PayableGroupByArgsSchema: z.ZodType<Prisma.PayableGroupByArgs> = z.object({
  where: PayableWhereInputSchema.optional(),
  orderBy: z.union([ PayableOrderByWithAggregationInputSchema.array(),PayableOrderByWithAggregationInputSchema ]).optional(),
  by: PayableScalarFieldEnumSchema.array(),
  having: PayableScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PayableFindUniqueArgsSchema: z.ZodType<Prisma.PayableFindUniqueArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereUniqueInputSchema,
}).strict() ;

export const PayableFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PayableFindUniqueOrThrowArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereUniqueInputSchema,
}).strict() ;

export const TransportPriceFindFirstArgsSchema: z.ZodType<Prisma.TransportPriceFindFirstArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereInputSchema.optional(),
  orderBy: z.union([ TransportPriceOrderByWithRelationInputSchema.array(),TransportPriceOrderByWithRelationInputSchema ]).optional(),
  cursor: TransportPriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TransportPriceScalarFieldEnumSchema,TransportPriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TransportPriceFindFirstOrThrowArgsSchema: z.ZodType<Prisma.TransportPriceFindFirstOrThrowArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereInputSchema.optional(),
  orderBy: z.union([ TransportPriceOrderByWithRelationInputSchema.array(),TransportPriceOrderByWithRelationInputSchema ]).optional(),
  cursor: TransportPriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TransportPriceScalarFieldEnumSchema,TransportPriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TransportPriceFindManyArgsSchema: z.ZodType<Prisma.TransportPriceFindManyArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereInputSchema.optional(),
  orderBy: z.union([ TransportPriceOrderByWithRelationInputSchema.array(),TransportPriceOrderByWithRelationInputSchema ]).optional(),
  cursor: TransportPriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ TransportPriceScalarFieldEnumSchema,TransportPriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const TransportPriceAggregateArgsSchema: z.ZodType<Prisma.TransportPriceAggregateArgs> = z.object({
  where: TransportPriceWhereInputSchema.optional(),
  orderBy: z.union([ TransportPriceOrderByWithRelationInputSchema.array(),TransportPriceOrderByWithRelationInputSchema ]).optional(),
  cursor: TransportPriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const TransportPriceGroupByArgsSchema: z.ZodType<Prisma.TransportPriceGroupByArgs> = z.object({
  where: TransportPriceWhereInputSchema.optional(),
  orderBy: z.union([ TransportPriceOrderByWithAggregationInputSchema.array(),TransportPriceOrderByWithAggregationInputSchema ]).optional(),
  by: TransportPriceScalarFieldEnumSchema.array(),
  having: TransportPriceScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const TransportPriceFindUniqueArgsSchema: z.ZodType<Prisma.TransportPriceFindUniqueArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereUniqueInputSchema,
}).strict() ;

export const TransportPriceFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.TransportPriceFindUniqueOrThrowArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereUniqueInputSchema,
}).strict() ;

export const PriceSettingFindFirstArgsSchema: z.ZodType<Prisma.PriceSettingFindFirstArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereInputSchema.optional(),
  orderBy: z.union([ PriceSettingOrderByWithRelationInputSchema.array(),PriceSettingOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceSettingWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceSettingScalarFieldEnumSchema,PriceSettingScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceSettingFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PriceSettingFindFirstOrThrowArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereInputSchema.optional(),
  orderBy: z.union([ PriceSettingOrderByWithRelationInputSchema.array(),PriceSettingOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceSettingWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceSettingScalarFieldEnumSchema,PriceSettingScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceSettingFindManyArgsSchema: z.ZodType<Prisma.PriceSettingFindManyArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereInputSchema.optional(),
  orderBy: z.union([ PriceSettingOrderByWithRelationInputSchema.array(),PriceSettingOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceSettingWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceSettingScalarFieldEnumSchema,PriceSettingScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceSettingAggregateArgsSchema: z.ZodType<Prisma.PriceSettingAggregateArgs> = z.object({
  where: PriceSettingWhereInputSchema.optional(),
  orderBy: z.union([ PriceSettingOrderByWithRelationInputSchema.array(),PriceSettingOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceSettingWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PriceSettingGroupByArgsSchema: z.ZodType<Prisma.PriceSettingGroupByArgs> = z.object({
  where: PriceSettingWhereInputSchema.optional(),
  orderBy: z.union([ PriceSettingOrderByWithAggregationInputSchema.array(),PriceSettingOrderByWithAggregationInputSchema ]).optional(),
  by: PriceSettingScalarFieldEnumSchema.array(),
  having: PriceSettingScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PriceSettingFindUniqueArgsSchema: z.ZodType<Prisma.PriceSettingFindUniqueArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereUniqueInputSchema,
}).strict() ;

export const PriceSettingFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PriceSettingFindUniqueOrThrowArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereUniqueInputSchema,
}).strict() ;

export const PriceFindFirstArgsSchema: z.ZodType<Prisma.PriceFindFirstArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereInputSchema.optional(),
  orderBy: z.union([ PriceOrderByWithRelationInputSchema.array(),PriceOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceScalarFieldEnumSchema,PriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PriceFindFirstOrThrowArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereInputSchema.optional(),
  orderBy: z.union([ PriceOrderByWithRelationInputSchema.array(),PriceOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceScalarFieldEnumSchema,PriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceFindManyArgsSchema: z.ZodType<Prisma.PriceFindManyArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereInputSchema.optional(),
  orderBy: z.union([ PriceOrderByWithRelationInputSchema.array(),PriceOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PriceScalarFieldEnumSchema,PriceScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PriceAggregateArgsSchema: z.ZodType<Prisma.PriceAggregateArgs> = z.object({
  where: PriceWhereInputSchema.optional(),
  orderBy: z.union([ PriceOrderByWithRelationInputSchema.array(),PriceOrderByWithRelationInputSchema ]).optional(),
  cursor: PriceWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PriceGroupByArgsSchema: z.ZodType<Prisma.PriceGroupByArgs> = z.object({
  where: PriceWhereInputSchema.optional(),
  orderBy: z.union([ PriceOrderByWithAggregationInputSchema.array(),PriceOrderByWithAggregationInputSchema ]).optional(),
  by: PriceScalarFieldEnumSchema.array(),
  having: PriceScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PriceFindUniqueArgsSchema: z.ZodType<Prisma.PriceFindUniqueArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereUniqueInputSchema,
}).strict() ;

export const PriceFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PriceFindUniqueOrThrowArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereUniqueInputSchema,
}).strict() ;

export const PositionFindFirstArgsSchema: z.ZodType<Prisma.PositionFindFirstArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereInputSchema.optional(),
  orderBy: z.union([ PositionOrderByWithRelationInputSchema.array(),PositionOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionScalarFieldEnumSchema,PositionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PositionFindFirstOrThrowArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereInputSchema.optional(),
  orderBy: z.union([ PositionOrderByWithRelationInputSchema.array(),PositionOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionScalarFieldEnumSchema,PositionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionFindManyArgsSchema: z.ZodType<Prisma.PositionFindManyArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereInputSchema.optional(),
  orderBy: z.union([ PositionOrderByWithRelationInputSchema.array(),PositionOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionScalarFieldEnumSchema,PositionScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionAggregateArgsSchema: z.ZodType<Prisma.PositionAggregateArgs> = z.object({
  where: PositionWhereInputSchema.optional(),
  orderBy: z.union([ PositionOrderByWithRelationInputSchema.array(),PositionOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PositionGroupByArgsSchema: z.ZodType<Prisma.PositionGroupByArgs> = z.object({
  where: PositionWhereInputSchema.optional(),
  orderBy: z.union([ PositionOrderByWithAggregationInputSchema.array(),PositionOrderByWithAggregationInputSchema ]).optional(),
  by: PositionScalarFieldEnumSchema.array(),
  having: PositionScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PositionFindUniqueArgsSchema: z.ZodType<Prisma.PositionFindUniqueArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereUniqueInputSchema,
}).strict() ;

export const PositionFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PositionFindUniqueOrThrowArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereUniqueInputSchema,
}).strict() ;

export const PositionMemberFindFirstArgsSchema: z.ZodType<Prisma.PositionMemberFindFirstArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereInputSchema.optional(),
  orderBy: z.union([ PositionMemberOrderByWithRelationInputSchema.array(),PositionMemberOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionMemberWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionMemberScalarFieldEnumSchema,PositionMemberScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionMemberFindFirstOrThrowArgsSchema: z.ZodType<Prisma.PositionMemberFindFirstOrThrowArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereInputSchema.optional(),
  orderBy: z.union([ PositionMemberOrderByWithRelationInputSchema.array(),PositionMemberOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionMemberWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionMemberScalarFieldEnumSchema,PositionMemberScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionMemberFindManyArgsSchema: z.ZodType<Prisma.PositionMemberFindManyArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereInputSchema.optional(),
  orderBy: z.union([ PositionMemberOrderByWithRelationInputSchema.array(),PositionMemberOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionMemberWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ PositionMemberScalarFieldEnumSchema,PositionMemberScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const PositionMemberAggregateArgsSchema: z.ZodType<Prisma.PositionMemberAggregateArgs> = z.object({
  where: PositionMemberWhereInputSchema.optional(),
  orderBy: z.union([ PositionMemberOrderByWithRelationInputSchema.array(),PositionMemberOrderByWithRelationInputSchema ]).optional(),
  cursor: PositionMemberWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PositionMemberGroupByArgsSchema: z.ZodType<Prisma.PositionMemberGroupByArgs> = z.object({
  where: PositionMemberWhereInputSchema.optional(),
  orderBy: z.union([ PositionMemberOrderByWithAggregationInputSchema.array(),PositionMemberOrderByWithAggregationInputSchema ]).optional(),
  by: PositionMemberScalarFieldEnumSchema.array(),
  having: PositionMemberScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const PositionMemberFindUniqueArgsSchema: z.ZodType<Prisma.PositionMemberFindUniqueArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereUniqueInputSchema,
}).strict() ;

export const PositionMemberFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.PositionMemberFindUniqueOrThrowArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereUniqueInputSchema,
}).strict() ;

export const LoginLogFindFirstArgsSchema: z.ZodType<Prisma.LoginLogFindFirstArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereInputSchema.optional(),
  orderBy: z.union([ LoginLogOrderByWithRelationInputSchema.array(),LoginLogOrderByWithRelationInputSchema ]).optional(),
  cursor: LoginLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ LoginLogScalarFieldEnumSchema,LoginLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const LoginLogFindFirstOrThrowArgsSchema: z.ZodType<Prisma.LoginLogFindFirstOrThrowArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereInputSchema.optional(),
  orderBy: z.union([ LoginLogOrderByWithRelationInputSchema.array(),LoginLogOrderByWithRelationInputSchema ]).optional(),
  cursor: LoginLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ LoginLogScalarFieldEnumSchema,LoginLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const LoginLogFindManyArgsSchema: z.ZodType<Prisma.LoginLogFindManyArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereInputSchema.optional(),
  orderBy: z.union([ LoginLogOrderByWithRelationInputSchema.array(),LoginLogOrderByWithRelationInputSchema ]).optional(),
  cursor: LoginLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ LoginLogScalarFieldEnumSchema,LoginLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const LoginLogAggregateArgsSchema: z.ZodType<Prisma.LoginLogAggregateArgs> = z.object({
  where: LoginLogWhereInputSchema.optional(),
  orderBy: z.union([ LoginLogOrderByWithRelationInputSchema.array(),LoginLogOrderByWithRelationInputSchema ]).optional(),
  cursor: LoginLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const LoginLogGroupByArgsSchema: z.ZodType<Prisma.LoginLogGroupByArgs> = z.object({
  where: LoginLogWhereInputSchema.optional(),
  orderBy: z.union([ LoginLogOrderByWithAggregationInputSchema.array(),LoginLogOrderByWithAggregationInputSchema ]).optional(),
  by: LoginLogScalarFieldEnumSchema.array(),
  having: LoginLogScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const LoginLogFindUniqueArgsSchema: z.ZodType<Prisma.LoginLogFindUniqueArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereUniqueInputSchema,
}).strict() ;

export const LoginLogFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.LoginLogFindUniqueOrThrowArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereUniqueInputSchema,
}).strict() ;

export const FinanceBillFindFirstArgsSchema: z.ZodType<Prisma.FinanceBillFindFirstArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereInputSchema.optional(),
  orderBy: z.union([ FinanceBillOrderByWithRelationInputSchema.array(),FinanceBillOrderByWithRelationInputSchema ]).optional(),
  cursor: FinanceBillWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FinanceBillScalarFieldEnumSchema,FinanceBillScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FinanceBillFindFirstOrThrowArgsSchema: z.ZodType<Prisma.FinanceBillFindFirstOrThrowArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereInputSchema.optional(),
  orderBy: z.union([ FinanceBillOrderByWithRelationInputSchema.array(),FinanceBillOrderByWithRelationInputSchema ]).optional(),
  cursor: FinanceBillWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FinanceBillScalarFieldEnumSchema,FinanceBillScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FinanceBillFindManyArgsSchema: z.ZodType<Prisma.FinanceBillFindManyArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereInputSchema.optional(),
  orderBy: z.union([ FinanceBillOrderByWithRelationInputSchema.array(),FinanceBillOrderByWithRelationInputSchema ]).optional(),
  cursor: FinanceBillWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ FinanceBillScalarFieldEnumSchema,FinanceBillScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const FinanceBillAggregateArgsSchema: z.ZodType<Prisma.FinanceBillAggregateArgs> = z.object({
  where: FinanceBillWhereInputSchema.optional(),
  orderBy: z.union([ FinanceBillOrderByWithRelationInputSchema.array(),FinanceBillOrderByWithRelationInputSchema ]).optional(),
  cursor: FinanceBillWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const FinanceBillGroupByArgsSchema: z.ZodType<Prisma.FinanceBillGroupByArgs> = z.object({
  where: FinanceBillWhereInputSchema.optional(),
  orderBy: z.union([ FinanceBillOrderByWithAggregationInputSchema.array(),FinanceBillOrderByWithAggregationInputSchema ]).optional(),
  by: FinanceBillScalarFieldEnumSchema.array(),
  having: FinanceBillScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const FinanceBillFindUniqueArgsSchema: z.ZodType<Prisma.FinanceBillFindUniqueArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereUniqueInputSchema,
}).strict() ;

export const FinanceBillFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.FinanceBillFindUniqueOrThrowArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereUniqueInputSchema,
}).strict() ;

export const BillLogFindFirstArgsSchema: z.ZodType<Prisma.BillLogFindFirstArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereInputSchema.optional(),
  orderBy: z.union([ BillLogOrderByWithRelationInputSchema.array(),BillLogOrderByWithRelationInputSchema ]).optional(),
  cursor: BillLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillLogScalarFieldEnumSchema,BillLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillLogFindFirstOrThrowArgsSchema: z.ZodType<Prisma.BillLogFindFirstOrThrowArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereInputSchema.optional(),
  orderBy: z.union([ BillLogOrderByWithRelationInputSchema.array(),BillLogOrderByWithRelationInputSchema ]).optional(),
  cursor: BillLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillLogScalarFieldEnumSchema,BillLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillLogFindManyArgsSchema: z.ZodType<Prisma.BillLogFindManyArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereInputSchema.optional(),
  orderBy: z.union([ BillLogOrderByWithRelationInputSchema.array(),BillLogOrderByWithRelationInputSchema ]).optional(),
  cursor: BillLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillLogScalarFieldEnumSchema,BillLogScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillLogAggregateArgsSchema: z.ZodType<Prisma.BillLogAggregateArgs> = z.object({
  where: BillLogWhereInputSchema.optional(),
  orderBy: z.union([ BillLogOrderByWithRelationInputSchema.array(),BillLogOrderByWithRelationInputSchema ]).optional(),
  cursor: BillLogWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BillLogGroupByArgsSchema: z.ZodType<Prisma.BillLogGroupByArgs> = z.object({
  where: BillLogWhereInputSchema.optional(),
  orderBy: z.union([ BillLogOrderByWithAggregationInputSchema.array(),BillLogOrderByWithAggregationInputSchema ]).optional(),
  by: BillLogScalarFieldEnumSchema.array(),
  having: BillLogScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BillLogFindUniqueArgsSchema: z.ZodType<Prisma.BillLogFindUniqueArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereUniqueInputSchema,
}).strict() ;

export const BillLogFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.BillLogFindUniqueOrThrowArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereUniqueInputSchema,
}).strict() ;

export const BillAttachmentFindFirstArgsSchema: z.ZodType<Prisma.BillAttachmentFindFirstArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereInputSchema.optional(),
  orderBy: z.union([ BillAttachmentOrderByWithRelationInputSchema.array(),BillAttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: BillAttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillAttachmentScalarFieldEnumSchema,BillAttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillAttachmentFindFirstOrThrowArgsSchema: z.ZodType<Prisma.BillAttachmentFindFirstOrThrowArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereInputSchema.optional(),
  orderBy: z.union([ BillAttachmentOrderByWithRelationInputSchema.array(),BillAttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: BillAttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillAttachmentScalarFieldEnumSchema,BillAttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillAttachmentFindManyArgsSchema: z.ZodType<Prisma.BillAttachmentFindManyArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereInputSchema.optional(),
  orderBy: z.union([ BillAttachmentOrderByWithRelationInputSchema.array(),BillAttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: BillAttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
  distinct: z.union([ BillAttachmentScalarFieldEnumSchema,BillAttachmentScalarFieldEnumSchema.array() ]).optional(),
}).strict() ;

export const BillAttachmentAggregateArgsSchema: z.ZodType<Prisma.BillAttachmentAggregateArgs> = z.object({
  where: BillAttachmentWhereInputSchema.optional(),
  orderBy: z.union([ BillAttachmentOrderByWithRelationInputSchema.array(),BillAttachmentOrderByWithRelationInputSchema ]).optional(),
  cursor: BillAttachmentWhereUniqueInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BillAttachmentGroupByArgsSchema: z.ZodType<Prisma.BillAttachmentGroupByArgs> = z.object({
  where: BillAttachmentWhereInputSchema.optional(),
  orderBy: z.union([ BillAttachmentOrderByWithAggregationInputSchema.array(),BillAttachmentOrderByWithAggregationInputSchema ]).optional(),
  by: BillAttachmentScalarFieldEnumSchema.array(),
  having: BillAttachmentScalarWhereWithAggregatesInputSchema.optional(),
  take: z.number().optional(),
  skip: z.number().optional(),
}).strict() ;

export const BillAttachmentFindUniqueArgsSchema: z.ZodType<Prisma.BillAttachmentFindUniqueArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereUniqueInputSchema,
}).strict() ;

export const BillAttachmentFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.BillAttachmentFindUniqueOrThrowArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereUniqueInputSchema,
}).strict() ;

export const TenantCreateArgsSchema: z.ZodType<Prisma.TenantCreateArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  data: z.union([ TenantCreateInputSchema,TenantUncheckedCreateInputSchema ]),
}).strict() ;

export const TenantUpsertArgsSchema: z.ZodType<Prisma.TenantUpsertArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereUniqueInputSchema,
  create: z.union([ TenantCreateInputSchema,TenantUncheckedCreateInputSchema ]),
  update: z.union([ TenantUpdateInputSchema,TenantUncheckedUpdateInputSchema ]),
}).strict() ;

export const TenantCreateManyArgsSchema: z.ZodType<Prisma.TenantCreateManyArgs> = z.object({
  data: z.union([ TenantCreateManyInputSchema,TenantCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const TenantCreateManyAndReturnArgsSchema: z.ZodType<Prisma.TenantCreateManyAndReturnArgs> = z.object({
  data: z.union([ TenantCreateManyInputSchema,TenantCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const TenantDeleteArgsSchema: z.ZodType<Prisma.TenantDeleteArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  where: TenantWhereUniqueInputSchema,
}).strict() ;

export const TenantUpdateArgsSchema: z.ZodType<Prisma.TenantUpdateArgs> = z.object({
  select: TenantSelectSchema.optional(),
  include: TenantIncludeSchema.optional(),
  data: z.union([ TenantUpdateInputSchema,TenantUncheckedUpdateInputSchema ]),
  where: TenantWhereUniqueInputSchema,
}).strict() ;

export const TenantUpdateManyArgsSchema: z.ZodType<Prisma.TenantUpdateManyArgs> = z.object({
  data: z.union([ TenantUpdateManyMutationInputSchema,TenantUncheckedUpdateManyInputSchema ]),
  where: TenantWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const TenantUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.TenantUpdateManyAndReturnArgs> = z.object({
  data: z.union([ TenantUpdateManyMutationInputSchema,TenantUncheckedUpdateManyInputSchema ]),
  where: TenantWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const TenantDeleteManyArgsSchema: z.ZodType<Prisma.TenantDeleteManyArgs> = z.object({
  where: TenantWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const UserCreateArgsSchema: z.ZodType<Prisma.UserCreateArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  data: z.union([ UserCreateInputSchema,UserUncheckedCreateInputSchema ]),
}).strict() ;

export const UserUpsertArgsSchema: z.ZodType<Prisma.UserUpsertArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereUniqueInputSchema,
  create: z.union([ UserCreateInputSchema,UserUncheckedCreateInputSchema ]),
  update: z.union([ UserUpdateInputSchema,UserUncheckedUpdateInputSchema ]),
}).strict() ;

export const UserCreateManyArgsSchema: z.ZodType<Prisma.UserCreateManyArgs> = z.object({
  data: z.union([ UserCreateManyInputSchema,UserCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const UserCreateManyAndReturnArgsSchema: z.ZodType<Prisma.UserCreateManyAndReturnArgs> = z.object({
  data: z.union([ UserCreateManyInputSchema,UserCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const UserDeleteArgsSchema: z.ZodType<Prisma.UserDeleteArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  where: UserWhereUniqueInputSchema,
}).strict() ;

export const UserUpdateArgsSchema: z.ZodType<Prisma.UserUpdateArgs> = z.object({
  select: UserSelectSchema.optional(),
  include: UserIncludeSchema.optional(),
  data: z.union([ UserUpdateInputSchema,UserUncheckedUpdateInputSchema ]),
  where: UserWhereUniqueInputSchema,
}).strict() ;

export const UserUpdateManyArgsSchema: z.ZodType<Prisma.UserUpdateManyArgs> = z.object({
  data: z.union([ UserUpdateManyMutationInputSchema,UserUncheckedUpdateManyInputSchema ]),
  where: UserWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const UserUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.UserUpdateManyAndReturnArgs> = z.object({
  data: z.union([ UserUpdateManyMutationInputSchema,UserUncheckedUpdateManyInputSchema ]),
  where: UserWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const UserDeleteManyArgsSchema: z.ZodType<Prisma.UserDeleteManyArgs> = z.object({
  where: UserWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PermissionCreateArgsSchema: z.ZodType<Prisma.PermissionCreateArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  data: z.union([ PermissionCreateInputSchema,PermissionUncheckedCreateInputSchema ]),
}).strict() ;

export const PermissionUpsertArgsSchema: z.ZodType<Prisma.PermissionUpsertArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereUniqueInputSchema,
  create: z.union([ PermissionCreateInputSchema,PermissionUncheckedCreateInputSchema ]),
  update: z.union([ PermissionUpdateInputSchema,PermissionUncheckedUpdateInputSchema ]),
}).strict() ;

export const PermissionCreateManyArgsSchema: z.ZodType<Prisma.PermissionCreateManyArgs> = z.object({
  data: z.union([ PermissionCreateManyInputSchema,PermissionCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PermissionCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PermissionCreateManyAndReturnArgs> = z.object({
  data: z.union([ PermissionCreateManyInputSchema,PermissionCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PermissionDeleteArgsSchema: z.ZodType<Prisma.PermissionDeleteArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  where: PermissionWhereUniqueInputSchema,
}).strict() ;

export const PermissionUpdateArgsSchema: z.ZodType<Prisma.PermissionUpdateArgs> = z.object({
  select: PermissionSelectSchema.optional(),
  include: PermissionIncludeSchema.optional(),
  data: z.union([ PermissionUpdateInputSchema,PermissionUncheckedUpdateInputSchema ]),
  where: PermissionWhereUniqueInputSchema,
}).strict() ;

export const PermissionUpdateManyArgsSchema: z.ZodType<Prisma.PermissionUpdateManyArgs> = z.object({
  data: z.union([ PermissionUpdateManyMutationInputSchema,PermissionUncheckedUpdateManyInputSchema ]),
  where: PermissionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PermissionUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PermissionUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PermissionUpdateManyMutationInputSchema,PermissionUncheckedUpdateManyInputSchema ]),
  where: PermissionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PermissionDeleteManyArgsSchema: z.ZodType<Prisma.PermissionDeleteManyArgs> = z.object({
  where: PermissionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BoxCreateArgsSchema: z.ZodType<Prisma.BoxCreateArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  data: z.union([ BoxCreateInputSchema,BoxUncheckedCreateInputSchema ]),
}).strict() ;

export const BoxUpsertArgsSchema: z.ZodType<Prisma.BoxUpsertArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereUniqueInputSchema,
  create: z.union([ BoxCreateInputSchema,BoxUncheckedCreateInputSchema ]),
  update: z.union([ BoxUpdateInputSchema,BoxUncheckedUpdateInputSchema ]),
}).strict() ;

export const BoxCreateManyArgsSchema: z.ZodType<Prisma.BoxCreateManyArgs> = z.object({
  data: z.union([ BoxCreateManyInputSchema,BoxCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BoxCreateManyAndReturnArgsSchema: z.ZodType<Prisma.BoxCreateManyAndReturnArgs> = z.object({
  data: z.union([ BoxCreateManyInputSchema,BoxCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BoxDeleteArgsSchema: z.ZodType<Prisma.BoxDeleteArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  where: BoxWhereUniqueInputSchema,
}).strict() ;

export const BoxUpdateArgsSchema: z.ZodType<Prisma.BoxUpdateArgs> = z.object({
  select: BoxSelectSchema.optional(),
  include: BoxIncludeSchema.optional(),
  data: z.union([ BoxUpdateInputSchema,BoxUncheckedUpdateInputSchema ]),
  where: BoxWhereUniqueInputSchema,
}).strict() ;

export const BoxUpdateManyArgsSchema: z.ZodType<Prisma.BoxUpdateManyArgs> = z.object({
  data: z.union([ BoxUpdateManyMutationInputSchema,BoxUncheckedUpdateManyInputSchema ]),
  where: BoxWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BoxUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.BoxUpdateManyAndReturnArgs> = z.object({
  data: z.union([ BoxUpdateManyMutationInputSchema,BoxUncheckedUpdateManyInputSchema ]),
  where: BoxWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BoxDeleteManyArgsSchema: z.ZodType<Prisma.BoxDeleteManyArgs> = z.object({
  where: BoxWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ShipmentLogCreateArgsSchema: z.ZodType<Prisma.ShipmentLogCreateArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  data: z.union([ ShipmentLogCreateInputSchema,ShipmentLogUncheckedCreateInputSchema ]),
}).strict() ;

export const ShipmentLogUpsertArgsSchema: z.ZodType<Prisma.ShipmentLogUpsertArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereUniqueInputSchema,
  create: z.union([ ShipmentLogCreateInputSchema,ShipmentLogUncheckedCreateInputSchema ]),
  update: z.union([ ShipmentLogUpdateInputSchema,ShipmentLogUncheckedUpdateInputSchema ]),
}).strict() ;

export const ShipmentLogCreateManyArgsSchema: z.ZodType<Prisma.ShipmentLogCreateManyArgs> = z.object({
  data: z.union([ ShipmentLogCreateManyInputSchema,ShipmentLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ShipmentLogCreateManyAndReturnArgsSchema: z.ZodType<Prisma.ShipmentLogCreateManyAndReturnArgs> = z.object({
  data: z.union([ ShipmentLogCreateManyInputSchema,ShipmentLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ShipmentLogDeleteArgsSchema: z.ZodType<Prisma.ShipmentLogDeleteArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  where: ShipmentLogWhereUniqueInputSchema,
}).strict() ;

export const ShipmentLogUpdateArgsSchema: z.ZodType<Prisma.ShipmentLogUpdateArgs> = z.object({
  select: ShipmentLogSelectSchema.optional(),
  include: ShipmentLogIncludeSchema.optional(),
  data: z.union([ ShipmentLogUpdateInputSchema,ShipmentLogUncheckedUpdateInputSchema ]),
  where: ShipmentLogWhereUniqueInputSchema,
}).strict() ;

export const ShipmentLogUpdateManyArgsSchema: z.ZodType<Prisma.ShipmentLogUpdateManyArgs> = z.object({
  data: z.union([ ShipmentLogUpdateManyMutationInputSchema,ShipmentLogUncheckedUpdateManyInputSchema ]),
  where: ShipmentLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ShipmentLogUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.ShipmentLogUpdateManyAndReturnArgs> = z.object({
  data: z.union([ ShipmentLogUpdateManyMutationInputSchema,ShipmentLogUncheckedUpdateManyInputSchema ]),
  where: ShipmentLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ShipmentLogDeleteManyArgsSchema: z.ZodType<Prisma.ShipmentLogDeleteManyArgs> = z.object({
  where: ShipmentLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CustomerCreateArgsSchema: z.ZodType<Prisma.CustomerCreateArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  data: z.union([ CustomerCreateInputSchema,CustomerUncheckedCreateInputSchema ]),
}).strict() ;

export const CustomerUpsertArgsSchema: z.ZodType<Prisma.CustomerUpsertArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereUniqueInputSchema,
  create: z.union([ CustomerCreateInputSchema,CustomerUncheckedCreateInputSchema ]),
  update: z.union([ CustomerUpdateInputSchema,CustomerUncheckedUpdateInputSchema ]),
}).strict() ;

export const CustomerCreateManyArgsSchema: z.ZodType<Prisma.CustomerCreateManyArgs> = z.object({
  data: z.union([ CustomerCreateManyInputSchema,CustomerCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const CustomerCreateManyAndReturnArgsSchema: z.ZodType<Prisma.CustomerCreateManyAndReturnArgs> = z.object({
  data: z.union([ CustomerCreateManyInputSchema,CustomerCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const CustomerDeleteArgsSchema: z.ZodType<Prisma.CustomerDeleteArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  where: CustomerWhereUniqueInputSchema,
}).strict() ;

export const CustomerUpdateArgsSchema: z.ZodType<Prisma.CustomerUpdateArgs> = z.object({
  select: CustomerSelectSchema.optional(),
  include: CustomerIncludeSchema.optional(),
  data: z.union([ CustomerUpdateInputSchema,CustomerUncheckedUpdateInputSchema ]),
  where: CustomerWhereUniqueInputSchema,
}).strict() ;

export const CustomerUpdateManyArgsSchema: z.ZodType<Prisma.CustomerUpdateManyArgs> = z.object({
  data: z.union([ CustomerUpdateManyMutationInputSchema,CustomerUncheckedUpdateManyInputSchema ]),
  where: CustomerWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CustomerUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.CustomerUpdateManyAndReturnArgs> = z.object({
  data: z.union([ CustomerUpdateManyMutationInputSchema,CustomerUncheckedUpdateManyInputSchema ]),
  where: CustomerWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CustomerDeleteManyArgsSchema: z.ZodType<Prisma.CustomerDeleteManyArgs> = z.object({
  where: CustomerWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FBAOrderCreateArgsSchema: z.ZodType<Prisma.FBAOrderCreateArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  data: z.union([ FBAOrderCreateInputSchema,FBAOrderUncheckedCreateInputSchema ]),
}).strict() ;

export const FBAOrderUpsertArgsSchema: z.ZodType<Prisma.FBAOrderUpsertArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereUniqueInputSchema,
  create: z.union([ FBAOrderCreateInputSchema,FBAOrderUncheckedCreateInputSchema ]),
  update: z.union([ FBAOrderUpdateInputSchema,FBAOrderUncheckedUpdateInputSchema ]),
}).strict() ;

export const FBAOrderCreateManyArgsSchema: z.ZodType<Prisma.FBAOrderCreateManyArgs> = z.object({
  data: z.union([ FBAOrderCreateManyInputSchema,FBAOrderCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const FBAOrderCreateManyAndReturnArgsSchema: z.ZodType<Prisma.FBAOrderCreateManyAndReturnArgs> = z.object({
  data: z.union([ FBAOrderCreateManyInputSchema,FBAOrderCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const FBAOrderDeleteArgsSchema: z.ZodType<Prisma.FBAOrderDeleteArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  where: FBAOrderWhereUniqueInputSchema,
}).strict() ;

export const FBAOrderUpdateArgsSchema: z.ZodType<Prisma.FBAOrderUpdateArgs> = z.object({
  select: FBAOrderSelectSchema.optional(),
  include: FBAOrderIncludeSchema.optional(),
  data: z.union([ FBAOrderUpdateInputSchema,FBAOrderUncheckedUpdateInputSchema ]),
  where: FBAOrderWhereUniqueInputSchema,
}).strict() ;

export const FBAOrderUpdateManyArgsSchema: z.ZodType<Prisma.FBAOrderUpdateManyArgs> = z.object({
  data: z.union([ FBAOrderUpdateManyMutationInputSchema,FBAOrderUncheckedUpdateManyInputSchema ]),
  where: FBAOrderWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FBAOrderUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.FBAOrderUpdateManyAndReturnArgs> = z.object({
  data: z.union([ FBAOrderUpdateManyMutationInputSchema,FBAOrderUncheckedUpdateManyInputSchema ]),
  where: FBAOrderWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FBAOrderDeleteManyArgsSchema: z.ZodType<Prisma.FBAOrderDeleteManyArgs> = z.object({
  where: FBAOrderWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const AttachmentCreateArgsSchema: z.ZodType<Prisma.AttachmentCreateArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  data: z.union([ AttachmentCreateInputSchema,AttachmentUncheckedCreateInputSchema ]),
}).strict() ;

export const AttachmentUpsertArgsSchema: z.ZodType<Prisma.AttachmentUpsertArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereUniqueInputSchema,
  create: z.union([ AttachmentCreateInputSchema,AttachmentUncheckedCreateInputSchema ]),
  update: z.union([ AttachmentUpdateInputSchema,AttachmentUncheckedUpdateInputSchema ]),
}).strict() ;

export const AttachmentCreateManyArgsSchema: z.ZodType<Prisma.AttachmentCreateManyArgs> = z.object({
  data: z.union([ AttachmentCreateManyInputSchema,AttachmentCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const AttachmentCreateManyAndReturnArgsSchema: z.ZodType<Prisma.AttachmentCreateManyAndReturnArgs> = z.object({
  data: z.union([ AttachmentCreateManyInputSchema,AttachmentCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const AttachmentDeleteArgsSchema: z.ZodType<Prisma.AttachmentDeleteArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  where: AttachmentWhereUniqueInputSchema,
}).strict() ;

export const AttachmentUpdateArgsSchema: z.ZodType<Prisma.AttachmentUpdateArgs> = z.object({
  select: AttachmentSelectSchema.optional(),
  include: AttachmentIncludeSchema.optional(),
  data: z.union([ AttachmentUpdateInputSchema,AttachmentUncheckedUpdateInputSchema ]),
  where: AttachmentWhereUniqueInputSchema,
}).strict() ;

export const AttachmentUpdateManyArgsSchema: z.ZodType<Prisma.AttachmentUpdateManyArgs> = z.object({
  data: z.union([ AttachmentUpdateManyMutationInputSchema,AttachmentUncheckedUpdateManyInputSchema ]),
  where: AttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const AttachmentUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.AttachmentUpdateManyAndReturnArgs> = z.object({
  data: z.union([ AttachmentUpdateManyMutationInputSchema,AttachmentUncheckedUpdateManyInputSchema ]),
  where: AttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const AttachmentDeleteManyArgsSchema: z.ZodType<Prisma.AttachmentDeleteManyArgs> = z.object({
  where: AttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CarrierCreateArgsSchema: z.ZodType<Prisma.CarrierCreateArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  data: z.union([ CarrierCreateInputSchema,CarrierUncheckedCreateInputSchema ]),
}).strict() ;

export const CarrierUpsertArgsSchema: z.ZodType<Prisma.CarrierUpsertArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereUniqueInputSchema,
  create: z.union([ CarrierCreateInputSchema,CarrierUncheckedCreateInputSchema ]),
  update: z.union([ CarrierUpdateInputSchema,CarrierUncheckedUpdateInputSchema ]),
}).strict() ;

export const CarrierCreateManyArgsSchema: z.ZodType<Prisma.CarrierCreateManyArgs> = z.object({
  data: z.union([ CarrierCreateManyInputSchema,CarrierCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const CarrierCreateManyAndReturnArgsSchema: z.ZodType<Prisma.CarrierCreateManyAndReturnArgs> = z.object({
  data: z.union([ CarrierCreateManyInputSchema,CarrierCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const CarrierDeleteArgsSchema: z.ZodType<Prisma.CarrierDeleteArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  where: CarrierWhereUniqueInputSchema,
}).strict() ;

export const CarrierUpdateArgsSchema: z.ZodType<Prisma.CarrierUpdateArgs> = z.object({
  select: CarrierSelectSchema.optional(),
  include: CarrierIncludeSchema.optional(),
  data: z.union([ CarrierUpdateInputSchema,CarrierUncheckedUpdateInputSchema ]),
  where: CarrierWhereUniqueInputSchema,
}).strict() ;

export const CarrierUpdateManyArgsSchema: z.ZodType<Prisma.CarrierUpdateManyArgs> = z.object({
  data: z.union([ CarrierUpdateManyMutationInputSchema,CarrierUncheckedUpdateManyInputSchema ]),
  where: CarrierWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CarrierUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.CarrierUpdateManyAndReturnArgs> = z.object({
  data: z.union([ CarrierUpdateManyMutationInputSchema,CarrierUncheckedUpdateManyInputSchema ]),
  where: CarrierWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const CarrierDeleteManyArgsSchema: z.ZodType<Prisma.CarrierDeleteManyArgs> = z.object({
  where: CarrierWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ChannelCreateArgsSchema: z.ZodType<Prisma.ChannelCreateArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  data: z.union([ ChannelCreateInputSchema,ChannelUncheckedCreateInputSchema ]),
}).strict() ;

export const ChannelUpsertArgsSchema: z.ZodType<Prisma.ChannelUpsertArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereUniqueInputSchema,
  create: z.union([ ChannelCreateInputSchema,ChannelUncheckedCreateInputSchema ]),
  update: z.union([ ChannelUpdateInputSchema,ChannelUncheckedUpdateInputSchema ]),
}).strict() ;

export const ChannelCreateManyArgsSchema: z.ZodType<Prisma.ChannelCreateManyArgs> = z.object({
  data: z.union([ ChannelCreateManyInputSchema,ChannelCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ChannelCreateManyAndReturnArgsSchema: z.ZodType<Prisma.ChannelCreateManyAndReturnArgs> = z.object({
  data: z.union([ ChannelCreateManyInputSchema,ChannelCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ChannelDeleteArgsSchema: z.ZodType<Prisma.ChannelDeleteArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  where: ChannelWhereUniqueInputSchema,
}).strict() ;

export const ChannelUpdateArgsSchema: z.ZodType<Prisma.ChannelUpdateArgs> = z.object({
  select: ChannelSelectSchema.optional(),
  include: ChannelIncludeSchema.optional(),
  data: z.union([ ChannelUpdateInputSchema,ChannelUncheckedUpdateInputSchema ]),
  where: ChannelWhereUniqueInputSchema,
}).strict() ;

export const ChannelUpdateManyArgsSchema: z.ZodType<Prisma.ChannelUpdateManyArgs> = z.object({
  data: z.union([ ChannelUpdateManyMutationInputSchema,ChannelUncheckedUpdateManyInputSchema ]),
  where: ChannelWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ChannelUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.ChannelUpdateManyAndReturnArgs> = z.object({
  data: z.union([ ChannelUpdateManyMutationInputSchema,ChannelUncheckedUpdateManyInputSchema ]),
  where: ChannelWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ChannelDeleteManyArgsSchema: z.ZodType<Prisma.ChannelDeleteManyArgs> = z.object({
  where: ChannelWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const RateRuleCreateArgsSchema: z.ZodType<Prisma.RateRuleCreateArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  data: z.union([ RateRuleCreateInputSchema,RateRuleUncheckedCreateInputSchema ]),
}).strict() ;

export const RateRuleUpsertArgsSchema: z.ZodType<Prisma.RateRuleUpsertArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereUniqueInputSchema,
  create: z.union([ RateRuleCreateInputSchema,RateRuleUncheckedCreateInputSchema ]),
  update: z.union([ RateRuleUpdateInputSchema,RateRuleUncheckedUpdateInputSchema ]),
}).strict() ;

export const RateRuleCreateManyArgsSchema: z.ZodType<Prisma.RateRuleCreateManyArgs> = z.object({
  data: z.union([ RateRuleCreateManyInputSchema,RateRuleCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const RateRuleCreateManyAndReturnArgsSchema: z.ZodType<Prisma.RateRuleCreateManyAndReturnArgs> = z.object({
  data: z.union([ RateRuleCreateManyInputSchema,RateRuleCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const RateRuleDeleteArgsSchema: z.ZodType<Prisma.RateRuleDeleteArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  where: RateRuleWhereUniqueInputSchema,
}).strict() ;

export const RateRuleUpdateArgsSchema: z.ZodType<Prisma.RateRuleUpdateArgs> = z.object({
  select: RateRuleSelectSchema.optional(),
  include: RateRuleIncludeSchema.optional(),
  data: z.union([ RateRuleUpdateInputSchema,RateRuleUncheckedUpdateInputSchema ]),
  where: RateRuleWhereUniqueInputSchema,
}).strict() ;

export const RateRuleUpdateManyArgsSchema: z.ZodType<Prisma.RateRuleUpdateManyArgs> = z.object({
  data: z.union([ RateRuleUpdateManyMutationInputSchema,RateRuleUncheckedUpdateManyInputSchema ]),
  where: RateRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const RateRuleUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.RateRuleUpdateManyAndReturnArgs> = z.object({
  data: z.union([ RateRuleUpdateManyMutationInputSchema,RateRuleUncheckedUpdateManyInputSchema ]),
  where: RateRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const RateRuleDeleteManyArgsSchema: z.ZodType<Prisma.RateRuleDeleteManyArgs> = z.object({
  where: RateRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const WaybillRuleCreateArgsSchema: z.ZodType<Prisma.WaybillRuleCreateArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  data: z.union([ WaybillRuleCreateInputSchema,WaybillRuleUncheckedCreateInputSchema ]),
}).strict() ;

export const WaybillRuleUpsertArgsSchema: z.ZodType<Prisma.WaybillRuleUpsertArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereUniqueInputSchema,
  create: z.union([ WaybillRuleCreateInputSchema,WaybillRuleUncheckedCreateInputSchema ]),
  update: z.union([ WaybillRuleUpdateInputSchema,WaybillRuleUncheckedUpdateInputSchema ]),
}).strict() ;

export const WaybillRuleCreateManyArgsSchema: z.ZodType<Prisma.WaybillRuleCreateManyArgs> = z.object({
  data: z.union([ WaybillRuleCreateManyInputSchema,WaybillRuleCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const WaybillRuleCreateManyAndReturnArgsSchema: z.ZodType<Prisma.WaybillRuleCreateManyAndReturnArgs> = z.object({
  data: z.union([ WaybillRuleCreateManyInputSchema,WaybillRuleCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const WaybillRuleDeleteArgsSchema: z.ZodType<Prisma.WaybillRuleDeleteArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  where: WaybillRuleWhereUniqueInputSchema,
}).strict() ;

export const WaybillRuleUpdateArgsSchema: z.ZodType<Prisma.WaybillRuleUpdateArgs> = z.object({
  select: WaybillRuleSelectSchema.optional(),
  include: WaybillRuleIncludeSchema.optional(),
  data: z.union([ WaybillRuleUpdateInputSchema,WaybillRuleUncheckedUpdateInputSchema ]),
  where: WaybillRuleWhereUniqueInputSchema,
}).strict() ;

export const WaybillRuleUpdateManyArgsSchema: z.ZodType<Prisma.WaybillRuleUpdateManyArgs> = z.object({
  data: z.union([ WaybillRuleUpdateManyMutationInputSchema,WaybillRuleUncheckedUpdateManyInputSchema ]),
  where: WaybillRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const WaybillRuleUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.WaybillRuleUpdateManyAndReturnArgs> = z.object({
  data: z.union([ WaybillRuleUpdateManyMutationInputSchema,WaybillRuleUncheckedUpdateManyInputSchema ]),
  where: WaybillRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const WaybillRuleDeleteManyArgsSchema: z.ZodType<Prisma.WaybillRuleDeleteManyArgs> = z.object({
  where: WaybillRuleWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ReceivableCreateArgsSchema: z.ZodType<Prisma.ReceivableCreateArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  data: z.union([ ReceivableCreateInputSchema,ReceivableUncheckedCreateInputSchema ]),
}).strict() ;

export const ReceivableUpsertArgsSchema: z.ZodType<Prisma.ReceivableUpsertArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereUniqueInputSchema,
  create: z.union([ ReceivableCreateInputSchema,ReceivableUncheckedCreateInputSchema ]),
  update: z.union([ ReceivableUpdateInputSchema,ReceivableUncheckedUpdateInputSchema ]),
}).strict() ;

export const ReceivableCreateManyArgsSchema: z.ZodType<Prisma.ReceivableCreateManyArgs> = z.object({
  data: z.union([ ReceivableCreateManyInputSchema,ReceivableCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ReceivableCreateManyAndReturnArgsSchema: z.ZodType<Prisma.ReceivableCreateManyAndReturnArgs> = z.object({
  data: z.union([ ReceivableCreateManyInputSchema,ReceivableCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const ReceivableDeleteArgsSchema: z.ZodType<Prisma.ReceivableDeleteArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  where: ReceivableWhereUniqueInputSchema,
}).strict() ;

export const ReceivableUpdateArgsSchema: z.ZodType<Prisma.ReceivableUpdateArgs> = z.object({
  select: ReceivableSelectSchema.optional(),
  include: ReceivableIncludeSchema.optional(),
  data: z.union([ ReceivableUpdateInputSchema,ReceivableUncheckedUpdateInputSchema ]),
  where: ReceivableWhereUniqueInputSchema,
}).strict() ;

export const ReceivableUpdateManyArgsSchema: z.ZodType<Prisma.ReceivableUpdateManyArgs> = z.object({
  data: z.union([ ReceivableUpdateManyMutationInputSchema,ReceivableUncheckedUpdateManyInputSchema ]),
  where: ReceivableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ReceivableUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.ReceivableUpdateManyAndReturnArgs> = z.object({
  data: z.union([ ReceivableUpdateManyMutationInputSchema,ReceivableUncheckedUpdateManyInputSchema ]),
  where: ReceivableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const ReceivableDeleteManyArgsSchema: z.ZodType<Prisma.ReceivableDeleteManyArgs> = z.object({
  where: ReceivableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PayableCreateArgsSchema: z.ZodType<Prisma.PayableCreateArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  data: z.union([ PayableCreateInputSchema,PayableUncheckedCreateInputSchema ]),
}).strict() ;

export const PayableUpsertArgsSchema: z.ZodType<Prisma.PayableUpsertArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereUniqueInputSchema,
  create: z.union([ PayableCreateInputSchema,PayableUncheckedCreateInputSchema ]),
  update: z.union([ PayableUpdateInputSchema,PayableUncheckedUpdateInputSchema ]),
}).strict() ;

export const PayableCreateManyArgsSchema: z.ZodType<Prisma.PayableCreateManyArgs> = z.object({
  data: z.union([ PayableCreateManyInputSchema,PayableCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PayableCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PayableCreateManyAndReturnArgs> = z.object({
  data: z.union([ PayableCreateManyInputSchema,PayableCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PayableDeleteArgsSchema: z.ZodType<Prisma.PayableDeleteArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  where: PayableWhereUniqueInputSchema,
}).strict() ;

export const PayableUpdateArgsSchema: z.ZodType<Prisma.PayableUpdateArgs> = z.object({
  select: PayableSelectSchema.optional(),
  include: PayableIncludeSchema.optional(),
  data: z.union([ PayableUpdateInputSchema,PayableUncheckedUpdateInputSchema ]),
  where: PayableWhereUniqueInputSchema,
}).strict() ;

export const PayableUpdateManyArgsSchema: z.ZodType<Prisma.PayableUpdateManyArgs> = z.object({
  data: z.union([ PayableUpdateManyMutationInputSchema,PayableUncheckedUpdateManyInputSchema ]),
  where: PayableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PayableUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PayableUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PayableUpdateManyMutationInputSchema,PayableUncheckedUpdateManyInputSchema ]),
  where: PayableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PayableDeleteManyArgsSchema: z.ZodType<Prisma.PayableDeleteManyArgs> = z.object({
  where: PayableWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const TransportPriceCreateArgsSchema: z.ZodType<Prisma.TransportPriceCreateArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  data: z.union([ TransportPriceCreateInputSchema,TransportPriceUncheckedCreateInputSchema ]),
}).strict() ;

export const TransportPriceUpsertArgsSchema: z.ZodType<Prisma.TransportPriceUpsertArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereUniqueInputSchema,
  create: z.union([ TransportPriceCreateInputSchema,TransportPriceUncheckedCreateInputSchema ]),
  update: z.union([ TransportPriceUpdateInputSchema,TransportPriceUncheckedUpdateInputSchema ]),
}).strict() ;

export const TransportPriceCreateManyArgsSchema: z.ZodType<Prisma.TransportPriceCreateManyArgs> = z.object({
  data: z.union([ TransportPriceCreateManyInputSchema,TransportPriceCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const TransportPriceCreateManyAndReturnArgsSchema: z.ZodType<Prisma.TransportPriceCreateManyAndReturnArgs> = z.object({
  data: z.union([ TransportPriceCreateManyInputSchema,TransportPriceCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const TransportPriceDeleteArgsSchema: z.ZodType<Prisma.TransportPriceDeleteArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  where: TransportPriceWhereUniqueInputSchema,
}).strict() ;

export const TransportPriceUpdateArgsSchema: z.ZodType<Prisma.TransportPriceUpdateArgs> = z.object({
  select: TransportPriceSelectSchema.optional(),
  include: TransportPriceIncludeSchema.optional(),
  data: z.union([ TransportPriceUpdateInputSchema,TransportPriceUncheckedUpdateInputSchema ]),
  where: TransportPriceWhereUniqueInputSchema,
}).strict() ;

export const TransportPriceUpdateManyArgsSchema: z.ZodType<Prisma.TransportPriceUpdateManyArgs> = z.object({
  data: z.union([ TransportPriceUpdateManyMutationInputSchema,TransportPriceUncheckedUpdateManyInputSchema ]),
  where: TransportPriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const TransportPriceUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.TransportPriceUpdateManyAndReturnArgs> = z.object({
  data: z.union([ TransportPriceUpdateManyMutationInputSchema,TransportPriceUncheckedUpdateManyInputSchema ]),
  where: TransportPriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const TransportPriceDeleteManyArgsSchema: z.ZodType<Prisma.TransportPriceDeleteManyArgs> = z.object({
  where: TransportPriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceSettingCreateArgsSchema: z.ZodType<Prisma.PriceSettingCreateArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  data: z.union([ PriceSettingCreateInputSchema,PriceSettingUncheckedCreateInputSchema ]),
}).strict() ;

export const PriceSettingUpsertArgsSchema: z.ZodType<Prisma.PriceSettingUpsertArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereUniqueInputSchema,
  create: z.union([ PriceSettingCreateInputSchema,PriceSettingUncheckedCreateInputSchema ]),
  update: z.union([ PriceSettingUpdateInputSchema,PriceSettingUncheckedUpdateInputSchema ]),
}).strict() ;

export const PriceSettingCreateManyArgsSchema: z.ZodType<Prisma.PriceSettingCreateManyArgs> = z.object({
  data: z.union([ PriceSettingCreateManyInputSchema,PriceSettingCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PriceSettingCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PriceSettingCreateManyAndReturnArgs> = z.object({
  data: z.union([ PriceSettingCreateManyInputSchema,PriceSettingCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PriceSettingDeleteArgsSchema: z.ZodType<Prisma.PriceSettingDeleteArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  where: PriceSettingWhereUniqueInputSchema,
}).strict() ;

export const PriceSettingUpdateArgsSchema: z.ZodType<Prisma.PriceSettingUpdateArgs> = z.object({
  select: PriceSettingSelectSchema.optional(),
  include: PriceSettingIncludeSchema.optional(),
  data: z.union([ PriceSettingUpdateInputSchema,PriceSettingUncheckedUpdateInputSchema ]),
  where: PriceSettingWhereUniqueInputSchema,
}).strict() ;

export const PriceSettingUpdateManyArgsSchema: z.ZodType<Prisma.PriceSettingUpdateManyArgs> = z.object({
  data: z.union([ PriceSettingUpdateManyMutationInputSchema,PriceSettingUncheckedUpdateManyInputSchema ]),
  where: PriceSettingWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceSettingUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PriceSettingUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PriceSettingUpdateManyMutationInputSchema,PriceSettingUncheckedUpdateManyInputSchema ]),
  where: PriceSettingWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceSettingDeleteManyArgsSchema: z.ZodType<Prisma.PriceSettingDeleteManyArgs> = z.object({
  where: PriceSettingWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceCreateArgsSchema: z.ZodType<Prisma.PriceCreateArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  data: z.union([ PriceCreateInputSchema,PriceUncheckedCreateInputSchema ]),
}).strict() ;

export const PriceUpsertArgsSchema: z.ZodType<Prisma.PriceUpsertArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereUniqueInputSchema,
  create: z.union([ PriceCreateInputSchema,PriceUncheckedCreateInputSchema ]),
  update: z.union([ PriceUpdateInputSchema,PriceUncheckedUpdateInputSchema ]),
}).strict() ;

export const PriceCreateManyArgsSchema: z.ZodType<Prisma.PriceCreateManyArgs> = z.object({
  data: z.union([ PriceCreateManyInputSchema,PriceCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PriceCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PriceCreateManyAndReturnArgs> = z.object({
  data: z.union([ PriceCreateManyInputSchema,PriceCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PriceDeleteArgsSchema: z.ZodType<Prisma.PriceDeleteArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  where: PriceWhereUniqueInputSchema,
}).strict() ;

export const PriceUpdateArgsSchema: z.ZodType<Prisma.PriceUpdateArgs> = z.object({
  select: PriceSelectSchema.optional(),
  include: PriceIncludeSchema.optional(),
  data: z.union([ PriceUpdateInputSchema,PriceUncheckedUpdateInputSchema ]),
  where: PriceWhereUniqueInputSchema,
}).strict() ;

export const PriceUpdateManyArgsSchema: z.ZodType<Prisma.PriceUpdateManyArgs> = z.object({
  data: z.union([ PriceUpdateManyMutationInputSchema,PriceUncheckedUpdateManyInputSchema ]),
  where: PriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PriceUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PriceUpdateManyMutationInputSchema,PriceUncheckedUpdateManyInputSchema ]),
  where: PriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PriceDeleteManyArgsSchema: z.ZodType<Prisma.PriceDeleteManyArgs> = z.object({
  where: PriceWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionCreateArgsSchema: z.ZodType<Prisma.PositionCreateArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  data: z.union([ PositionCreateInputSchema,PositionUncheckedCreateInputSchema ]),
}).strict() ;

export const PositionUpsertArgsSchema: z.ZodType<Prisma.PositionUpsertArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereUniqueInputSchema,
  create: z.union([ PositionCreateInputSchema,PositionUncheckedCreateInputSchema ]),
  update: z.union([ PositionUpdateInputSchema,PositionUncheckedUpdateInputSchema ]),
}).strict() ;

export const PositionCreateManyArgsSchema: z.ZodType<Prisma.PositionCreateManyArgs> = z.object({
  data: z.union([ PositionCreateManyInputSchema,PositionCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PositionCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PositionCreateManyAndReturnArgs> = z.object({
  data: z.union([ PositionCreateManyInputSchema,PositionCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PositionDeleteArgsSchema: z.ZodType<Prisma.PositionDeleteArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  where: PositionWhereUniqueInputSchema,
}).strict() ;

export const PositionUpdateArgsSchema: z.ZodType<Prisma.PositionUpdateArgs> = z.object({
  select: PositionSelectSchema.optional(),
  include: PositionIncludeSchema.optional(),
  data: z.union([ PositionUpdateInputSchema,PositionUncheckedUpdateInputSchema ]),
  where: PositionWhereUniqueInputSchema,
}).strict() ;

export const PositionUpdateManyArgsSchema: z.ZodType<Prisma.PositionUpdateManyArgs> = z.object({
  data: z.union([ PositionUpdateManyMutationInputSchema,PositionUncheckedUpdateManyInputSchema ]),
  where: PositionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PositionUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PositionUpdateManyMutationInputSchema,PositionUncheckedUpdateManyInputSchema ]),
  where: PositionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionDeleteManyArgsSchema: z.ZodType<Prisma.PositionDeleteManyArgs> = z.object({
  where: PositionWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionMemberCreateArgsSchema: z.ZodType<Prisma.PositionMemberCreateArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  data: z.union([ PositionMemberCreateInputSchema,PositionMemberUncheckedCreateInputSchema ]),
}).strict() ;

export const PositionMemberUpsertArgsSchema: z.ZodType<Prisma.PositionMemberUpsertArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereUniqueInputSchema,
  create: z.union([ PositionMemberCreateInputSchema,PositionMemberUncheckedCreateInputSchema ]),
  update: z.union([ PositionMemberUpdateInputSchema,PositionMemberUncheckedUpdateInputSchema ]),
}).strict() ;

export const PositionMemberCreateManyArgsSchema: z.ZodType<Prisma.PositionMemberCreateManyArgs> = z.object({
  data: z.union([ PositionMemberCreateManyInputSchema,PositionMemberCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PositionMemberCreateManyAndReturnArgsSchema: z.ZodType<Prisma.PositionMemberCreateManyAndReturnArgs> = z.object({
  data: z.union([ PositionMemberCreateManyInputSchema,PositionMemberCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const PositionMemberDeleteArgsSchema: z.ZodType<Prisma.PositionMemberDeleteArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  where: PositionMemberWhereUniqueInputSchema,
}).strict() ;

export const PositionMemberUpdateArgsSchema: z.ZodType<Prisma.PositionMemberUpdateArgs> = z.object({
  select: PositionMemberSelectSchema.optional(),
  include: PositionMemberIncludeSchema.optional(),
  data: z.union([ PositionMemberUpdateInputSchema,PositionMemberUncheckedUpdateInputSchema ]),
  where: PositionMemberWhereUniqueInputSchema,
}).strict() ;

export const PositionMemberUpdateManyArgsSchema: z.ZodType<Prisma.PositionMemberUpdateManyArgs> = z.object({
  data: z.union([ PositionMemberUpdateManyMutationInputSchema,PositionMemberUncheckedUpdateManyInputSchema ]),
  where: PositionMemberWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionMemberUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.PositionMemberUpdateManyAndReturnArgs> = z.object({
  data: z.union([ PositionMemberUpdateManyMutationInputSchema,PositionMemberUncheckedUpdateManyInputSchema ]),
  where: PositionMemberWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const PositionMemberDeleteManyArgsSchema: z.ZodType<Prisma.PositionMemberDeleteManyArgs> = z.object({
  where: PositionMemberWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const LoginLogCreateArgsSchema: z.ZodType<Prisma.LoginLogCreateArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  data: z.union([ LoginLogCreateInputSchema,LoginLogUncheckedCreateInputSchema ]),
}).strict() ;

export const LoginLogUpsertArgsSchema: z.ZodType<Prisma.LoginLogUpsertArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereUniqueInputSchema,
  create: z.union([ LoginLogCreateInputSchema,LoginLogUncheckedCreateInputSchema ]),
  update: z.union([ LoginLogUpdateInputSchema,LoginLogUncheckedUpdateInputSchema ]),
}).strict() ;

export const LoginLogCreateManyArgsSchema: z.ZodType<Prisma.LoginLogCreateManyArgs> = z.object({
  data: z.union([ LoginLogCreateManyInputSchema,LoginLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const LoginLogCreateManyAndReturnArgsSchema: z.ZodType<Prisma.LoginLogCreateManyAndReturnArgs> = z.object({
  data: z.union([ LoginLogCreateManyInputSchema,LoginLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const LoginLogDeleteArgsSchema: z.ZodType<Prisma.LoginLogDeleteArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  where: LoginLogWhereUniqueInputSchema,
}).strict() ;

export const LoginLogUpdateArgsSchema: z.ZodType<Prisma.LoginLogUpdateArgs> = z.object({
  select: LoginLogSelectSchema.optional(),
  include: LoginLogIncludeSchema.optional(),
  data: z.union([ LoginLogUpdateInputSchema,LoginLogUncheckedUpdateInputSchema ]),
  where: LoginLogWhereUniqueInputSchema,
}).strict() ;

export const LoginLogUpdateManyArgsSchema: z.ZodType<Prisma.LoginLogUpdateManyArgs> = z.object({
  data: z.union([ LoginLogUpdateManyMutationInputSchema,LoginLogUncheckedUpdateManyInputSchema ]),
  where: LoginLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const LoginLogUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.LoginLogUpdateManyAndReturnArgs> = z.object({
  data: z.union([ LoginLogUpdateManyMutationInputSchema,LoginLogUncheckedUpdateManyInputSchema ]),
  where: LoginLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const LoginLogDeleteManyArgsSchema: z.ZodType<Prisma.LoginLogDeleteManyArgs> = z.object({
  where: LoginLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FinanceBillCreateArgsSchema: z.ZodType<Prisma.FinanceBillCreateArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  data: z.union([ FinanceBillCreateInputSchema,FinanceBillUncheckedCreateInputSchema ]),
}).strict() ;

export const FinanceBillUpsertArgsSchema: z.ZodType<Prisma.FinanceBillUpsertArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereUniqueInputSchema,
  create: z.union([ FinanceBillCreateInputSchema,FinanceBillUncheckedCreateInputSchema ]),
  update: z.union([ FinanceBillUpdateInputSchema,FinanceBillUncheckedUpdateInputSchema ]),
}).strict() ;

export const FinanceBillCreateManyArgsSchema: z.ZodType<Prisma.FinanceBillCreateManyArgs> = z.object({
  data: z.union([ FinanceBillCreateManyInputSchema,FinanceBillCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const FinanceBillCreateManyAndReturnArgsSchema: z.ZodType<Prisma.FinanceBillCreateManyAndReturnArgs> = z.object({
  data: z.union([ FinanceBillCreateManyInputSchema,FinanceBillCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const FinanceBillDeleteArgsSchema: z.ZodType<Prisma.FinanceBillDeleteArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  where: FinanceBillWhereUniqueInputSchema,
}).strict() ;

export const FinanceBillUpdateArgsSchema: z.ZodType<Prisma.FinanceBillUpdateArgs> = z.object({
  select: FinanceBillSelectSchema.optional(),
  include: FinanceBillIncludeSchema.optional(),
  data: z.union([ FinanceBillUpdateInputSchema,FinanceBillUncheckedUpdateInputSchema ]),
  where: FinanceBillWhereUniqueInputSchema,
}).strict() ;

export const FinanceBillUpdateManyArgsSchema: z.ZodType<Prisma.FinanceBillUpdateManyArgs> = z.object({
  data: z.union([ FinanceBillUpdateManyMutationInputSchema,FinanceBillUncheckedUpdateManyInputSchema ]),
  where: FinanceBillWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FinanceBillUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.FinanceBillUpdateManyAndReturnArgs> = z.object({
  data: z.union([ FinanceBillUpdateManyMutationInputSchema,FinanceBillUncheckedUpdateManyInputSchema ]),
  where: FinanceBillWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const FinanceBillDeleteManyArgsSchema: z.ZodType<Prisma.FinanceBillDeleteManyArgs> = z.object({
  where: FinanceBillWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillLogCreateArgsSchema: z.ZodType<Prisma.BillLogCreateArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  data: z.union([ BillLogCreateInputSchema,BillLogUncheckedCreateInputSchema ]),
}).strict() ;

export const BillLogUpsertArgsSchema: z.ZodType<Prisma.BillLogUpsertArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereUniqueInputSchema,
  create: z.union([ BillLogCreateInputSchema,BillLogUncheckedCreateInputSchema ]),
  update: z.union([ BillLogUpdateInputSchema,BillLogUncheckedUpdateInputSchema ]),
}).strict() ;

export const BillLogCreateManyArgsSchema: z.ZodType<Prisma.BillLogCreateManyArgs> = z.object({
  data: z.union([ BillLogCreateManyInputSchema,BillLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BillLogCreateManyAndReturnArgsSchema: z.ZodType<Prisma.BillLogCreateManyAndReturnArgs> = z.object({
  data: z.union([ BillLogCreateManyInputSchema,BillLogCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BillLogDeleteArgsSchema: z.ZodType<Prisma.BillLogDeleteArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  where: BillLogWhereUniqueInputSchema,
}).strict() ;

export const BillLogUpdateArgsSchema: z.ZodType<Prisma.BillLogUpdateArgs> = z.object({
  select: BillLogSelectSchema.optional(),
  include: BillLogIncludeSchema.optional(),
  data: z.union([ BillLogUpdateInputSchema,BillLogUncheckedUpdateInputSchema ]),
  where: BillLogWhereUniqueInputSchema,
}).strict() ;

export const BillLogUpdateManyArgsSchema: z.ZodType<Prisma.BillLogUpdateManyArgs> = z.object({
  data: z.union([ BillLogUpdateManyMutationInputSchema,BillLogUncheckedUpdateManyInputSchema ]),
  where: BillLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillLogUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.BillLogUpdateManyAndReturnArgs> = z.object({
  data: z.union([ BillLogUpdateManyMutationInputSchema,BillLogUncheckedUpdateManyInputSchema ]),
  where: BillLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillLogDeleteManyArgsSchema: z.ZodType<Prisma.BillLogDeleteManyArgs> = z.object({
  where: BillLogWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillAttachmentCreateArgsSchema: z.ZodType<Prisma.BillAttachmentCreateArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  data: z.union([ BillAttachmentCreateInputSchema,BillAttachmentUncheckedCreateInputSchema ]),
}).strict() ;

export const BillAttachmentUpsertArgsSchema: z.ZodType<Prisma.BillAttachmentUpsertArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereUniqueInputSchema,
  create: z.union([ BillAttachmentCreateInputSchema,BillAttachmentUncheckedCreateInputSchema ]),
  update: z.union([ BillAttachmentUpdateInputSchema,BillAttachmentUncheckedUpdateInputSchema ]),
}).strict() ;

export const BillAttachmentCreateManyArgsSchema: z.ZodType<Prisma.BillAttachmentCreateManyArgs> = z.object({
  data: z.union([ BillAttachmentCreateManyInputSchema,BillAttachmentCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BillAttachmentCreateManyAndReturnArgsSchema: z.ZodType<Prisma.BillAttachmentCreateManyAndReturnArgs> = z.object({
  data: z.union([ BillAttachmentCreateManyInputSchema,BillAttachmentCreateManyInputSchema.array() ]),
  skipDuplicates: z.boolean().optional(),
}).strict() ;

export const BillAttachmentDeleteArgsSchema: z.ZodType<Prisma.BillAttachmentDeleteArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  where: BillAttachmentWhereUniqueInputSchema,
}).strict() ;

export const BillAttachmentUpdateArgsSchema: z.ZodType<Prisma.BillAttachmentUpdateArgs> = z.object({
  select: BillAttachmentSelectSchema.optional(),
  include: BillAttachmentIncludeSchema.optional(),
  data: z.union([ BillAttachmentUpdateInputSchema,BillAttachmentUncheckedUpdateInputSchema ]),
  where: BillAttachmentWhereUniqueInputSchema,
}).strict() ;

export const BillAttachmentUpdateManyArgsSchema: z.ZodType<Prisma.BillAttachmentUpdateManyArgs> = z.object({
  data: z.union([ BillAttachmentUpdateManyMutationInputSchema,BillAttachmentUncheckedUpdateManyInputSchema ]),
  where: BillAttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillAttachmentUpdateManyAndReturnArgsSchema: z.ZodType<Prisma.BillAttachmentUpdateManyAndReturnArgs> = z.object({
  data: z.union([ BillAttachmentUpdateManyMutationInputSchema,BillAttachmentUncheckedUpdateManyInputSchema ]),
  where: BillAttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;

export const BillAttachmentDeleteManyArgsSchema: z.ZodType<Prisma.BillAttachmentDeleteManyArgs> = z.object({
  where: BillAttachmentWhereInputSchema.optional(),
  limit: z.number().optional(),
}).strict() ;